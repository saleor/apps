/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {

    'AccountAddressCreate': { kind: 'OBJECT'; name: 'AccountAddressCreate'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'address': { name: 'address'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'AccountAddressDelete': { kind: 'OBJECT'; name: 'AccountAddressDelete'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'address': { name: 'address'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'AccountAddressUpdate': { kind: 'OBJECT'; name: 'AccountAddressUpdate'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'address': { name: 'address'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'AccountChangeEmailRequested': { kind: 'OBJECT'; name: 'AccountChangeEmailRequested'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'newEmail': { name: 'newEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'redirectUrl': { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AccountConfirmationRequested': { kind: 'OBJECT'; name: 'AccountConfirmationRequested'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'redirectUrl': { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AccountConfirmed': { kind: 'OBJECT'; name: 'AccountConfirmed'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'redirectUrl': { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AccountDelete': { kind: 'OBJECT'; name: 'AccountDelete'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'AccountDeleteRequested': { kind: 'OBJECT'; name: 'AccountDeleteRequested'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'redirectUrl': { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AccountDeleted': { kind: 'OBJECT'; name: 'AccountDeleted'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'redirectUrl': { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AccountEmailChanged': { kind: 'OBJECT'; name: 'AccountEmailChanged'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'newEmail': { name: 'newEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'redirectUrl': { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AccountError': { kind: 'OBJECT'; name: 'AccountError'; fields: { 'addressType': { name: 'addressType'; type: { kind: 'ENUM'; name: 'AddressTypeEnum'; ofType: null; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AccountErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AccountErrorCode': { name: 'AccountErrorCode'; enumValues: 'ACTIVATE_OWN_ACCOUNT' | 'ACTIVATE_SUPERUSER_ACCOUNT' | 'DUPLICATED_INPUT_ITEM' | 'DEACTIVATE_OWN_ACCOUNT' | 'DEACTIVATE_SUPERUSER_ACCOUNT' | 'DELETE_NON_STAFF_USER' | 'DELETE_OWN_ACCOUNT' | 'DELETE_STAFF_ACCOUNT' | 'DELETE_SUPERUSER_ACCOUNT' | 'GRAPHQL_ERROR' | 'INACTIVE' | 'INVALID' | 'INVALID_PASSWORD' | 'LEFT_NOT_MANAGEABLE_PERMISSION' | 'INVALID_CREDENTIALS' | 'NOT_FOUND' | 'OUT_OF_SCOPE_USER' | 'OUT_OF_SCOPE_GROUP' | 'OUT_OF_SCOPE_PERMISSION' | 'PASSWORD_ENTIRELY_NUMERIC' | 'PASSWORD_TOO_COMMON' | 'PASSWORD_TOO_SHORT' | 'PASSWORD_TOO_SIMILAR' | 'PASSWORD_RESET_ALREADY_REQUESTED' | 'REQUIRED' | 'UNIQUE' | 'JWT_SIGNATURE_EXPIRED' | 'JWT_INVALID_TOKEN' | 'JWT_DECODE_ERROR' | 'JWT_MISSING_TOKEN' | 'JWT_INVALID_CSRF_TOKEN' | 'CHANNEL_INACTIVE' | 'MISSING_CHANNEL_SLUG' | 'ACCOUNT_NOT_CONFIRMED' | 'LOGIN_ATTEMPT_DELAYED' | 'UNKNOWN_IP_ADDRESS'; };
    'AccountInput': { kind: 'INPUT_OBJECT'; name: 'AccountInput'; isOneOf: false; inputFields: [{ name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'languageCode'; type: { kind: 'ENUM'; name: 'LanguageCodeEnum'; ofType: null; }; defaultValue: null }, { name: 'defaultBillingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'defaultShippingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'AccountRegister': { kind: 'OBJECT'; name: 'AccountRegister'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'requiresConfirmation': { name: 'requiresConfirmation'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'AccountRegisterInput': { kind: 'INPUT_OBJECT'; name: 'AccountRegisterInput'; isOneOf: false; inputFields: [{ name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'languageCode'; type: { kind: 'ENUM'; name: 'LanguageCodeEnum'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'password'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AccountRequestDeletion': { kind: 'OBJECT'; name: 'AccountRequestDeletion'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; }; };
    'AccountSetDefaultAddress': { kind: 'OBJECT'; name: 'AccountSetDefaultAddress'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'AccountSetPasswordRequested': { kind: 'OBJECT'; name: 'AccountSetPasswordRequested'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'redirectUrl': { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AccountUpdate': { kind: 'OBJECT'; name: 'AccountUpdate'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'Address': { kind: 'OBJECT'; name: 'Address'; fields: { 'city': { name: 'city'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'cityArea': { name: 'cityArea'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'companyName': { name: 'companyName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'country': { name: 'country'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CountryDisplay'; ofType: null; }; } }; 'countryArea': { name: 'countryArea'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'firstName': { name: 'firstName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isDefaultBillingAddress': { name: 'isDefaultBillingAddress'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'isDefaultShippingAddress': { name: 'isDefaultShippingAddress'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'lastName': { name: 'lastName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'phone': { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'postalCode': { name: 'postalCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'streetAddress1': { name: 'streetAddress1'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'streetAddress2': { name: 'streetAddress2'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AddressCreate': { kind: 'OBJECT'; name: 'AddressCreate'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'address': { name: 'address'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'AddressCreated': { kind: 'OBJECT'; name: 'AddressCreated'; fields: { 'address': { name: 'address'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AddressDelete': { kind: 'OBJECT'; name: 'AddressDelete'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'address': { name: 'address'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'AddressDeleted': { kind: 'OBJECT'; name: 'AddressDeleted'; fields: { 'address': { name: 'address'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AddressInput': { kind: 'INPUT_OBJECT'; name: 'AddressInput'; isOneOf: false; inputFields: [{ name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'companyName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'streetAddress1'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'streetAddress2'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'city'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'cityArea'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'postalCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'country'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; defaultValue: null }, { name: 'countryArea'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'phone'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'skipValidation'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'AddressSetDefault': { kind: 'OBJECT'; name: 'AddressSetDefault'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'AddressTypeEnum': { name: 'AddressTypeEnum'; enumValues: 'BILLING' | 'SHIPPING'; };
    'AddressUpdate': { kind: 'OBJECT'; name: 'AddressUpdate'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'address': { name: 'address'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'AddressUpdated': { kind: 'OBJECT'; name: 'AddressUpdated'; fields: { 'address': { name: 'address'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AddressValidationData': { kind: 'OBJECT'; name: 'AddressValidationData'; fields: { 'addressFormat': { name: 'addressFormat'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'addressLatinFormat': { name: 'addressLatinFormat'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'allowedFields': { name: 'allowedFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'cityAreaChoices': { name: 'cityAreaChoices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChoiceValue'; ofType: null; }; }; }; } }; 'cityAreaType': { name: 'cityAreaType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'cityChoices': { name: 'cityChoices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChoiceValue'; ofType: null; }; }; }; } }; 'cityType': { name: 'cityType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'countryAreaChoices': { name: 'countryAreaChoices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChoiceValue'; ofType: null; }; }; }; } }; 'countryAreaType': { name: 'countryAreaType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'countryCode': { name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'countryName': { name: 'countryName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'postalCodeExamples': { name: 'postalCodeExamples'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'postalCodeMatchers': { name: 'postalCodeMatchers'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'postalCodePrefix': { name: 'postalCodePrefix'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'postalCodeType': { name: 'postalCodeType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'requiredFields': { name: 'requiredFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'upperFields': { name: 'upperFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'Allocation': { kind: 'OBJECT'; name: 'Allocation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; }; } }; }; };
    'AllocationStrategyEnum': { name: 'AllocationStrategyEnum'; enumValues: 'PRIORITIZE_SORTING_ORDER' | 'PRIORITIZE_HIGH_STOCK'; };
    'App': { kind: 'OBJECT'; name: 'App'; fields: { 'aboutApp': { name: 'aboutApp'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'accessToken': { name: 'accessToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'appUrl': { name: 'appUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'author': { name: 'author'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'brand': { name: 'brand'; type: { kind: 'OBJECT'; name: 'AppBrand'; ofType: null; } }; 'configurationUrl': { name: 'configurationUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'created': { name: 'created'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'dataPrivacy': { name: 'dataPrivacy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dataPrivacyUrl': { name: 'dataPrivacyUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'extensions': { name: 'extensions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppExtension'; ofType: null; }; }; }; } }; 'homepageUrl': { name: 'homepageUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'identifier': { name: 'identifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'isActive': { name: 'isActive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'manifestUrl': { name: 'manifestUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'permissions': { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Permission'; ofType: null; }; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'supportUrl': { name: 'supportUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tokens': { name: 'tokens'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppToken'; ofType: null; }; }; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'AppTypeEnum'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'webhooks': { name: 'webhooks'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Webhook'; ofType: null; }; }; } }; }; };
    'AppActivate': { kind: 'OBJECT'; name: 'AppActivate'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'appErrors': { name: 'appErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; }; };
    'AppBrand': { kind: 'OBJECT'; name: 'AppBrand'; fields: { 'logo': { name: 'logo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppBrandLogo'; ofType: null; }; } }; }; };
    'AppBrandLogo': { kind: 'OBJECT'; name: 'AppBrandLogo'; fields: { 'default': { name: 'default'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AppCountableConnection': { kind: 'OBJECT'; name: 'AppCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'AppCountableEdge': { kind: 'OBJECT'; name: 'AppCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; }; };
    'AppCreate': { kind: 'OBJECT'; name: 'AppCreate'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'appErrors': { name: 'appErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; 'authToken': { name: 'authToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; }; };
    'AppDeactivate': { kind: 'OBJECT'; name: 'AppDeactivate'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'appErrors': { name: 'appErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; }; };
    'AppDelete': { kind: 'OBJECT'; name: 'AppDelete'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'appErrors': { name: 'appErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; }; };
    'AppDeleteFailedInstallation': { kind: 'OBJECT'; name: 'AppDeleteFailedInstallation'; fields: { 'appErrors': { name: 'appErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; 'appInstallation': { name: 'appInstallation'; type: { kind: 'OBJECT'; name: 'AppInstallation'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; }; };
    'AppDeleted': { kind: 'OBJECT'; name: 'AppDeleted'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AppError': { kind: 'OBJECT'; name: 'AppError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'permissions': { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PermissionEnum'; ofType: null; }; }; } }; }; };
    'AppErrorCode': { name: 'AppErrorCode'; enumValues: 'FORBIDDEN' | 'GRAPHQL_ERROR' | 'INVALID' | 'INVALID_STATUS' | 'INVALID_PERMISSION' | 'INVALID_URL_FORMAT' | 'INVALID_MANIFEST_FORMAT' | 'INVALID_CUSTOM_HEADERS' | 'MANIFEST_URL_CANT_CONNECT' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE' | 'OUT_OF_SCOPE_APP' | 'OUT_OF_SCOPE_PERMISSION' | 'UNSUPPORTED_SALEOR_VERSION'; };
    'AppExtension': { kind: 'OBJECT'; name: 'AppExtension'; fields: { 'accessToken': { name: 'accessToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'label': { name: 'label'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'mount': { name: 'mount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppExtensionMountEnum'; ofType: null; }; } }; 'permissions': { name: 'permissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Permission'; ofType: null; }; }; }; } }; 'target': { name: 'target'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppExtensionTargetEnum'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AppExtensionCountableConnection': { kind: 'OBJECT'; name: 'AppExtensionCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppExtensionCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'AppExtensionCountableEdge': { kind: 'OBJECT'; name: 'AppExtensionCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppExtension'; ofType: null; }; } }; }; };
    'AppExtensionFilterInput': { kind: 'INPUT_OBJECT'; name: 'AppExtensionFilterInput'; isOneOf: false; inputFields: [{ name: 'mount'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppExtensionMountEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'target'; type: { kind: 'ENUM'; name: 'AppExtensionTargetEnum'; ofType: null; }; defaultValue: null }]; };
    'AppExtensionMountEnum': { name: 'AppExtensionMountEnum'; enumValues: 'CUSTOMER_OVERVIEW_CREATE' | 'CUSTOMER_OVERVIEW_MORE_ACTIONS' | 'CUSTOMER_DETAILS_MORE_ACTIONS' | 'PRODUCT_OVERVIEW_CREATE' | 'PRODUCT_OVERVIEW_MORE_ACTIONS' | 'PRODUCT_DETAILS_MORE_ACTIONS' | 'NAVIGATION_CATALOG' | 'NAVIGATION_ORDERS' | 'NAVIGATION_CUSTOMERS' | 'NAVIGATION_DISCOUNTS' | 'NAVIGATION_TRANSLATIONS' | 'NAVIGATION_PAGES' | 'ORDER_DETAILS_MORE_ACTIONS' | 'ORDER_OVERVIEW_CREATE' | 'ORDER_OVERVIEW_MORE_ACTIONS'; };
    'AppExtensionTargetEnum': { name: 'AppExtensionTargetEnum'; enumValues: 'POPUP' | 'APP_PAGE'; };
    'AppFetchManifest': { kind: 'OBJECT'; name: 'AppFetchManifest'; fields: { 'appErrors': { name: 'appErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; 'manifest': { name: 'manifest'; type: { kind: 'OBJECT'; name: 'Manifest'; ofType: null; } }; }; };
    'AppFilterInput': { kind: 'INPUT_OBJECT'; name: 'AppFilterInput'; isOneOf: false; inputFields: [{ name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'isActive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'ENUM'; name: 'AppTypeEnum'; ofType: null; }; defaultValue: null }]; };
    'AppInput': { kind: 'INPUT_OBJECT'; name: 'AppInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'identifier'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PermissionEnum'; ofType: null; }; }; }; defaultValue: null }]; };
    'AppInstall': { kind: 'OBJECT'; name: 'AppInstall'; fields: { 'appErrors': { name: 'appErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; 'appInstallation': { name: 'appInstallation'; type: { kind: 'OBJECT'; name: 'AppInstallation'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; }; };
    'AppInstallInput': { kind: 'INPUT_OBJECT'; name: 'AppInstallInput'; isOneOf: false; inputFields: [{ name: 'appName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'manifestUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'activateAfterInstallation'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "true" }, { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PermissionEnum'; ofType: null; }; }; }; defaultValue: null }]; };
    'AppInstallation': { kind: 'OBJECT'; name: 'AppInstallation'; fields: { 'appName': { name: 'appName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'brand': { name: 'brand'; type: { kind: 'OBJECT'; name: 'AppBrand'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'manifestUrl': { name: 'manifestUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'JobStatusEnum'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'AppInstalled': { kind: 'OBJECT'; name: 'AppInstalled'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AppManifestBrand': { kind: 'OBJECT'; name: 'AppManifestBrand'; fields: { 'logo': { name: 'logo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppManifestBrandLogo'; ofType: null; }; } }; }; };
    'AppManifestBrandLogo': { kind: 'OBJECT'; name: 'AppManifestBrandLogo'; fields: { 'default': { name: 'default'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AppManifestExtension': { kind: 'OBJECT'; name: 'AppManifestExtension'; fields: { 'label': { name: 'label'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'mount': { name: 'mount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppExtensionMountEnum'; ofType: null; }; } }; 'permissions': { name: 'permissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Permission'; ofType: null; }; }; }; } }; 'target': { name: 'target'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppExtensionTargetEnum'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AppManifestRequiredSaleorVersion': { kind: 'OBJECT'; name: 'AppManifestRequiredSaleorVersion'; fields: { 'constraint': { name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'satisfied': { name: 'satisfied'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'AppManifestWebhook': { kind: 'OBJECT'; name: 'AppManifestWebhook'; fields: { 'asyncEvents': { name: 'asyncEvents'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventTypeAsyncEnum'; ofType: null; }; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'query': { name: 'query'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'syncEvents': { name: 'syncEvents'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventTypeSyncEnum'; ofType: null; }; }; } }; 'targetUrl': { name: 'targetUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'AppRetryInstall': { kind: 'OBJECT'; name: 'AppRetryInstall'; fields: { 'appErrors': { name: 'appErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; 'appInstallation': { name: 'appInstallation'; type: { kind: 'OBJECT'; name: 'AppInstallation'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; }; };
    'AppSortField': { name: 'AppSortField'; enumValues: 'NAME' | 'CREATION_DATE'; };
    'AppSortingInput': { kind: 'INPUT_OBJECT'; name: 'AppSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AppSortField'; ofType: null; }; }; defaultValue: null }]; };
    'AppStatusChanged': { kind: 'OBJECT'; name: 'AppStatusChanged'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AppToken': { kind: 'OBJECT'; name: 'AppToken'; fields: { 'authToken': { name: 'authToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AppTokenCreate': { kind: 'OBJECT'; name: 'AppTokenCreate'; fields: { 'appErrors': { name: 'appErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; 'appToken': { name: 'appToken'; type: { kind: 'OBJECT'; name: 'AppToken'; ofType: null; } }; 'authToken': { name: 'authToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; }; };
    'AppTokenDelete': { kind: 'OBJECT'; name: 'AppTokenDelete'; fields: { 'appErrors': { name: 'appErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; 'appToken': { name: 'appToken'; type: { kind: 'OBJECT'; name: 'AppToken'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; }; };
    'AppTokenInput': { kind: 'INPUT_OBJECT'; name: 'AppTokenInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'AppTokenVerify': { kind: 'OBJECT'; name: 'AppTokenVerify'; fields: { 'appErrors': { name: 'appErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; 'valid': { name: 'valid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'AppTypeEnum': { name: 'AppTypeEnum'; enumValues: 'LOCAL' | 'THIRDPARTY'; };
    'AppUpdate': { kind: 'OBJECT'; name: 'AppUpdate'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'appErrors': { name: 'appErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppError'; ofType: null; }; }; }; } }; }; };
    'AppUpdated': { kind: 'OBJECT'; name: 'AppUpdated'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AreaUnitsEnum': { name: 'AreaUnitsEnum'; enumValues: 'SQ_MM' | 'SQ_CM' | 'SQ_DM' | 'SQ_M' | 'SQ_KM' | 'SQ_FT' | 'SQ_YD' | 'SQ_INCH'; };
    'AssignNavigation': { kind: 'OBJECT'; name: 'AssignNavigation'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; 'menu': { name: 'menu'; type: { kind: 'OBJECT'; name: 'Menu'; ofType: null; } }; 'menuErrors': { name: 'menuErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; }; };
    'AssignedVariantAttribute': { kind: 'OBJECT'; name: 'AssignedVariantAttribute'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; } }; 'variantSelection': { name: 'variantSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'Attribute': { kind: 'OBJECT'; name: 'Attribute'; fields: { 'availableInGrid': { name: 'availableInGrid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'choices': { name: 'choices'; type: { kind: 'OBJECT'; name: 'AttributeValueCountableConnection'; ofType: null; } }; 'entityType': { name: 'entityType'; type: { kind: 'ENUM'; name: 'AttributeEntityTypeEnum'; ofType: null; } }; 'externalReference': { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'filterableInDashboard': { name: 'filterableInDashboard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'filterableInStorefront': { name: 'filterableInStorefront'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inputType': { name: 'inputType'; type: { kind: 'ENUM'; name: 'AttributeInputTypeEnum'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'productTypes': { name: 'productTypes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductTypeCountableConnection'; ofType: null; }; } }; 'productVariantTypes': { name: 'productVariantTypes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductTypeCountableConnection'; ofType: null; }; } }; 'slug': { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'storefrontSearchPosition': { name: 'storefrontSearchPosition'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'AttributeTranslation'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'AttributeTypeEnum'; ofType: null; } }; 'unit': { name: 'unit'; type: { kind: 'ENUM'; name: 'MeasurementUnitsEnum'; ofType: null; } }; 'valueRequired': { name: 'valueRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'visibleInStorefront': { name: 'visibleInStorefront'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'withChoices': { name: 'withChoices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'AttributeBulkCreate': { kind: 'OBJECT'; name: 'AttributeBulkCreate'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeBulkCreateError'; ofType: null; }; }; }; } }; 'results': { name: 'results'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeBulkCreateResult'; ofType: null; }; }; }; } }; }; };
    'AttributeBulkCreateError': { kind: 'OBJECT'; name: 'AttributeBulkCreateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AttributeBulkCreateErrorCode'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AttributeBulkCreateErrorCode': { name: 'AttributeBulkCreateErrorCode'; enumValues: 'ALREADY_EXISTS' | 'BLANK' | 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE' | 'DUPLICATED_INPUT_ITEM' | 'MAX_LENGTH'; };
    'AttributeBulkCreateResult': { kind: 'OBJECT'; name: 'AttributeBulkCreateResult'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeBulkCreateError'; ofType: null; }; }; } }; }; };
    'AttributeBulkDelete': { kind: 'OBJECT'; name: 'AttributeBulkDelete'; fields: { 'attributeErrors': { name: 'attributeErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; }; };
    'AttributeBulkTranslate': { kind: 'OBJECT'; name: 'AttributeBulkTranslate'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeBulkTranslateError'; ofType: null; }; }; }; } }; 'results': { name: 'results'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeBulkTranslateResult'; ofType: null; }; }; }; } }; }; };
    'AttributeBulkTranslateError': { kind: 'OBJECT'; name: 'AttributeBulkTranslateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AttributeTranslateErrorCode'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AttributeBulkTranslateInput': { kind: 'INPUT_OBJECT'; name: 'AttributeBulkTranslateInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'languageCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LanguageCodeEnum'; ofType: null; }; }; defaultValue: null }, { name: 'translationFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'NameTranslationInput'; ofType: null; }; }; defaultValue: null }]; };
    'AttributeBulkTranslateResult': { kind: 'OBJECT'; name: 'AttributeBulkTranslateResult'; fields: { 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeBulkTranslateError'; ofType: null; }; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'AttributeTranslation'; ofType: null; } }; }; };
    'AttributeBulkUpdate': { kind: 'OBJECT'; name: 'AttributeBulkUpdate'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeBulkUpdateError'; ofType: null; }; }; }; } }; 'results': { name: 'results'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeBulkUpdateResult'; ofType: null; }; }; }; } }; }; };
    'AttributeBulkUpdateError': { kind: 'OBJECT'; name: 'AttributeBulkUpdateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AttributeBulkUpdateErrorCode'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AttributeBulkUpdateErrorCode': { name: 'AttributeBulkUpdateErrorCode'; enumValues: 'ALREADY_EXISTS' | 'BLANK' | 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE' | 'DUPLICATED_INPUT_ITEM' | 'MAX_LENGTH'; };
    'AttributeBulkUpdateInput': { kind: 'INPUT_OBJECT'; name: 'AttributeBulkUpdateInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeUpdateInput'; ofType: null; }; }; defaultValue: null }]; };
    'AttributeBulkUpdateResult': { kind: 'OBJECT'; name: 'AttributeBulkUpdateResult'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeBulkUpdateError'; ofType: null; }; }; } }; }; };
    'AttributeChoicesSortField': { name: 'AttributeChoicesSortField'; enumValues: 'NAME' | 'SLUG'; };
    'AttributeChoicesSortingInput': { kind: 'INPUT_OBJECT'; name: 'AttributeChoicesSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AttributeChoicesSortField'; ofType: null; }; }; defaultValue: null }]; };
    'AttributeCountableConnection': { kind: 'OBJECT'; name: 'AttributeCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'AttributeCountableEdge': { kind: 'OBJECT'; name: 'AttributeCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; } }; }; };
    'AttributeCreate': { kind: 'OBJECT'; name: 'AttributeCreate'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'attributeErrors': { name: 'attributeErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; }; };
    'AttributeCreateInput': { kind: 'INPUT_OBJECT'; name: 'AttributeCreateInput'; isOneOf: false; inputFields: [{ name: 'inputType'; type: { kind: 'ENUM'; name: 'AttributeInputTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'entityType'; type: { kind: 'ENUM'; name: 'AttributeEntityTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AttributeTypeEnum'; ofType: null; }; }; defaultValue: null }, { name: 'unit'; type: { kind: 'ENUM'; name: 'MeasurementUnitsEnum'; ofType: null; }; defaultValue: null }, { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeValueCreateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'valueRequired'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'isVariantOnly'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'visibleInStorefront'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'filterableInStorefront'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'filterableInDashboard'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'storefrontSearchPosition'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'availableInGrid'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AttributeCreated': { kind: 'OBJECT'; name: 'AttributeCreated'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AttributeDelete': { kind: 'OBJECT'; name: 'AttributeDelete'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'attributeErrors': { name: 'attributeErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; }; };
    'AttributeDeleted': { kind: 'OBJECT'; name: 'AttributeDeleted'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AttributeEntityTypeEnum': { name: 'AttributeEntityTypeEnum'; enumValues: 'PAGE' | 'PRODUCT' | 'PRODUCT_VARIANT'; };
    'AttributeEntityTypeEnumFilterInput': { kind: 'INPUT_OBJECT'; name: 'AttributeEntityTypeEnumFilterInput'; isOneOf: false; inputFields: [{ name: 'eq'; type: { kind: 'ENUM'; name: 'AttributeEntityTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'oneOf'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AttributeEntityTypeEnum'; ofType: null; }; }; }; defaultValue: null }]; };
    'AttributeError': { kind: 'OBJECT'; name: 'AttributeError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AttributeErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AttributeErrorCode': { name: 'AttributeErrorCode'; enumValues: 'ALREADY_EXISTS' | 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE'; };
    'AttributeFilterInput': { kind: 'INPUT_OBJECT'; name: 'AttributeFilterInput'; isOneOf: false; inputFields: [{ name: 'valueRequired'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'isVariantOnly'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'visibleInStorefront'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'filterableInStorefront'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'filterableInDashboard'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'availableInGrid'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'ENUM'; name: 'AttributeTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'inCollection'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'inCategory'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'slugs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AttributeInput': { kind: 'INPUT_OBJECT'; name: 'AttributeInput'; isOneOf: false; inputFields: [{ name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'valuesRange'; type: { kind: 'INPUT_OBJECT'; name: 'IntRangeInput'; ofType: null; }; defaultValue: null }, { name: 'dateTime'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeRangeInput'; ofType: null; }; defaultValue: null }, { name: 'date'; type: { kind: 'INPUT_OBJECT'; name: 'DateRangeInput'; ofType: null; }; defaultValue: null }, { name: 'boolean'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'AttributeInputTypeEnum': { name: 'AttributeInputTypeEnum'; enumValues: 'DROPDOWN' | 'MULTISELECT' | 'FILE' | 'REFERENCE' | 'NUMERIC' | 'RICH_TEXT' | 'PLAIN_TEXT' | 'SWATCH' | 'BOOLEAN' | 'DATE' | 'DATE_TIME'; };
    'AttributeInputTypeEnumFilterInput': { kind: 'INPUT_OBJECT'; name: 'AttributeInputTypeEnumFilterInput'; isOneOf: false; inputFields: [{ name: 'eq'; type: { kind: 'ENUM'; name: 'AttributeInputTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'oneOf'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AttributeInputTypeEnum'; ofType: null; }; }; }; defaultValue: null }]; };
    'AttributeReorderValues': { kind: 'OBJECT'; name: 'AttributeReorderValues'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'attributeErrors': { name: 'attributeErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; }; };
    'AttributeSortField': { name: 'AttributeSortField'; enumValues: 'NAME' | 'SLUG' | 'VALUE_REQUIRED' | 'IS_VARIANT_ONLY' | 'VISIBLE_IN_STOREFRONT' | 'FILTERABLE_IN_STOREFRONT' | 'FILTERABLE_IN_DASHBOARD' | 'STOREFRONT_SEARCH_POSITION' | 'AVAILABLE_IN_GRID'; };
    'AttributeSortingInput': { kind: 'INPUT_OBJECT'; name: 'AttributeSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AttributeSortField'; ofType: null; }; }; defaultValue: null }]; };
    'AttributeTranslatableContent': { kind: 'OBJECT'; name: 'AttributeTranslatableContent'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'attributeId': { name: 'attributeId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'AttributeTranslation'; ofType: null; } }; }; };
    'AttributeTranslate': { kind: 'OBJECT'; name: 'AttributeTranslate'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'translationErrors': { name: 'translationErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; }; };
    'AttributeTranslateErrorCode': { name: 'AttributeTranslateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED'; };
    'AttributeTranslation': { kind: 'OBJECT'; name: 'AttributeTranslation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translatableContent': { name: 'translatableContent'; type: { kind: 'OBJECT'; name: 'AttributeTranslatableContent'; ofType: null; } }; }; };
    'AttributeTypeEnum': { name: 'AttributeTypeEnum'; enumValues: 'PRODUCT_TYPE' | 'PAGE_TYPE'; };
    'AttributeTypeEnumFilterInput': { kind: 'INPUT_OBJECT'; name: 'AttributeTypeEnumFilterInput'; isOneOf: false; inputFields: [{ name: 'eq'; type: { kind: 'ENUM'; name: 'AttributeTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'oneOf'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AttributeTypeEnum'; ofType: null; }; }; }; defaultValue: null }]; };
    'AttributeUpdate': { kind: 'OBJECT'; name: 'AttributeUpdate'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'attributeErrors': { name: 'attributeErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; }; };
    'AttributeUpdateInput': { kind: 'INPUT_OBJECT'; name: 'AttributeUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'unit'; type: { kind: 'ENUM'; name: 'MeasurementUnitsEnum'; ofType: null; }; defaultValue: null }, { name: 'removeValues'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'addValues'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeValueUpdateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'valueRequired'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'isVariantOnly'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'visibleInStorefront'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'filterableInStorefront'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'filterableInDashboard'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'storefrontSearchPosition'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'availableInGrid'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AttributeUpdated': { kind: 'OBJECT'; name: 'AttributeUpdated'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AttributeValue': { kind: 'OBJECT'; name: 'AttributeValue'; fields: { 'boolean': { name: 'boolean'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'dateTime': { name: 'dateTime'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'externalReference': { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'file': { name: 'file'; type: { kind: 'OBJECT'; name: 'File'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inputType': { name: 'inputType'; type: { kind: 'ENUM'; name: 'AttributeInputTypeEnum'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'plainText': { name: 'plainText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reference': { name: 'reference'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'richText': { name: 'richText'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'AttributeValueTranslation'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AttributeValueBulkDelete': { kind: 'OBJECT'; name: 'AttributeValueBulkDelete'; fields: { 'attributeErrors': { name: 'attributeErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; }; };
    'AttributeValueBulkTranslate': { kind: 'OBJECT'; name: 'AttributeValueBulkTranslate'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeValueBulkTranslateError'; ofType: null; }; }; }; } }; 'results': { name: 'results'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeValueBulkTranslateResult'; ofType: null; }; }; }; } }; }; };
    'AttributeValueBulkTranslateError': { kind: 'OBJECT'; name: 'AttributeValueBulkTranslateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AttributeValueTranslateErrorCode'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AttributeValueBulkTranslateInput': { kind: 'INPUT_OBJECT'; name: 'AttributeValueBulkTranslateInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'languageCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LanguageCodeEnum'; ofType: null; }; }; defaultValue: null }, { name: 'translationFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeValueTranslationInput'; ofType: null; }; }; defaultValue: null }]; };
    'AttributeValueBulkTranslateResult': { kind: 'OBJECT'; name: 'AttributeValueBulkTranslateResult'; fields: { 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeValueBulkTranslateError'; ofType: null; }; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'AttributeValueTranslation'; ofType: null; } }; }; };
    'AttributeValueCountableConnection': { kind: 'OBJECT'; name: 'AttributeValueCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeValueCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'AttributeValueCountableEdge': { kind: 'OBJECT'; name: 'AttributeValueCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeValue'; ofType: null; }; } }; }; };
    'AttributeValueCreate': { kind: 'OBJECT'; name: 'AttributeValueCreate'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'attributeErrors': { name: 'attributeErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; 'attributeValue': { name: 'attributeValue'; type: { kind: 'OBJECT'; name: 'AttributeValue'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; }; };
    'AttributeValueCreateInput': { kind: 'INPUT_OBJECT'; name: 'AttributeValueCreateInput'; isOneOf: false; inputFields: [{ name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'richText'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'plainText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fileUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'contentType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'AttributeValueCreated': { kind: 'OBJECT'; name: 'AttributeValueCreated'; fields: { 'attributeValue': { name: 'attributeValue'; type: { kind: 'OBJECT'; name: 'AttributeValue'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AttributeValueDelete': { kind: 'OBJECT'; name: 'AttributeValueDelete'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'attributeErrors': { name: 'attributeErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; 'attributeValue': { name: 'attributeValue'; type: { kind: 'OBJECT'; name: 'AttributeValue'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; }; };
    'AttributeValueDeleted': { kind: 'OBJECT'; name: 'AttributeValueDeleted'; fields: { 'attributeValue': { name: 'attributeValue'; type: { kind: 'OBJECT'; name: 'AttributeValue'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AttributeValueFilterInput': { kind: 'INPUT_OBJECT'; name: 'AttributeValueFilterInput'; isOneOf: false; inputFields: [{ name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'slugs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'AttributeValueInput': { kind: 'INPUT_OBJECT'; name: 'AttributeValueInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'dropdown'; type: { kind: 'INPUT_OBJECT'; name: 'AttributeValueSelectableTypeInput'; ofType: null; }; defaultValue: null }, { name: 'swatch'; type: { kind: 'INPUT_OBJECT'; name: 'AttributeValueSelectableTypeInput'; ofType: null; }; defaultValue: null }, { name: 'multiselect'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeValueSelectableTypeInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'numeric'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'file'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'contentType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'references'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'richText'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'plainText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'boolean'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'date'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'dateTime'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'AttributeValueSelectableTypeInput': { kind: 'INPUT_OBJECT'; name: 'AttributeValueSelectableTypeInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AttributeValueTranslatableContent': { kind: 'OBJECT'; name: 'AttributeValueTranslatableContent'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'AttributeTranslatableContent'; ofType: null; } }; 'attributeValue': { name: 'attributeValue'; type: { kind: 'OBJECT'; name: 'AttributeValue'; ofType: null; } }; 'attributeValueId': { name: 'attributeValueId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'plainText': { name: 'plainText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'richText': { name: 'richText'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'AttributeValueTranslation'; ofType: null; } }; }; };
    'AttributeValueTranslate': { kind: 'OBJECT'; name: 'AttributeValueTranslate'; fields: { 'attributeValue': { name: 'attributeValue'; type: { kind: 'OBJECT'; name: 'AttributeValue'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'translationErrors': { name: 'translationErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; }; };
    'AttributeValueTranslateErrorCode': { name: 'AttributeValueTranslateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED'; };
    'AttributeValueTranslation': { kind: 'OBJECT'; name: 'AttributeValueTranslation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'plainText': { name: 'plainText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'richText': { name: 'richText'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'translatableContent': { name: 'translatableContent'; type: { kind: 'OBJECT'; name: 'AttributeValueTranslatableContent'; ofType: null; } }; }; };
    'AttributeValueTranslationInput': { kind: 'INPUT_OBJECT'; name: 'AttributeValueTranslationInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'richText'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'plainText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AttributeValueUpdate': { kind: 'OBJECT'; name: 'AttributeValueUpdate'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'attributeErrors': { name: 'attributeErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; 'attributeValue': { name: 'attributeValue'; type: { kind: 'OBJECT'; name: 'AttributeValue'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeError'; ofType: null; }; }; }; } }; }; };
    'AttributeValueUpdateInput': { kind: 'INPUT_OBJECT'; name: 'AttributeValueUpdateInput'; isOneOf: false; inputFields: [{ name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'richText'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'plainText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'fileUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'contentType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'AttributeValueUpdated': { kind: 'OBJECT'; name: 'AttributeValueUpdated'; fields: { 'attributeValue': { name: 'attributeValue'; type: { kind: 'OBJECT'; name: 'AttributeValue'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'AttributeWhereInput': { kind: 'INPUT_OBJECT'; name: 'AttributeWhereInput'; isOneOf: false; inputFields: [{ name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilterInput'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilterInput'; ofType: null; }; defaultValue: null }, { name: 'withChoices'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'inputType'; type: { kind: 'INPUT_OBJECT'; name: 'AttributeInputTypeEnumFilterInput'; ofType: null; }; defaultValue: null }, { name: 'entityType'; type: { kind: 'INPUT_OBJECT'; name: 'AttributeEntityTypeEnumFilterInput'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'INPUT_OBJECT'; name: 'AttributeTypeEnumFilterInput'; ofType: null; }; defaultValue: null }, { name: 'unit'; type: { kind: 'INPUT_OBJECT'; name: 'MeasurementUnitsEnumFilterInput'; ofType: null; }; defaultValue: null }, { name: 'inCollection'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'inCategory'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'valueRequired'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'visibleInStorefront'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'filterableInDashboard'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeWhereInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'Boolean': unknown;
    'BulkAttributeValueInput': { kind: 'INPUT_OBJECT'; name: 'BulkAttributeValueInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'dropdown'; type: { kind: 'INPUT_OBJECT'; name: 'AttributeValueSelectableTypeInput'; ofType: null; }; defaultValue: null }, { name: 'swatch'; type: { kind: 'INPUT_OBJECT'; name: 'AttributeValueSelectableTypeInput'; ofType: null; }; defaultValue: null }, { name: 'multiselect'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeValueSelectableTypeInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'numeric'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'file'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'contentType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'references'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'richText'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'plainText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'boolean'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'date'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'dateTime'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'BulkProductError': { kind: 'OBJECT'; name: 'BulkProductError'; fields: { 'attributes': { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'channels': { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'index': { name: 'index'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'values': { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'warehouses': { name: 'warehouses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'BulkStockError': { kind: 'OBJECT'; name: 'BulkStockError'; fields: { 'attributes': { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'index': { name: 'index'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'values': { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'CalculateTaxes': { kind: 'OBJECT'; name: 'CalculateTaxes'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'taxBase': { name: 'taxBase'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxableObject'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CardInput': { kind: 'INPUT_OBJECT'; name: 'CardInput'; isOneOf: false; inputFields: [{ name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'cvc'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'money'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; }; defaultValue: null }]; };
    'CatalogueInput': { kind: 'INPUT_OBJECT'; name: 'CatalogueInput'; isOneOf: false; inputFields: [{ name: 'products'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'categories'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'collections'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'variants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'CataloguePredicateInput': { kind: 'INPUT_OBJECT'; name: 'CataloguePredicateInput'; isOneOf: false; inputFields: [{ name: 'variantPredicate'; type: { kind: 'INPUT_OBJECT'; name: 'ProductVariantWhereInput'; ofType: null; }; defaultValue: null }, { name: 'productPredicate'; type: { kind: 'INPUT_OBJECT'; name: 'ProductWhereInput'; ofType: null; }; defaultValue: null }, { name: 'categoryPredicate'; type: { kind: 'INPUT_OBJECT'; name: 'CategoryWhereInput'; ofType: null; }; defaultValue: null }, { name: 'collectionPredicate'; type: { kind: 'INPUT_OBJECT'; name: 'CollectionWhereInput'; ofType: null; }; defaultValue: null }, { name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CataloguePredicateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CataloguePredicateInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'Category': { kind: 'OBJECT'; name: 'Category'; fields: { 'ancestors': { name: 'ancestors'; type: { kind: 'OBJECT'; name: 'CategoryCountableConnection'; ofType: null; } }; 'backgroundImage': { name: 'backgroundImage'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'children': { name: 'children'; type: { kind: 'OBJECT'; name: 'CategoryCountableConnection'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'descriptionJson': { name: 'descriptionJson'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'level': { name: 'level'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'parent': { name: 'parent'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'products': { name: 'products'; type: { kind: 'OBJECT'; name: 'ProductCountableConnection'; ofType: null; } }; 'seoDescription': { name: 'seoDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoTitle': { name: 'seoTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'CategoryTranslation'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'CategoryBulkDelete': { kind: 'OBJECT'; name: 'CategoryBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'CategoryCountableConnection': { kind: 'OBJECT'; name: 'CategoryCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CategoryCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CategoryCountableEdge': { kind: 'OBJECT'; name: 'CategoryCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Category'; ofType: null; }; } }; }; };
    'CategoryCreate': { kind: 'OBJECT'; name: 'CategoryCreate'; fields: { 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'CategoryCreated': { kind: 'OBJECT'; name: 'CategoryCreated'; fields: { 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CategoryDelete': { kind: 'OBJECT'; name: 'CategoryDelete'; fields: { 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'CategoryDeleted': { kind: 'OBJECT'; name: 'CategoryDeleted'; fields: { 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CategoryFilterInput': { kind: 'INPUT_OBJECT'; name: 'CategoryFilterInput'; isOneOf: false; inputFields: [{ name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'slugs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeRangeInput'; ofType: null; }; defaultValue: null }]; };
    'CategoryInput': { kind: 'INPUT_OBJECT'; name: 'CategoryInput'; isOneOf: false; inputFields: [{ name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'seo'; type: { kind: 'INPUT_OBJECT'; name: 'SeoInput'; ofType: null; }; defaultValue: null }, { name: 'backgroundImage'; type: { kind: 'SCALAR'; name: 'Upload'; ofType: null; }; defaultValue: null }, { name: 'backgroundImageAlt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'CategorySortField': { name: 'CategorySortField'; enumValues: 'NAME' | 'PRODUCT_COUNT' | 'SUBCATEGORY_COUNT'; };
    'CategorySortingInput': { kind: 'INPUT_OBJECT'; name: 'CategorySortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CategorySortField'; ofType: null; }; }; defaultValue: null }]; };
    'CategoryTranslatableContent': { kind: 'OBJECT'; name: 'CategoryTranslatableContent'; fields: { 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'categoryId': { name: 'categoryId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'descriptionJson': { name: 'descriptionJson'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'seoDescription': { name: 'seoDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoTitle': { name: 'seoTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'CategoryTranslation'; ofType: null; } }; }; };
    'CategoryTranslate': { kind: 'OBJECT'; name: 'CategoryTranslate'; fields: { 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'translationErrors': { name: 'translationErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; }; };
    'CategoryTranslation': { kind: 'OBJECT'; name: 'CategoryTranslation'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'descriptionJson': { name: 'descriptionJson'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoDescription': { name: 'seoDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoTitle': { name: 'seoTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translatableContent': { name: 'translatableContent'; type: { kind: 'OBJECT'; name: 'CategoryTranslatableContent'; ofType: null; } }; }; };
    'CategoryUpdate': { kind: 'OBJECT'; name: 'CategoryUpdate'; fields: { 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'CategoryUpdated': { kind: 'OBJECT'; name: 'CategoryUpdated'; fields: { 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CategoryWhereInput': { kind: 'INPUT_OBJECT'; name: 'CategoryWhereInput'; isOneOf: false; inputFields: [{ name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CategoryWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CategoryWhereInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'Channel': { kind: 'OBJECT'; name: 'Channel'; fields: { 'availableShippingMethodsPerCountry': { name: 'availableShippingMethodsPerCountry'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingMethodsPerCountry'; ofType: null; }; }; } }; 'checkoutSettings': { name: 'checkoutSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutSettings'; ofType: null; }; } }; 'countries': { name: 'countries'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CountryDisplay'; ofType: null; }; }; } }; 'currencyCode': { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'defaultCountry': { name: 'defaultCountry'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CountryDisplay'; ofType: null; }; } }; 'hasOrders': { name: 'hasOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isActive': { name: 'isActive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'orderSettings': { name: 'orderSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderSettings'; ofType: null; }; } }; 'paymentSettings': { name: 'paymentSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentSettings'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'stockSettings': { name: 'stockSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StockSettings'; ofType: null; }; } }; 'taxConfiguration': { name: 'taxConfiguration'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxConfiguration'; ofType: null; }; } }; 'warehouses': { name: 'warehouses'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; }; }; }; } }; }; };
    'ChannelActivate': { kind: 'OBJECT'; name: 'ChannelActivate'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'channelErrors': { name: 'channelErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelError'; ofType: null; }; }; }; } }; }; };
    'ChannelCreate': { kind: 'OBJECT'; name: 'ChannelCreate'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'channelErrors': { name: 'channelErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelError'; ofType: null; }; }; }; } }; }; };
    'ChannelCreateInput': { kind: 'INPUT_OBJECT'; name: 'ChannelCreateInput'; isOneOf: false; inputFields: [{ name: 'isActive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'stockSettings'; type: { kind: 'INPUT_OBJECT'; name: 'StockSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'addShippingZones'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'addWarehouses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'orderSettings'; type: { kind: 'INPUT_OBJECT'; name: 'OrderSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'checkoutSettings'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'paymentSettings'; type: { kind: 'INPUT_OBJECT'; name: 'PaymentSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'currencyCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'defaultCountry'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; defaultValue: null }]; };
    'ChannelCreated': { kind: 'OBJECT'; name: 'ChannelCreated'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ChannelDeactivate': { kind: 'OBJECT'; name: 'ChannelDeactivate'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'channelErrors': { name: 'channelErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelError'; ofType: null; }; }; }; } }; }; };
    'ChannelDelete': { kind: 'OBJECT'; name: 'ChannelDelete'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'channelErrors': { name: 'channelErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelError'; ofType: null; }; }; }; } }; }; };
    'ChannelDeleteInput': { kind: 'INPUT_OBJECT'; name: 'ChannelDeleteInput'; isOneOf: false; inputFields: [{ name: 'channelId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ChannelDeleted': { kind: 'OBJECT'; name: 'ChannelDeleted'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ChannelError': { kind: 'OBJECT'; name: 'ChannelError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ChannelErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shippingZones': { name: 'shippingZones'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'warehouses': { name: 'warehouses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'ChannelErrorCode': { name: 'ChannelErrorCode'; enumValues: 'ALREADY_EXISTS' | 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE' | 'CHANNELS_CURRENCY_MUST_BE_THE_SAME' | 'CHANNEL_WITH_ORDERS' | 'DUPLICATED_INPUT_ITEM'; };
    'ChannelListingUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ChannelListingUpdateInput'; isOneOf: false; inputFields: [{ name: 'channelListing'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'price'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'costPrice'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'preorderThreshold'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'ChannelMetadataUpdated': { kind: 'OBJECT'; name: 'ChannelMetadataUpdated'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ChannelReorderWarehouses': { kind: 'OBJECT'; name: 'ChannelReorderWarehouses'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelError'; ofType: null; }; }; }; } }; }; };
    'ChannelStatusChanged': { kind: 'OBJECT'; name: 'ChannelStatusChanged'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ChannelUpdate': { kind: 'OBJECT'; name: 'ChannelUpdate'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'channelErrors': { name: 'channelErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ChannelError'; ofType: null; }; }; }; } }; }; };
    'ChannelUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ChannelUpdateInput'; isOneOf: false; inputFields: [{ name: 'isActive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'stockSettings'; type: { kind: 'INPUT_OBJECT'; name: 'StockSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'addShippingZones'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'addWarehouses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'orderSettings'; type: { kind: 'INPUT_OBJECT'; name: 'OrderSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'checkoutSettings'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'paymentSettings'; type: { kind: 'INPUT_OBJECT'; name: 'PaymentSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'defaultCountry'; type: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; defaultValue: null }, { name: 'removeShippingZones'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeWarehouses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'ChannelUpdated': { kind: 'OBJECT'; name: 'ChannelUpdated'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Checkout': { kind: 'OBJECT'; name: 'Checkout'; fields: { 'authorizeStatus': { name: 'authorizeStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckoutAuthorizeStatusEnum'; ofType: null; }; } }; 'availableCollectionPoints': { name: 'availableCollectionPoints'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; }; }; }; } }; 'availablePaymentGateways': { name: 'availablePaymentGateways'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentGateway'; ofType: null; }; }; }; } }; 'availableShippingMethods': { name: 'availableShippingMethods'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingMethod'; ofType: null; }; }; }; } }; 'billingAddress': { name: 'billingAddress'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'chargeStatus': { name: 'chargeStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckoutChargeStatusEnum'; ofType: null; }; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'deliveryMethod': { name: 'deliveryMethod'; type: { kind: 'UNION'; name: 'DeliveryMethod'; ofType: null; } }; 'discount': { name: 'discount'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'discountName': { name: 'discountName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'displayGrossPrices': { name: 'displayGrossPrices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'giftCards': { name: 'giftCards'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isShippingRequired': { name: 'isShippingRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'languageCode': { name: 'languageCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LanguageCodeEnum'; ofType: null; }; } }; 'lastChange': { name: 'lastChange'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'lines': { name: 'lines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutLine'; ofType: null; }; }; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'note': { name: 'note'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'problems': { name: 'problems'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'CheckoutProblem'; ofType: null; }; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'shippingAddress': { name: 'shippingAddress'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'shippingMethod': { name: 'shippingMethod'; type: { kind: 'OBJECT'; name: 'ShippingMethod'; ofType: null; } }; 'shippingMethods': { name: 'shippingMethods'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingMethod'; ofType: null; }; }; }; } }; 'shippingPrice': { name: 'shippingPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; }; } }; 'stockReservationExpires': { name: 'stockReservationExpires'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'storedPaymentMethods': { name: 'storedPaymentMethods'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoredPaymentMethod'; ofType: null; }; }; } }; 'subtotalPrice': { name: 'subtotalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; }; } }; 'taxExemption': { name: 'taxExemption'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; } }; 'totalBalance': { name: 'totalBalance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'totalPrice': { name: 'totalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; }; } }; 'transactions': { name: 'transactions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; }; }; } }; 'translatedDiscountName': { name: 'translatedDiscountName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; 'voucherCode': { name: 'voucherCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CheckoutAddPromoCode': { kind: 'OBJECT'; name: 'CheckoutAddPromoCode'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutErrors': { name: 'checkoutErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutAddressValidationRules': { kind: 'INPUT_OBJECT'; name: 'CheckoutAddressValidationRules'; isOneOf: false; inputFields: [{ name: 'checkRequiredFields'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "true" }, { name: 'checkFieldsFormat'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "true" }, { name: 'enableFieldsNormalization'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "true" }]; };
    'CheckoutAuthorizeStatusEnum': { name: 'CheckoutAuthorizeStatusEnum'; enumValues: 'NONE' | 'PARTIAL' | 'FULL'; };
    'CheckoutBillingAddressUpdate': { kind: 'OBJECT'; name: 'CheckoutBillingAddressUpdate'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutErrors': { name: 'checkoutErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutChargeStatusEnum': { name: 'CheckoutChargeStatusEnum'; enumValues: 'NONE' | 'PARTIAL' | 'FULL' | 'OVERCHARGED'; };
    'CheckoutComplete': { kind: 'OBJECT'; name: 'CheckoutComplete'; fields: { 'checkoutErrors': { name: 'checkoutErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'confirmationData': { name: 'confirmationData'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'confirmationNeeded': { name: 'confirmationNeeded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; }; };
    'CheckoutCountableConnection': { kind: 'OBJECT'; name: 'CheckoutCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CheckoutCountableEdge': { kind: 'OBJECT'; name: 'CheckoutCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; }; } }; }; };
    'CheckoutCreate': { kind: 'OBJECT'; name: 'CheckoutCreate'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutErrors': { name: 'checkoutErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'created': { name: 'created'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutCreateFromOrder': { kind: 'OBJECT'; name: 'CheckoutCreateFromOrder'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutCreateFromOrderError'; ofType: null; }; }; }; } }; 'unavailableVariants': { name: 'unavailableVariants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutCreateFromOrderUnavailableVariant'; ofType: null; }; }; } }; }; };
    'CheckoutCreateFromOrderError': { kind: 'OBJECT'; name: 'CheckoutCreateFromOrderError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckoutCreateFromOrderErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CheckoutCreateFromOrderErrorCode': { name: 'CheckoutCreateFromOrderErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'ORDER_NOT_FOUND' | 'CHANNEL_INACTIVE' | 'TAX_ERROR'; };
    'CheckoutCreateFromOrderUnavailableVariant': { kind: 'OBJECT'; name: 'CheckoutCreateFromOrderUnavailableVariant'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckoutCreateFromOrderUnavailableVariantErrorCode'; ofType: null; }; } }; 'lineId': { name: 'lineId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'variantId': { name: 'variantId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'CheckoutCreateFromOrderUnavailableVariantErrorCode': { name: 'CheckoutCreateFromOrderUnavailableVariantErrorCode'; enumValues: 'NOT_FOUND' | 'PRODUCT_UNAVAILABLE_FOR_PURCHASE' | 'UNAVAILABLE_VARIANT_IN_CHANNEL' | 'PRODUCT_NOT_PUBLISHED' | 'QUANTITY_GREATER_THAN_LIMIT' | 'INSUFFICIENT_STOCK'; };
    'CheckoutCreateInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutCreateInput'; isOneOf: false; inputFields: [{ name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CheckoutLineInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'shippingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'billingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'languageCode'; type: { kind: 'ENUM'; name: 'LanguageCodeEnum'; ofType: null; }; defaultValue: null }, { name: 'validationRules'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutValidationRules'; ofType: null; }; defaultValue: null }]; };
    'CheckoutCreated': { kind: 'OBJECT'; name: 'CheckoutCreated'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CheckoutCustomerAttach': { kind: 'OBJECT'; name: 'CheckoutCustomerAttach'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutErrors': { name: 'checkoutErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutCustomerDetach': { kind: 'OBJECT'; name: 'CheckoutCustomerDetach'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutErrors': { name: 'checkoutErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutDeliveryMethodUpdate': { kind: 'OBJECT'; name: 'CheckoutDeliveryMethodUpdate'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutEmailUpdate': { kind: 'OBJECT'; name: 'CheckoutEmailUpdate'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutErrors': { name: 'checkoutErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutError': { kind: 'OBJECT'; name: 'CheckoutError'; fields: { 'addressType': { name: 'addressType'; type: { kind: 'ENUM'; name: 'AddressTypeEnum'; ofType: null; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckoutErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lines': { name: 'lines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'variants': { name: 'variants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'CheckoutErrorCode': { name: 'CheckoutErrorCode'; enumValues: 'BILLING_ADDRESS_NOT_SET' | 'CHECKOUT_NOT_FULLY_PAID' | 'GRAPHQL_ERROR' | 'PRODUCT_NOT_PUBLISHED' | 'PRODUCT_UNAVAILABLE_FOR_PURCHASE' | 'INSUFFICIENT_STOCK' | 'INVALID' | 'INVALID_SHIPPING_METHOD' | 'NOT_FOUND' | 'PAYMENT_ERROR' | 'QUANTITY_GREATER_THAN_LIMIT' | 'REQUIRED' | 'SHIPPING_ADDRESS_NOT_SET' | 'SHIPPING_METHOD_NOT_APPLICABLE' | 'DELIVERY_METHOD_NOT_APPLICABLE' | 'SHIPPING_METHOD_NOT_SET' | 'SHIPPING_NOT_REQUIRED' | 'TAX_ERROR' | 'UNIQUE' | 'VOUCHER_NOT_APPLICABLE' | 'GIFT_CARD_NOT_APPLICABLE' | 'ZERO_QUANTITY' | 'MISSING_CHANNEL_SLUG' | 'CHANNEL_INACTIVE' | 'UNAVAILABLE_VARIANT_IN_CHANNEL' | 'EMAIL_NOT_SET' | 'NO_LINES' | 'INACTIVE_PAYMENT' | 'NON_EDITABLE_GIFT_LINE' | 'NON_REMOVABLE_GIFT_LINE' | 'SHIPPING_CHANGE_FORBIDDEN'; };
    'CheckoutFilterInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutFilterInput'; isOneOf: false; inputFields: [{ name: 'customer'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'created'; type: { kind: 'INPUT_OBJECT'; name: 'DateRangeInput'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'DateRangeInput'; ofType: null; }; defaultValue: null }, { name: 'authorizeStatus'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckoutAuthorizeStatusEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'chargeStatus'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckoutChargeStatusEnum'; ofType: null; }; }; }; defaultValue: null }]; };
    'CheckoutFilterShippingMethods': { kind: 'OBJECT'; name: 'CheckoutFilterShippingMethods'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'shippingMethods': { name: 'shippingMethods'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingMethod'; ofType: null; }; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CheckoutFullyPaid': { kind: 'OBJECT'; name: 'CheckoutFullyPaid'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CheckoutLanguageCodeUpdate': { kind: 'OBJECT'; name: 'CheckoutLanguageCodeUpdate'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutErrors': { name: 'checkoutErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutLine': { kind: 'OBJECT'; name: 'CheckoutLine'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isGift': { name: 'isGift'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'problems': { name: 'problems'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'CheckoutLineProblem'; ofType: null; }; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'requiresShipping': { name: 'requiresShipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'totalPrice': { name: 'totalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; }; } }; 'undiscountedTotalPrice': { name: 'undiscountedTotalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'undiscountedUnitPrice': { name: 'undiscountedUnitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'unitPrice': { name: 'unitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; } }; }; };
    'CheckoutLineCountableConnection': { kind: 'OBJECT'; name: 'CheckoutLineCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutLineCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CheckoutLineCountableEdge': { kind: 'OBJECT'; name: 'CheckoutLineCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutLine'; ofType: null; }; } }; }; };
    'CheckoutLineDelete': { kind: 'OBJECT'; name: 'CheckoutLineDelete'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutErrors': { name: 'checkoutErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutLineInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutLineInput'; isOneOf: false; inputFields: [{ name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'variantId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'price'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'forceNewLine'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'CheckoutLineProblem': { kind: 'UNION'; name: 'CheckoutLineProblem'; fields: {}; possibleTypes: 'CheckoutLineProblemInsufficientStock' | 'CheckoutLineProblemVariantNotAvailable'; };
    'CheckoutLineProblemInsufficientStock': { kind: 'OBJECT'; name: 'CheckoutLineProblemInsufficientStock'; fields: { 'availableQuantity': { name: 'availableQuantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'line': { name: 'line'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutLine'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; } }; }; };
    'CheckoutLineProblemVariantNotAvailable': { kind: 'OBJECT'; name: 'CheckoutLineProblemVariantNotAvailable'; fields: { 'line': { name: 'line'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutLine'; ofType: null; }; } }; }; };
    'CheckoutLineUpdateInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutLineUpdateInput'; isOneOf: false; inputFields: [{ name: 'variantId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'price'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'lineId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'CheckoutLinesAdd': { kind: 'OBJECT'; name: 'CheckoutLinesAdd'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutErrors': { name: 'checkoutErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutLinesDelete': { kind: 'OBJECT'; name: 'CheckoutLinesDelete'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutLinesUpdate': { kind: 'OBJECT'; name: 'CheckoutLinesUpdate'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutErrors': { name: 'checkoutErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutMetadataUpdated': { kind: 'OBJECT'; name: 'CheckoutMetadataUpdated'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CheckoutPaymentCreate': { kind: 'OBJECT'; name: 'CheckoutPaymentCreate'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentError'; ofType: null; }; }; }; } }; 'payment': { name: 'payment'; type: { kind: 'OBJECT'; name: 'Payment'; ofType: null; } }; 'paymentErrors': { name: 'paymentErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentError'; ofType: null; }; }; }; } }; }; };
    'CheckoutProblem': { kind: 'UNION'; name: 'CheckoutProblem'; fields: {}; possibleTypes: 'CheckoutLineProblemInsufficientStock' | 'CheckoutLineProblemVariantNotAvailable'; };
    'CheckoutRemovePromoCode': { kind: 'OBJECT'; name: 'CheckoutRemovePromoCode'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutErrors': { name: 'checkoutErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutSettings': { kind: 'OBJECT'; name: 'CheckoutSettings'; fields: { 'useLegacyErrorFlow': { name: 'useLegacyErrorFlow'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'CheckoutSettingsInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutSettingsInput'; isOneOf: false; inputFields: [{ name: 'useLegacyErrorFlow'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'CheckoutShippingAddressUpdate': { kind: 'OBJECT'; name: 'CheckoutShippingAddressUpdate'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutErrors': { name: 'checkoutErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutShippingMethodUpdate': { kind: 'OBJECT'; name: 'CheckoutShippingMethodUpdate'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutErrors': { name: 'checkoutErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CheckoutError'; ofType: null; }; }; }; } }; }; };
    'CheckoutSortField': { name: 'CheckoutSortField'; enumValues: 'CREATION_DATE' | 'CUSTOMER' | 'PAYMENT'; };
    'CheckoutSortingInput': { kind: 'INPUT_OBJECT'; name: 'CheckoutSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CheckoutSortField'; ofType: null; }; }; defaultValue: null }]; };
    'CheckoutUpdated': { kind: 'OBJECT'; name: 'CheckoutUpdated'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CheckoutValidationRules': { kind: 'INPUT_OBJECT'; name: 'CheckoutValidationRules'; isOneOf: false; inputFields: [{ name: 'shippingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutAddressValidationRules'; ofType: null; }; defaultValue: null }, { name: 'billingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'CheckoutAddressValidationRules'; ofType: null; }; defaultValue: null }]; };
    'ChoiceValue': { kind: 'OBJECT'; name: 'ChoiceValue'; fields: { 'raw': { name: 'raw'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'verbose': { name: 'verbose'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Collection': { kind: 'OBJECT'; name: 'Collection'; fields: { 'backgroundImage': { name: 'backgroundImage'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'channel': { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'channelListings': { name: 'channelListings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionChannelListing'; ofType: null; }; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'descriptionJson': { name: 'descriptionJson'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'products': { name: 'products'; type: { kind: 'OBJECT'; name: 'ProductCountableConnection'; ofType: null; } }; 'seoDescription': { name: 'seoDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoTitle': { name: 'seoTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'CollectionTranslation'; ofType: null; } }; }; };
    'CollectionAddProducts': { kind: 'OBJECT'; name: 'CollectionAddProducts'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'collectionErrors': { name: 'collectionErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionError'; ofType: null; }; }; }; } }; }; };
    'CollectionBulkDelete': { kind: 'OBJECT'; name: 'CollectionBulkDelete'; fields: { 'collectionErrors': { name: 'collectionErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionError'; ofType: null; }; }; }; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionError'; ofType: null; }; }; }; } }; }; };
    'CollectionChannelListing': { kind: 'OBJECT'; name: 'CollectionChannelListing'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isPublished': { name: 'isPublished'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'publicationDate': { name: 'publicationDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'publishedAt': { name: 'publishedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; }; };
    'CollectionChannelListingError': { kind: 'OBJECT'; name: 'CollectionChannelListingError'; fields: { 'attributes': { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'channels': { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'values': { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'CollectionChannelListingUpdate': { kind: 'OBJECT'; name: 'CollectionChannelListingUpdate'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'collectionChannelListingErrors': { name: 'collectionChannelListingErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionChannelListingError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionChannelListingError'; ofType: null; }; }; }; } }; }; };
    'CollectionChannelListingUpdateInput': { kind: 'INPUT_OBJECT'; name: 'CollectionChannelListingUpdateInput'; isOneOf: false; inputFields: [{ name: 'addChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PublishableChannelListingInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'CollectionCountableConnection': { kind: 'OBJECT'; name: 'CollectionCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'CollectionCountableEdge': { kind: 'OBJECT'; name: 'CollectionCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Collection'; ofType: null; }; } }; }; };
    'CollectionCreate': { kind: 'OBJECT'; name: 'CollectionCreate'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'collectionErrors': { name: 'collectionErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionError'; ofType: null; }; }; }; } }; }; };
    'CollectionCreateInput': { kind: 'INPUT_OBJECT'; name: 'CollectionCreateInput'; isOneOf: false; inputFields: [{ name: 'isPublished'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'backgroundImage'; type: { kind: 'SCALAR'; name: 'Upload'; ofType: null; }; defaultValue: null }, { name: 'backgroundImageAlt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'seo'; type: { kind: 'INPUT_OBJECT'; name: 'SeoInput'; ofType: null; }; defaultValue: null }, { name: 'publicationDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'products'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'CollectionCreated': { kind: 'OBJECT'; name: 'CollectionCreated'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CollectionDelete': { kind: 'OBJECT'; name: 'CollectionDelete'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'collectionErrors': { name: 'collectionErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionError'; ofType: null; }; }; }; } }; }; };
    'CollectionDeleted': { kind: 'OBJECT'; name: 'CollectionDeleted'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CollectionError': { kind: 'OBJECT'; name: 'CollectionError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CollectionErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'products': { name: 'products'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'CollectionErrorCode': { name: 'CollectionErrorCode'; enumValues: 'DUPLICATED_INPUT_ITEM' | 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE' | 'CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT'; };
    'CollectionFilterInput': { kind: 'INPUT_OBJECT'; name: 'CollectionFilterInput'; isOneOf: false; inputFields: [{ name: 'published'; type: { kind: 'ENUM'; name: 'CollectionPublished'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'slugs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'CollectionInput': { kind: 'INPUT_OBJECT'; name: 'CollectionInput'; isOneOf: false; inputFields: [{ name: 'isPublished'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'backgroundImage'; type: { kind: 'SCALAR'; name: 'Upload'; ofType: null; }; defaultValue: null }, { name: 'backgroundImageAlt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'seo'; type: { kind: 'INPUT_OBJECT'; name: 'SeoInput'; ofType: null; }; defaultValue: null }, { name: 'publicationDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'CollectionMetadataUpdated': { kind: 'OBJECT'; name: 'CollectionMetadataUpdated'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CollectionPublished': { name: 'CollectionPublished'; enumValues: 'PUBLISHED' | 'HIDDEN'; };
    'CollectionRemoveProducts': { kind: 'OBJECT'; name: 'CollectionRemoveProducts'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'collectionErrors': { name: 'collectionErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionError'; ofType: null; }; }; }; } }; }; };
    'CollectionReorderProducts': { kind: 'OBJECT'; name: 'CollectionReorderProducts'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'collectionErrors': { name: 'collectionErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionError'; ofType: null; }; }; }; } }; }; };
    'CollectionSortField': { name: 'CollectionSortField'; enumValues: 'NAME' | 'AVAILABILITY' | 'PRODUCT_COUNT' | 'PUBLICATION_DATE' | 'PUBLISHED_AT'; };
    'CollectionSortingInput': { kind: 'INPUT_OBJECT'; name: 'CollectionSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CollectionSortField'; ofType: null; }; }; defaultValue: null }]; };
    'CollectionTranslatableContent': { kind: 'OBJECT'; name: 'CollectionTranslatableContent'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'collectionId': { name: 'collectionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'descriptionJson': { name: 'descriptionJson'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'seoDescription': { name: 'seoDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoTitle': { name: 'seoTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'CollectionTranslation'; ofType: null; } }; }; };
    'CollectionTranslate': { kind: 'OBJECT'; name: 'CollectionTranslate'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'translationErrors': { name: 'translationErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; }; };
    'CollectionTranslation': { kind: 'OBJECT'; name: 'CollectionTranslation'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'descriptionJson': { name: 'descriptionJson'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoDescription': { name: 'seoDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoTitle': { name: 'seoTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translatableContent': { name: 'translatableContent'; type: { kind: 'OBJECT'; name: 'CollectionTranslatableContent'; ofType: null; } }; }; };
    'CollectionUpdate': { kind: 'OBJECT'; name: 'CollectionUpdate'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'collectionErrors': { name: 'collectionErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CollectionError'; ofType: null; }; }; }; } }; }; };
    'CollectionUpdated': { kind: 'OBJECT'; name: 'CollectionUpdated'; fields: { 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CollectionWhereInput': { kind: 'INPUT_OBJECT'; name: 'CollectionWhereInput'; isOneOf: false; inputFields: [{ name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CollectionWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CollectionWhereInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'ConfigurationItem': { kind: 'OBJECT'; name: 'ConfigurationItem'; fields: { 'helpText': { name: 'helpText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'label': { name: 'label'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'ConfigurationTypeFieldEnum'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ConfigurationItemInput': { kind: 'INPUT_OBJECT'; name: 'ConfigurationItemInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ConfigurationTypeFieldEnum': { name: 'ConfigurationTypeFieldEnum'; enumValues: 'STRING' | 'MULTILINE' | 'BOOLEAN' | 'SECRET' | 'PASSWORD' | 'SECRETMULTILINE' | 'OUTPUT'; };
    'ConfirmAccount': { kind: 'OBJECT'; name: 'ConfirmAccount'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'ConfirmEmailChange': { kind: 'OBJECT'; name: 'ConfirmEmailChange'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'CountryCode': { name: 'CountryCode'; enumValues: 'AF' | 'AX' | 'AL' | 'DZ' | 'AS' | 'AD' | 'AO' | 'AI' | 'AQ' | 'AG' | 'AR' | 'AM' | 'AW' | 'AU' | 'AT' | 'AZ' | 'BS' | 'BH' | 'BD' | 'BB' | 'BY' | 'BE' | 'BZ' | 'BJ' | 'BM' | 'BT' | 'BO' | 'BQ' | 'BA' | 'BW' | 'BV' | 'BR' | 'IO' | 'BN' | 'BG' | 'BF' | 'BI' | 'CV' | 'KH' | 'CM' | 'CA' | 'KY' | 'CF' | 'TD' | 'CL' | 'CN' | 'CX' | 'CC' | 'CO' | 'KM' | 'CG' | 'CD' | 'CK' | 'CR' | 'CI' | 'HR' | 'CU' | 'CW' | 'CY' | 'CZ' | 'DK' | 'DJ' | 'DM' | 'DO' | 'EC' | 'EG' | 'SV' | 'GQ' | 'ER' | 'EE' | 'SZ' | 'ET' | 'EU' | 'FK' | 'FO' | 'FJ' | 'FI' | 'FR' | 'GF' | 'PF' | 'TF' | 'GA' | 'GM' | 'GE' | 'DE' | 'GH' | 'GI' | 'GR' | 'GL' | 'GD' | 'GP' | 'GU' | 'GT' | 'GG' | 'GN' | 'GW' | 'GY' | 'HT' | 'HM' | 'VA' | 'HN' | 'HK' | 'HU' | 'IS' | 'IN' | 'ID' | 'IR' | 'IQ' | 'IE' | 'IM' | 'IL' | 'IT' | 'JM' | 'JP' | 'JE' | 'JO' | 'KZ' | 'KE' | 'KI' | 'KW' | 'KG' | 'LA' | 'LV' | 'LB' | 'LS' | 'LR' | 'LY' | 'LI' | 'LT' | 'LU' | 'MO' | 'MG' | 'MW' | 'MY' | 'MV' | 'ML' | 'MT' | 'MH' | 'MQ' | 'MR' | 'MU' | 'YT' | 'MX' | 'FM' | 'MD' | 'MC' | 'MN' | 'ME' | 'MS' | 'MA' | 'MZ' | 'MM' | 'NA' | 'NR' | 'NP' | 'NL' | 'NC' | 'NZ' | 'NI' | 'NE' | 'NG' | 'NU' | 'NF' | 'KP' | 'MK' | 'MP' | 'NO' | 'OM' | 'PK' | 'PW' | 'PS' | 'PA' | 'PG' | 'PY' | 'PE' | 'PH' | 'PN' | 'PL' | 'PT' | 'PR' | 'QA' | 'RE' | 'RO' | 'RU' | 'RW' | 'BL' | 'SH' | 'KN' | 'LC' | 'MF' | 'PM' | 'VC' | 'WS' | 'SM' | 'ST' | 'SA' | 'SN' | 'RS' | 'SC' | 'SL' | 'SG' | 'SX' | 'SK' | 'SI' | 'SB' | 'SO' | 'ZA' | 'GS' | 'KR' | 'SS' | 'ES' | 'LK' | 'SD' | 'SR' | 'SJ' | 'SE' | 'CH' | 'SY' | 'TW' | 'TJ' | 'TZ' | 'TH' | 'TL' | 'TG' | 'TK' | 'TO' | 'TT' | 'TN' | 'TR' | 'TM' | 'TC' | 'TV' | 'UG' | 'UA' | 'AE' | 'GB' | 'UM' | 'US' | 'UY' | 'UZ' | 'VU' | 'VE' | 'VN' | 'VG' | 'VI' | 'WF' | 'EH' | 'YE' | 'ZM' | 'ZW'; };
    'CountryDisplay': { kind: 'OBJECT'; name: 'CountryDisplay'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'country': { name: 'country'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'vat': { name: 'vat'; type: { kind: 'OBJECT'; name: 'VAT'; ofType: null; } }; }; };
    'CountryFilterInput': { kind: 'INPUT_OBJECT'; name: 'CountryFilterInput'; isOneOf: false; inputFields: [{ name: 'attachedToShippingZones'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'CountryRateInput': { kind: 'INPUT_OBJECT'; name: 'CountryRateInput'; isOneOf: false; inputFields: [{ name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; defaultValue: null }, { name: 'rate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; }; defaultValue: null }]; };
    'CountryRateUpdateInput': { kind: 'INPUT_OBJECT'; name: 'CountryRateUpdateInput'; isOneOf: false; inputFields: [{ name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; defaultValue: null }, { name: 'rate'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'CreateToken': { kind: 'OBJECT'; name: 'CreateToken'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'csrfToken': { name: 'csrfToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'refreshToken': { name: 'refreshToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'CreditCard': { kind: 'OBJECT'; name: 'CreditCard'; fields: { 'brand': { name: 'brand'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'expMonth': { name: 'expMonth'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'expYear': { name: 'expYear'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'firstDigits': { name: 'firstDigits'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lastDigits': { name: 'lastDigits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'CustomerBulkDelete': { kind: 'OBJECT'; name: 'CustomerBulkDelete'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; }; };
    'CustomerBulkResult': { kind: 'OBJECT'; name: 'CustomerBulkResult'; fields: { 'customer': { name: 'customer'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerBulkUpdateError'; ofType: null; }; }; } }; }; };
    'CustomerBulkUpdate': { kind: 'OBJECT'; name: 'CustomerBulkUpdate'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerBulkUpdateError'; ofType: null; }; }; }; } }; 'results': { name: 'results'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerBulkResult'; ofType: null; }; }; }; } }; }; };
    'CustomerBulkUpdateError': { kind: 'OBJECT'; name: 'CustomerBulkUpdateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CustomerBulkUpdateErrorCode'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CustomerBulkUpdateErrorCode': { name: 'CustomerBulkUpdateErrorCode'; enumValues: 'BLANK' | 'DUPLICATED_INPUT_ITEM' | 'GRAPHQL_ERROR' | 'INVALID' | 'REQUIRED' | 'UNIQUE' | 'NOT_FOUND' | 'MAX_LENGTH'; };
    'CustomerBulkUpdateInput': { kind: 'INPUT_OBJECT'; name: 'CustomerBulkUpdateInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'input'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CustomerInput'; ofType: null; }; }; defaultValue: null }]; };
    'CustomerCreate': { kind: 'OBJECT'; name: 'CustomerCreate'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'CustomerCreated': { kind: 'OBJECT'; name: 'CustomerCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CustomerDelete': { kind: 'OBJECT'; name: 'CustomerDelete'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'CustomerEvent': { kind: 'OBJECT'; name: 'CustomerEvent'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderLine': { name: 'orderLine'; type: { kind: 'OBJECT'; name: 'OrderLine'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'CustomerEventsEnum'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'CustomerEventsEnum': { name: 'CustomerEventsEnum'; enumValues: 'ACCOUNT_CREATED' | 'ACCOUNT_ACTIVATED' | 'ACCOUNT_DEACTIVATED' | 'PASSWORD_RESET_LINK_SENT' | 'PASSWORD_RESET' | 'EMAIL_CHANGED_REQUEST' | 'PASSWORD_CHANGED' | 'EMAIL_CHANGED' | 'PLACED_ORDER' | 'NOTE_ADDED_TO_ORDER' | 'DIGITAL_LINK_DOWNLOADED' | 'CUSTOMER_DELETED' | 'NAME_ASSIGNED' | 'EMAIL_ASSIGNED' | 'NOTE_ADDED'; };
    'CustomerFilterInput': { kind: 'INPUT_OBJECT'; name: 'CustomerFilterInput'; isOneOf: false; inputFields: [{ name: 'dateJoined'; type: { kind: 'INPUT_OBJECT'; name: 'DateRangeInput'; ofType: null; }; defaultValue: null }, { name: 'numberOfOrders'; type: { kind: 'INPUT_OBJECT'; name: 'IntRangeInput'; ofType: null; }; defaultValue: null }, { name: 'placedOrders'; type: { kind: 'INPUT_OBJECT'; name: 'DateRangeInput'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeRangeInput'; ofType: null; }; defaultValue: null }]; };
    'CustomerInput': { kind: 'INPUT_OBJECT'; name: 'CustomerInput'; isOneOf: false; inputFields: [{ name: 'defaultBillingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'defaultShippingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'isActive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'languageCode'; type: { kind: 'ENUM'; name: 'LanguageCodeEnum'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'isConfirmed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'CustomerMetadataUpdated': { kind: 'OBJECT'; name: 'CustomerMetadataUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'CustomerUpdate': { kind: 'OBJECT'; name: 'CustomerUpdate'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'CustomerUpdated': { kind: 'OBJECT'; name: 'CustomerUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Date': unknown;
    'DateRangeInput': { kind: 'INPUT_OBJECT'; name: 'DateRangeInput'; isOneOf: false; inputFields: [{ name: 'gte'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'lte'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }]; };
    'DateTime': unknown;
    'DateTimeFilterInput': { kind: 'INPUT_OBJECT'; name: 'DateTimeFilterInput'; isOneOf: false; inputFields: [{ name: 'eq'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'oneOf'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; }; defaultValue: null }, { name: 'range'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeRangeInput'; ofType: null; }; defaultValue: null }]; };
    'DateTimeRangeInput': { kind: 'INPUT_OBJECT'; name: 'DateTimeRangeInput'; isOneOf: false; inputFields: [{ name: 'gte'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'lte'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'Day': unknown;
    'DeactivateAllUserTokens': { kind: 'OBJECT'; name: 'DeactivateAllUserTokens'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; }; };
    'Decimal': unknown;
    'DecimalFilterInput': { kind: 'INPUT_OBJECT'; name: 'DecimalFilterInput'; isOneOf: false; inputFields: [{ name: 'eq'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }, { name: 'oneOf'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; }; }; defaultValue: null }, { name: 'range'; type: { kind: 'INPUT_OBJECT'; name: 'DecimalRangeInput'; ofType: null; }; defaultValue: null }]; };
    'DecimalRangeInput': { kind: 'INPUT_OBJECT'; name: 'DecimalRangeInput'; isOneOf: false; inputFields: [{ name: 'gte'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }, { name: 'lte'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }]; };
    'DeleteMetadata': { kind: 'OBJECT'; name: 'DeleteMetadata'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataError'; ofType: null; }; }; }; } }; 'item': { name: 'item'; type: { kind: 'INTERFACE'; name: 'ObjectWithMetadata'; ofType: null; } }; 'metadataErrors': { name: 'metadataErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataError'; ofType: null; }; }; }; } }; }; };
    'DeletePrivateMetadata': { kind: 'OBJECT'; name: 'DeletePrivateMetadata'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataError'; ofType: null; }; }; }; } }; 'item': { name: 'item'; type: { kind: 'INTERFACE'; name: 'ObjectWithMetadata'; ofType: null; } }; 'metadataErrors': { name: 'metadataErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataError'; ofType: null; }; }; }; } }; }; };
    'DeliveryMethod': { kind: 'UNION'; name: 'DeliveryMethod'; fields: {}; possibleTypes: 'ShippingMethod' | 'Warehouse'; };
    'DigitalContent': { kind: 'OBJECT'; name: 'DigitalContent'; fields: { 'automaticFulfillment': { name: 'automaticFulfillment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'contentFile': { name: 'contentFile'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'maxDownloads': { name: 'maxDownloads'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; } }; 'urlValidDays': { name: 'urlValidDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'urls': { name: 'urls'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DigitalContentUrl'; ofType: null; }; }; } }; 'useDefaultSettings': { name: 'useDefaultSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'DigitalContentCountableConnection': { kind: 'OBJECT'; name: 'DigitalContentCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DigitalContentCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'DigitalContentCountableEdge': { kind: 'OBJECT'; name: 'DigitalContentCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DigitalContent'; ofType: null; }; } }; }; };
    'DigitalContentCreate': { kind: 'OBJECT'; name: 'DigitalContentCreate'; fields: { 'content': { name: 'content'; type: { kind: 'OBJECT'; name: 'DigitalContent'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'DigitalContentDelete': { kind: 'OBJECT'; name: 'DigitalContentDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'DigitalContentInput': { kind: 'INPUT_OBJECT'; name: 'DigitalContentInput'; isOneOf: false; inputFields: [{ name: 'useDefaultSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'maxDownloads'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'urlValidDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'automaticFulfillment'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'DigitalContentUpdate': { kind: 'OBJECT'; name: 'DigitalContentUpdate'; fields: { 'content': { name: 'content'; type: { kind: 'OBJECT'; name: 'DigitalContent'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'DigitalContentUploadInput': { kind: 'INPUT_OBJECT'; name: 'DigitalContentUploadInput'; isOneOf: false; inputFields: [{ name: 'useDefaultSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'maxDownloads'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'urlValidDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'automaticFulfillment'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'contentFile'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Upload'; ofType: null; }; }; defaultValue: null }]; };
    'DigitalContentUrl': { kind: 'OBJECT'; name: 'DigitalContentUrl'; fields: { 'content': { name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DigitalContent'; ofType: null; }; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'downloadNum': { name: 'downloadNum'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DigitalContentUrlCreate': { kind: 'OBJECT'; name: 'DigitalContentUrlCreate'; fields: { 'digitalContentUrl': { name: 'digitalContentUrl'; type: { kind: 'OBJECT'; name: 'DigitalContentUrl'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'DigitalContentUrlCreateInput': { kind: 'INPUT_OBJECT'; name: 'DigitalContentUrlCreateInput'; isOneOf: false; inputFields: [{ name: 'content'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'DiscountError': { kind: 'OBJECT'; name: 'DiscountError'; fields: { 'channels': { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'products': { name: 'products'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'voucherCodes': { name: 'voucherCodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'DiscountErrorCode': { name: 'DiscountErrorCode'; enumValues: 'ALREADY_EXISTS' | 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE' | 'CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT' | 'DUPLICATED_INPUT_ITEM' | 'VOUCHER_ALREADY_USED'; };
    'DiscountStatusEnum': { name: 'DiscountStatusEnum'; enumValues: 'ACTIVE' | 'EXPIRED' | 'SCHEDULED'; };
    'DiscountValueTypeEnum': { name: 'DiscountValueTypeEnum'; enumValues: 'FIXED' | 'PERCENTAGE'; };
    'DiscountedObjectWhereInput': { kind: 'INPUT_OBJECT'; name: 'DiscountedObjectWhereInput'; isOneOf: false; inputFields: [{ name: 'baseSubtotalPrice'; type: { kind: 'INPUT_OBJECT'; name: 'DecimalFilterInput'; ofType: null; }; defaultValue: null }, { name: 'baseTotalPrice'; type: { kind: 'INPUT_OBJECT'; name: 'DecimalFilterInput'; ofType: null; }; defaultValue: null }, { name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DiscountedObjectWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'DiscountedObjectWhereInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'DistanceUnitsEnum': { name: 'DistanceUnitsEnum'; enumValues: 'MM' | 'CM' | 'DM' | 'M' | 'KM' | 'FT' | 'YD' | 'INCH'; };
    'Domain': { kind: 'OBJECT'; name: 'Domain'; fields: { 'host': { name: 'host'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sslEnabled': { name: 'sslEnabled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'DraftOrderBulkDelete': { kind: 'OBJECT'; name: 'DraftOrderBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderComplete': { kind: 'OBJECT'; name: 'DraftOrderComplete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderCreate': { kind: 'OBJECT'; name: 'DraftOrderCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderCreateInput': { kind: 'INPUT_OBJECT'; name: 'DraftOrderCreateInput'; isOneOf: false; inputFields: [{ name: 'billingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'user'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'userEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'discount'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'shippingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'shippingMethod'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'voucher'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'voucherCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'customerNote'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'channelId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderLineCreateInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'DraftOrderCreated': { kind: 'OBJECT'; name: 'DraftOrderCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DraftOrderDelete': { kind: 'OBJECT'; name: 'DraftOrderDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderDeleted': { kind: 'OBJECT'; name: 'DraftOrderDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'DraftOrderInput': { kind: 'INPUT_OBJECT'; name: 'DraftOrderInput'; isOneOf: false; inputFields: [{ name: 'billingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'user'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'userEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'discount'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'shippingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'shippingMethod'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'voucher'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'voucherCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'customerNote'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'channelId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'DraftOrderLinesBulkDelete': { kind: 'OBJECT'; name: 'DraftOrderLinesBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderUpdate': { kind: 'OBJECT'; name: 'DraftOrderUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'DraftOrderUpdated': { kind: 'OBJECT'; name: 'DraftOrderUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ErrorPolicyEnum': { name: 'ErrorPolicyEnum'; enumValues: 'IGNORE_FAILED' | 'REJECT_EVERYTHING' | 'REJECT_FAILED_ROWS'; };
    'Event': { kind: 'INTERFACE'; name: 'Event'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; possibleTypes: 'AccountChangeEmailRequested' | 'AccountConfirmationRequested' | 'AccountConfirmed' | 'AccountDeleteRequested' | 'AccountDeleted' | 'AccountEmailChanged' | 'AccountSetPasswordRequested' | 'AddressCreated' | 'AddressDeleted' | 'AddressUpdated' | 'AppDeleted' | 'AppInstalled' | 'AppStatusChanged' | 'AppUpdated' | 'AttributeCreated' | 'AttributeDeleted' | 'AttributeUpdated' | 'AttributeValueCreated' | 'AttributeValueDeleted' | 'AttributeValueUpdated' | 'CalculateTaxes' | 'CategoryCreated' | 'CategoryDeleted' | 'CategoryUpdated' | 'ChannelCreated' | 'ChannelDeleted' | 'ChannelMetadataUpdated' | 'ChannelStatusChanged' | 'ChannelUpdated' | 'CheckoutCreated' | 'CheckoutFilterShippingMethods' | 'CheckoutFullyPaid' | 'CheckoutMetadataUpdated' | 'CheckoutUpdated' | 'CollectionCreated' | 'CollectionDeleted' | 'CollectionMetadataUpdated' | 'CollectionUpdated' | 'CustomerCreated' | 'CustomerMetadataUpdated' | 'CustomerUpdated' | 'DraftOrderCreated' | 'DraftOrderDeleted' | 'DraftOrderUpdated' | 'FulfillmentApproved' | 'FulfillmentCanceled' | 'FulfillmentCreated' | 'FulfillmentMetadataUpdated' | 'FulfillmentTrackingNumberUpdated' | 'GiftCardCreated' | 'GiftCardDeleted' | 'GiftCardExportCompleted' | 'GiftCardMetadataUpdated' | 'GiftCardSent' | 'GiftCardStatusChanged' | 'GiftCardUpdated' | 'InvoiceDeleted' | 'InvoiceRequested' | 'InvoiceSent' | 'ListStoredPaymentMethods' | 'MenuCreated' | 'MenuDeleted' | 'MenuItemCreated' | 'MenuItemDeleted' | 'MenuItemUpdated' | 'MenuUpdated' | 'OrderBulkCreated' | 'OrderCancelled' | 'OrderConfirmed' | 'OrderCreated' | 'OrderExpired' | 'OrderFilterShippingMethods' | 'OrderFulfilled' | 'OrderFullyPaid' | 'OrderFullyRefunded' | 'OrderMetadataUpdated' | 'OrderPaid' | 'OrderRefunded' | 'OrderUpdated' | 'PageCreated' | 'PageDeleted' | 'PageTypeCreated' | 'PageTypeDeleted' | 'PageTypeUpdated' | 'PageUpdated' | 'PaymentAuthorize' | 'PaymentCaptureEvent' | 'PaymentConfirmEvent' | 'PaymentGatewayInitializeSession' | 'PaymentGatewayInitializeTokenizationSession' | 'PaymentListGateways' | 'PaymentMethodInitializeTokenizationSession' | 'PaymentMethodProcessTokenizationSession' | 'PaymentProcessEvent' | 'PaymentRefundEvent' | 'PaymentVoidEvent' | 'PermissionGroupCreated' | 'PermissionGroupDeleted' | 'PermissionGroupUpdated' | 'ProductCreated' | 'ProductDeleted' | 'ProductExportCompleted' | 'ProductMediaCreated' | 'ProductMediaDeleted' | 'ProductMediaUpdated' | 'ProductMetadataUpdated' | 'ProductUpdated' | 'ProductVariantBackInStock' | 'ProductVariantCreated' | 'ProductVariantDeleted' | 'ProductVariantMetadataUpdated' | 'ProductVariantOutOfStock' | 'ProductVariantStockUpdated' | 'ProductVariantUpdated' | 'PromotionCreated' | 'PromotionDeleted' | 'PromotionEnded' | 'PromotionRuleCreated' | 'PromotionRuleDeleted' | 'PromotionRuleUpdated' | 'PromotionStarted' | 'PromotionUpdated' | 'SaleCreated' | 'SaleDeleted' | 'SaleToggle' | 'SaleUpdated' | 'ShippingListMethodsForCheckout' | 'ShippingPriceCreated' | 'ShippingPriceDeleted' | 'ShippingPriceUpdated' | 'ShippingZoneCreated' | 'ShippingZoneDeleted' | 'ShippingZoneMetadataUpdated' | 'ShippingZoneUpdated' | 'ShopMetadataUpdated' | 'StaffCreated' | 'StaffDeleted' | 'StaffSetPasswordRequested' | 'StaffUpdated' | 'StoredPaymentMethodDeleteRequested' | 'ThumbnailCreated' | 'TransactionCancelationRequested' | 'TransactionChargeRequested' | 'TransactionInitializeSession' | 'TransactionItemMetadataUpdated' | 'TransactionProcessSession' | 'TransactionRefundRequested' | 'TranslationCreated' | 'TranslationUpdated' | 'VoucherCodeExportCompleted' | 'VoucherCodesCreated' | 'VoucherCodesDeleted' | 'VoucherCreated' | 'VoucherDeleted' | 'VoucherMetadataUpdated' | 'VoucherUpdated' | 'WarehouseCreated' | 'WarehouseDeleted' | 'WarehouseMetadataUpdated' | 'WarehouseUpdated'; };
    'EventDelivery': { kind: 'OBJECT'; name: 'EventDelivery'; fields: { 'attempts': { name: 'attempts'; type: { kind: 'OBJECT'; name: 'EventDeliveryAttemptCountableConnection'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'eventType': { name: 'eventType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventTypeEnum'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'payload': { name: 'payload'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EventDeliveryStatusEnum'; ofType: null; }; } }; }; };
    'EventDeliveryAttempt': { kind: 'OBJECT'; name: 'EventDeliveryAttempt'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'duration': { name: 'duration'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'requestHeaders': { name: 'requestHeaders'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'response': { name: 'response'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'responseHeaders': { name: 'responseHeaders'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'responseStatusCode': { name: 'responseStatusCode'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EventDeliveryStatusEnum'; ofType: null; }; } }; 'taskId': { name: 'taskId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'EventDeliveryAttemptCountableConnection': { kind: 'OBJECT'; name: 'EventDeliveryAttemptCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventDeliveryAttemptCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'EventDeliveryAttemptCountableEdge': { kind: 'OBJECT'; name: 'EventDeliveryAttemptCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventDeliveryAttempt'; ofType: null; }; } }; }; };
    'EventDeliveryAttemptSortField': { name: 'EventDeliveryAttemptSortField'; enumValues: 'CREATED_AT'; };
    'EventDeliveryAttemptSortingInput': { kind: 'INPUT_OBJECT'; name: 'EventDeliveryAttemptSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EventDeliveryAttemptSortField'; ofType: null; }; }; defaultValue: null }]; };
    'EventDeliveryCountableConnection': { kind: 'OBJECT'; name: 'EventDeliveryCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventDeliveryCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'EventDeliveryCountableEdge': { kind: 'OBJECT'; name: 'EventDeliveryCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'EventDelivery'; ofType: null; }; } }; }; };
    'EventDeliveryFilterInput': { kind: 'INPUT_OBJECT'; name: 'EventDeliveryFilterInput'; isOneOf: false; inputFields: [{ name: 'status'; type: { kind: 'ENUM'; name: 'EventDeliveryStatusEnum'; ofType: null; }; defaultValue: null }, { name: 'eventType'; type: { kind: 'ENUM'; name: 'WebhookEventTypeEnum'; ofType: null; }; defaultValue: null }]; };
    'EventDeliveryRetry': { kind: 'OBJECT'; name: 'EventDeliveryRetry'; fields: { 'delivery': { name: 'delivery'; type: { kind: 'OBJECT'; name: 'EventDelivery'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookError'; ofType: null; }; }; }; } }; }; };
    'EventDeliverySortField': { name: 'EventDeliverySortField'; enumValues: 'CREATED_AT'; };
    'EventDeliverySortingInput': { kind: 'INPUT_OBJECT'; name: 'EventDeliverySortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'EventDeliverySortField'; ofType: null; }; }; defaultValue: null }]; };
    'EventDeliveryStatusEnum': { name: 'EventDeliveryStatusEnum'; enumValues: 'PENDING' | 'SUCCESS' | 'FAILED'; };
    'ExportError': { kind: 'OBJECT'; name: 'ExportError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ExportErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ExportErrorCode': { name: 'ExportErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED'; };
    'ExportEvent': { kind: 'OBJECT'; name: 'ExportEvent'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ExportEventsEnum'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'ExportEventsEnum': { name: 'ExportEventsEnum'; enumValues: 'EXPORT_PENDING' | 'EXPORT_SUCCESS' | 'EXPORT_FAILED' | 'EXPORT_DELETED' | 'EXPORTED_FILE_SENT' | 'EXPORT_FAILED_INFO_SENT'; };
    'ExportFile': { kind: 'OBJECT'; name: 'ExportFile'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExportEvent'; ofType: null; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'JobStatusEnum'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'ExportFileCountableConnection': { kind: 'OBJECT'; name: 'ExportFileCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExportFileCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ExportFileCountableEdge': { kind: 'OBJECT'; name: 'ExportFileCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExportFile'; ofType: null; }; } }; }; };
    'ExportFileFilterInput': { kind: 'INPUT_OBJECT'; name: 'ExportFileFilterInput'; isOneOf: false; inputFields: [{ name: 'createdAt'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeRangeInput'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeRangeInput'; ofType: null; }; defaultValue: null }, { name: 'status'; type: { kind: 'ENUM'; name: 'JobStatusEnum'; ofType: null; }; defaultValue: null }, { name: 'user'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'app'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ExportFileSortField': { name: 'ExportFileSortField'; enumValues: 'STATUS' | 'CREATED_AT' | 'UPDATED_AT' | 'LAST_MODIFIED_AT'; };
    'ExportFileSortingInput': { kind: 'INPUT_OBJECT'; name: 'ExportFileSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ExportFileSortField'; ofType: null; }; }; defaultValue: null }]; };
    'ExportGiftCards': { kind: 'OBJECT'; name: 'ExportGiftCards'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExportError'; ofType: null; }; }; }; } }; 'exportFile': { name: 'exportFile'; type: { kind: 'OBJECT'; name: 'ExportFile'; ofType: null; } }; }; };
    'ExportGiftCardsInput': { kind: 'INPUT_OBJECT'; name: 'ExportGiftCardsInput'; isOneOf: false; inputFields: [{ name: 'scope'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ExportScope'; ofType: null; }; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'GiftCardFilterInput'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'fileType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FileTypesEnum'; ofType: null; }; }; defaultValue: null }]; };
    'ExportInfoInput': { kind: 'INPUT_OBJECT'; name: 'ExportInfoInput'; isOneOf: false; inputFields: [{ name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'warehouses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'fields'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductFieldEnum'; ofType: null; }; }; }; defaultValue: null }]; };
    'ExportProducts': { kind: 'OBJECT'; name: 'ExportProducts'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExportError'; ofType: null; }; }; }; } }; 'exportErrors': { name: 'exportErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExportError'; ofType: null; }; }; }; } }; 'exportFile': { name: 'exportFile'; type: { kind: 'OBJECT'; name: 'ExportFile'; ofType: null; } }; }; };
    'ExportProductsInput': { kind: 'INPUT_OBJECT'; name: 'ExportProductsInput'; isOneOf: false; inputFields: [{ name: 'scope'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ExportScope'; ofType: null; }; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'ProductFilterInput'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'exportInfo'; type: { kind: 'INPUT_OBJECT'; name: 'ExportInfoInput'; ofType: null; }; defaultValue: null }, { name: 'fileType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FileTypesEnum'; ofType: null; }; }; defaultValue: null }]; };
    'ExportScope': { name: 'ExportScope'; enumValues: 'ALL' | 'IDS' | 'FILTER'; };
    'ExportVoucherCodes': { kind: 'OBJECT'; name: 'ExportVoucherCodes'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExportError'; ofType: null; }; }; }; } }; 'exportFile': { name: 'exportFile'; type: { kind: 'OBJECT'; name: 'ExportFile'; ofType: null; } }; }; };
    'ExportVoucherCodesInput': { kind: 'INPUT_OBJECT'; name: 'ExportVoucherCodesInput'; isOneOf: false; inputFields: [{ name: 'voucherId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'fileType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FileTypesEnum'; ofType: null; }; }; defaultValue: null }]; };
    'ExternalAuthentication': { kind: 'OBJECT'; name: 'ExternalAuthentication'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ExternalAuthenticationUrl': { kind: 'OBJECT'; name: 'ExternalAuthenticationUrl'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'authenticationData': { name: 'authenticationData'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; }; };
    'ExternalLogout': { kind: 'OBJECT'; name: 'ExternalLogout'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'logoutData': { name: 'logoutData'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; }; };
    'ExternalNotificationError': { kind: 'OBJECT'; name: 'ExternalNotificationError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ExternalNotificationErrorCodes'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ExternalNotificationErrorCodes': { name: 'ExternalNotificationErrorCodes'; enumValues: 'REQUIRED' | 'INVALID_MODEL_TYPE' | 'NOT_FOUND' | 'CHANNEL_INACTIVE'; };
    'ExternalNotificationTrigger': { kind: 'OBJECT'; name: 'ExternalNotificationTrigger'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExternalNotificationError'; ofType: null; }; }; }; } }; }; };
    'ExternalNotificationTriggerInput': { kind: 'INPUT_OBJECT'; name: 'ExternalNotificationTriggerInput'; isOneOf: false; inputFields: [{ name: 'ids'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'extraPayload'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'externalEventType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'ExternalObtainAccessTokens': { kind: 'OBJECT'; name: 'ExternalObtainAccessTokens'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'csrfToken': { name: 'csrfToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'refreshToken': { name: 'refreshToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'ExternalRefresh': { kind: 'OBJECT'; name: 'ExternalRefresh'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'csrfToken': { name: 'csrfToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'refreshToken': { name: 'refreshToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'ExternalVerify': { kind: 'OBJECT'; name: 'ExternalVerify'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'isValid': { name: 'isValid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'verifyData': { name: 'verifyData'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; }; };
    'File': { kind: 'OBJECT'; name: 'File'; fields: { 'contentType': { name: 'contentType'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'FileTypesEnum': { name: 'FileTypesEnum'; enumValues: 'CSV' | 'XLSX'; };
    'FileUpload': { kind: 'OBJECT'; name: 'FileUpload'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UploadError'; ofType: null; }; }; }; } }; 'uploadErrors': { name: 'uploadErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UploadError'; ofType: null; }; }; }; } }; 'uploadedFile': { name: 'uploadedFile'; type: { kind: 'OBJECT'; name: 'File'; ofType: null; } }; }; };
    'Float': unknown;
    'Fulfillment': { kind: 'OBJECT'; name: 'Fulfillment'; fields: { 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'fulfillmentOrder': { name: 'fulfillmentOrder'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lines': { name: 'lines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentLine'; ofType: null; }; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'shippingRefundedAmount': { name: 'shippingRefundedAmount'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'FulfillmentStatus'; ofType: null; }; } }; 'statusDisplay': { name: 'statusDisplay'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'totalRefundedAmount': { name: 'totalRefundedAmount'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'trackingNumber': { name: 'trackingNumber'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; }; };
    'FulfillmentApprove': { kind: 'OBJECT'; name: 'FulfillmentApprove'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'fulfillment': { name: 'fulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentApproved': { kind: 'OBJECT'; name: 'FulfillmentApproved'; fields: { 'fulfillment': { name: 'fulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'notifyCustomer': { name: 'notifyCustomer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'FulfillmentCancel': { kind: 'OBJECT'; name: 'FulfillmentCancel'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'fulfillment': { name: 'fulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentCancelInput': { kind: 'INPUT_OBJECT'; name: 'FulfillmentCancelInput'; isOneOf: false; inputFields: [{ name: 'warehouseId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'FulfillmentCanceled': { kind: 'OBJECT'; name: 'FulfillmentCanceled'; fields: { 'fulfillment': { name: 'fulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'FulfillmentCreated': { kind: 'OBJECT'; name: 'FulfillmentCreated'; fields: { 'fulfillment': { name: 'fulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'notifyCustomer': { name: 'notifyCustomer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'FulfillmentLine': { kind: 'OBJECT'; name: 'FulfillmentLine'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'orderLine': { name: 'orderLine'; type: { kind: 'OBJECT'; name: 'OrderLine'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'FulfillmentMetadataUpdated': { kind: 'OBJECT'; name: 'FulfillmentMetadataUpdated'; fields: { 'fulfillment': { name: 'fulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'FulfillmentRefundProducts': { kind: 'OBJECT'; name: 'FulfillmentRefundProducts'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'fulfillment': { name: 'fulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentReturnProducts': { kind: 'OBJECT'; name: 'FulfillmentReturnProducts'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'replaceFulfillment': { name: 'replaceFulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; 'replaceOrder': { name: 'replaceOrder'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'returnFulfillment': { name: 'returnFulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; }; };
    'FulfillmentStatus': { name: 'FulfillmentStatus'; enumValues: 'FULFILLED' | 'REFUNDED' | 'RETURNED' | 'REPLACED' | 'REFUNDED_AND_RETURNED' | 'CANCELED' | 'WAITING_FOR_APPROVAL'; };
    'FulfillmentTrackingNumberUpdated': { kind: 'OBJECT'; name: 'FulfillmentTrackingNumberUpdated'; fields: { 'fulfillment': { name: 'fulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'FulfillmentUpdateTracking': { kind: 'OBJECT'; name: 'FulfillmentUpdateTracking'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'fulfillment': { name: 'fulfillment'; type: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'FulfillmentUpdateTrackingInput': { kind: 'INPUT_OBJECT'; name: 'FulfillmentUpdateTrackingInput'; isOneOf: false; inputFields: [{ name: 'trackingNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notifyCustomer'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'GatewayConfigLine': { kind: 'OBJECT'; name: 'GatewayConfigLine'; fields: { 'field': { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'GenericScalar': unknown;
    'GiftCard': { kind: 'OBJECT'; name: 'GiftCard'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'boughtInChannel': { name: 'boughtInChannel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'createdBy': { name: 'createdBy'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'createdByEmail': { name: 'createdByEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'currentBalance': { name: 'currentBalance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'displayCode': { name: 'displayCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'endDate': { name: 'endDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardEvent'; ofType: null; }; }; }; } }; 'expiryDate': { name: 'expiryDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'initialBalance': { name: 'initialBalance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'isActive': { name: 'isActive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'last4CodeChars': { name: 'last4CodeChars'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'lastUsedOn': { name: 'lastUsedOn'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'startDate': { name: 'startDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardTag'; ofType: null; }; }; }; } }; 'usedBy': { name: 'usedBy'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'usedByEmail': { name: 'usedByEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'GiftCardActivate': { kind: 'OBJECT'; name: 'GiftCardActivate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'giftCardErrors': { name: 'giftCardErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; }; };
    'GiftCardAddNote': { kind: 'OBJECT'; name: 'GiftCardAddNote'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; 'event': { name: 'event'; type: { kind: 'OBJECT'; name: 'GiftCardEvent'; ofType: null; } }; 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; }; };
    'GiftCardAddNoteInput': { kind: 'INPUT_OBJECT'; name: 'GiftCardAddNoteInput'; isOneOf: false; inputFields: [{ name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'GiftCardBulkActivate': { kind: 'OBJECT'; name: 'GiftCardBulkActivate'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; }; };
    'GiftCardBulkCreate': { kind: 'OBJECT'; name: 'GiftCardBulkCreate'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; 'giftCards': { name: 'giftCards'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; }; }; }; } }; }; };
    'GiftCardBulkCreateInput': { kind: 'INPUT_OBJECT'; name: 'GiftCardBulkCreateInput'; isOneOf: false; inputFields: [{ name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'balance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PriceInput'; ofType: null; }; }; defaultValue: null }, { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'expiryDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'isActive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'GiftCardBulkDeactivate': { kind: 'OBJECT'; name: 'GiftCardBulkDeactivate'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; }; };
    'GiftCardBulkDelete': { kind: 'OBJECT'; name: 'GiftCardBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; }; };
    'GiftCardCountableConnection': { kind: 'OBJECT'; name: 'GiftCardCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'GiftCardCountableEdge': { kind: 'OBJECT'; name: 'GiftCardCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; }; } }; }; };
    'GiftCardCreate': { kind: 'OBJECT'; name: 'GiftCardCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'giftCardErrors': { name: 'giftCardErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; }; };
    'GiftCardCreateInput': { kind: 'INPUT_OBJECT'; name: 'GiftCardCreateInput'; isOneOf: false; inputFields: [{ name: 'addTags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'expiryDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'startDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'endDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'balance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PriceInput'; ofType: null; }; }; defaultValue: null }, { name: 'userEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'isActive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'GiftCardCreated': { kind: 'OBJECT'; name: 'GiftCardCreated'; fields: { 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'GiftCardDeactivate': { kind: 'OBJECT'; name: 'GiftCardDeactivate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'giftCardErrors': { name: 'giftCardErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; }; };
    'GiftCardDelete': { kind: 'OBJECT'; name: 'GiftCardDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'giftCardErrors': { name: 'giftCardErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; }; };
    'GiftCardDeleted': { kind: 'OBJECT'; name: 'GiftCardDeleted'; fields: { 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'GiftCardError': { kind: 'OBJECT'; name: 'GiftCardError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'GiftCardErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; }; };
    'GiftCardErrorCode': { name: 'GiftCardErrorCode'; enumValues: 'ALREADY_EXISTS' | 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE' | 'EXPIRED_GIFT_CARD' | 'DUPLICATED_INPUT_ITEM'; };
    'GiftCardEvent': { kind: 'OBJECT'; name: 'GiftCardEvent'; fields: { 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'balance': { name: 'balance'; type: { kind: 'OBJECT'; name: 'GiftCardEventBalance'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'expiryDate': { name: 'expiryDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'oldExpiryDate': { name: 'oldExpiryDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'oldTags': { name: 'oldTags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'orderId': { name: 'orderId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'orderNumber': { name: 'orderNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tags': { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'GiftCardEventsEnum'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'GiftCardEventBalance': { kind: 'OBJECT'; name: 'GiftCardEventBalance'; fields: { 'currentBalance': { name: 'currentBalance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'initialBalance': { name: 'initialBalance'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'oldCurrentBalance': { name: 'oldCurrentBalance'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'oldInitialBalance': { name: 'oldInitialBalance'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; }; };
    'GiftCardEventFilterInput': { kind: 'INPUT_OBJECT'; name: 'GiftCardEventFilterInput'; isOneOf: false; inputFields: [{ name: 'type'; type: { kind: 'ENUM'; name: 'GiftCardEventsEnum'; ofType: null; }; defaultValue: null }, { name: 'orders'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'GiftCardEventsEnum': { name: 'GiftCardEventsEnum'; enumValues: 'ISSUED' | 'BOUGHT' | 'UPDATED' | 'ACTIVATED' | 'DEACTIVATED' | 'BALANCE_RESET' | 'EXPIRY_DATE_UPDATED' | 'TAGS_UPDATED' | 'SENT_TO_CUSTOMER' | 'RESENT' | 'NOTE_ADDED' | 'USED_IN_ORDER'; };
    'GiftCardExportCompleted': { kind: 'OBJECT'; name: 'GiftCardExportCompleted'; fields: { 'export': { name: 'export'; type: { kind: 'OBJECT'; name: 'ExportFile'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'GiftCardFilterInput': { kind: 'INPUT_OBJECT'; name: 'GiftCardFilterInput'; isOneOf: false; inputFields: [{ name: 'isActive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'tags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'products'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'usedBy'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'used'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'currency'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'currentBalance'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRangeInput'; ofType: null; }; defaultValue: null }, { name: 'initialBalance'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRangeInput'; ofType: null; }; defaultValue: null }, { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'createdByEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'GiftCardMetadataUpdated': { kind: 'OBJECT'; name: 'GiftCardMetadataUpdated'; fields: { 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'GiftCardResend': { kind: 'OBJECT'; name: 'GiftCardResend'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; }; };
    'GiftCardResendInput': { kind: 'INPUT_OBJECT'; name: 'GiftCardResendInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'GiftCardSent': { kind: 'OBJECT'; name: 'GiftCardSent'; fields: { 'channel': { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'sentToEmail': { name: 'sentToEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'GiftCardSettings': { kind: 'OBJECT'; name: 'GiftCardSettings'; fields: { 'expiryPeriod': { name: 'expiryPeriod'; type: { kind: 'OBJECT'; name: 'TimePeriod'; ofType: null; } }; 'expiryType': { name: 'expiryType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'GiftCardSettingsExpiryTypeEnum'; ofType: null; }; } }; }; };
    'GiftCardSettingsError': { kind: 'OBJECT'; name: 'GiftCardSettingsError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'GiftCardSettingsErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'GiftCardSettingsErrorCode': { name: 'GiftCardSettingsErrorCode'; enumValues: 'INVALID' | 'REQUIRED' | 'GRAPHQL_ERROR'; };
    'GiftCardSettingsExpiryTypeEnum': { name: 'GiftCardSettingsExpiryTypeEnum'; enumValues: 'NEVER_EXPIRE' | 'EXPIRY_PERIOD'; };
    'GiftCardSettingsUpdate': { kind: 'OBJECT'; name: 'GiftCardSettingsUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardSettingsError'; ofType: null; }; }; }; } }; 'giftCardSettings': { name: 'giftCardSettings'; type: { kind: 'OBJECT'; name: 'GiftCardSettings'; ofType: null; } }; }; };
    'GiftCardSettingsUpdateInput': { kind: 'INPUT_OBJECT'; name: 'GiftCardSettingsUpdateInput'; isOneOf: false; inputFields: [{ name: 'expiryType'; type: { kind: 'ENUM'; name: 'GiftCardSettingsExpiryTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'expiryPeriod'; type: { kind: 'INPUT_OBJECT'; name: 'TimePeriodInputType'; ofType: null; }; defaultValue: null }]; };
    'GiftCardSortField': { name: 'GiftCardSortField'; enumValues: 'PRODUCT' | 'USED_BY' | 'CURRENT_BALANCE' | 'CREATED_AT'; };
    'GiftCardSortingInput': { kind: 'INPUT_OBJECT'; name: 'GiftCardSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'GiftCardSortField'; ofType: null; }; }; defaultValue: null }]; };
    'GiftCardStatusChanged': { kind: 'OBJECT'; name: 'GiftCardStatusChanged'; fields: { 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'GiftCardTag': { kind: 'OBJECT'; name: 'GiftCardTag'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'GiftCardTagCountableConnection': { kind: 'OBJECT'; name: 'GiftCardTagCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardTagCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'GiftCardTagCountableEdge': { kind: 'OBJECT'; name: 'GiftCardTagCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardTag'; ofType: null; }; } }; }; };
    'GiftCardTagFilterInput': { kind: 'INPUT_OBJECT'; name: 'GiftCardTagFilterInput'; isOneOf: false; inputFields: [{ name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'GiftCardUpdate': { kind: 'OBJECT'; name: 'GiftCardUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'giftCardErrors': { name: 'giftCardErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardError'; ofType: null; }; }; }; } }; }; };
    'GiftCardUpdateInput': { kind: 'INPUT_OBJECT'; name: 'GiftCardUpdateInput'; isOneOf: false; inputFields: [{ name: 'addTags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'expiryDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'startDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'endDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'removeTags'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'balanceAmount'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }]; };
    'GiftCardUpdated': { kind: 'OBJECT'; name: 'GiftCardUpdated'; fields: { 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'GlobalIDFilterInput': { kind: 'INPUT_OBJECT'; name: 'GlobalIDFilterInput'; isOneOf: false; inputFields: [{ name: 'eq'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'oneOf'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'Group': { kind: 'OBJECT'; name: 'Group'; fields: { 'accessibleChannels': { name: 'accessibleChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'permissions': { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Permission'; ofType: null; }; }; } }; 'restrictedAccessToChannels': { name: 'restrictedAccessToChannels'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'userCanManage': { name: 'userCanManage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'users': { name: 'users'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; }; } }; }; };
    'GroupCountableConnection': { kind: 'OBJECT'; name: 'GroupCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GroupCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'GroupCountableEdge': { kind: 'OBJECT'; name: 'GroupCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; } }; }; };
    'ID': unknown;
    'IconThumbnailFormatEnum': { name: 'IconThumbnailFormatEnum'; enumValues: 'ORIGINAL' | 'WEBP'; };
    'Image': { kind: 'OBJECT'; name: 'Image'; fields: { 'alt': { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Int': unknown;
    'IntRangeInput': { kind: 'INPUT_OBJECT'; name: 'IntRangeInput'; isOneOf: false; inputFields: [{ name: 'gte'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'lte'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'Invoice': { kind: 'OBJECT'; name: 'Invoice'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'externalUrl': { name: 'externalUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'number': { name: 'number'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'JobStatusEnum'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'InvoiceCreate': { kind: 'OBJECT'; name: 'InvoiceCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InvoiceError'; ofType: null; }; }; }; } }; 'invoice': { name: 'invoice'; type: { kind: 'OBJECT'; name: 'Invoice'; ofType: null; } }; 'invoiceErrors': { name: 'invoiceErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InvoiceError'; ofType: null; }; }; }; } }; }; };
    'InvoiceCreateInput': { kind: 'INPUT_OBJECT'; name: 'InvoiceCreateInput'; isOneOf: false; inputFields: [{ name: 'number'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'InvoiceDelete': { kind: 'OBJECT'; name: 'InvoiceDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InvoiceError'; ofType: null; }; }; }; } }; 'invoice': { name: 'invoice'; type: { kind: 'OBJECT'; name: 'Invoice'; ofType: null; } }; 'invoiceErrors': { name: 'invoiceErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InvoiceError'; ofType: null; }; }; }; } }; }; };
    'InvoiceDeleted': { kind: 'OBJECT'; name: 'InvoiceDeleted'; fields: { 'invoice': { name: 'invoice'; type: { kind: 'OBJECT'; name: 'Invoice'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'InvoiceError': { kind: 'OBJECT'; name: 'InvoiceError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'InvoiceErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'InvoiceErrorCode': { name: 'InvoiceErrorCode'; enumValues: 'REQUIRED' | 'NOT_READY' | 'URL_NOT_SET' | 'EMAIL_NOT_SET' | 'NUMBER_NOT_SET' | 'NOT_FOUND' | 'INVALID_STATUS' | 'NO_INVOICE_PLUGIN'; };
    'InvoiceRequest': { kind: 'OBJECT'; name: 'InvoiceRequest'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InvoiceError'; ofType: null; }; }; }; } }; 'invoice': { name: 'invoice'; type: { kind: 'OBJECT'; name: 'Invoice'; ofType: null; } }; 'invoiceErrors': { name: 'invoiceErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InvoiceError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; }; };
    'InvoiceRequestDelete': { kind: 'OBJECT'; name: 'InvoiceRequestDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InvoiceError'; ofType: null; }; }; }; } }; 'invoice': { name: 'invoice'; type: { kind: 'OBJECT'; name: 'Invoice'; ofType: null; } }; 'invoiceErrors': { name: 'invoiceErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InvoiceError'; ofType: null; }; }; }; } }; }; };
    'InvoiceRequested': { kind: 'OBJECT'; name: 'InvoiceRequested'; fields: { 'invoice': { name: 'invoice'; type: { kind: 'OBJECT'; name: 'Invoice'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Order'; ofType: null; }; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'InvoiceSendNotification': { kind: 'OBJECT'; name: 'InvoiceSendNotification'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InvoiceError'; ofType: null; }; }; }; } }; 'invoice': { name: 'invoice'; type: { kind: 'OBJECT'; name: 'Invoice'; ofType: null; } }; 'invoiceErrors': { name: 'invoiceErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InvoiceError'; ofType: null; }; }; }; } }; }; };
    'InvoiceSent': { kind: 'OBJECT'; name: 'InvoiceSent'; fields: { 'invoice': { name: 'invoice'; type: { kind: 'OBJECT'; name: 'Invoice'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'InvoiceUpdate': { kind: 'OBJECT'; name: 'InvoiceUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InvoiceError'; ofType: null; }; }; }; } }; 'invoice': { name: 'invoice'; type: { kind: 'OBJECT'; name: 'Invoice'; ofType: null; } }; 'invoiceErrors': { name: 'invoiceErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'InvoiceError'; ofType: null; }; }; }; } }; }; };
    'IssuingPrincipal': { kind: 'UNION'; name: 'IssuingPrincipal'; fields: {}; possibleTypes: 'App' | 'User'; };
    'JSON': unknown;
    'JSONString': unknown;
    'Job': { kind: 'INTERFACE'; name: 'Job'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'JobStatusEnum'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; possibleTypes: 'AppInstallation' | 'ExportFile' | 'Invoice'; };
    'JobStatusEnum': { name: 'JobStatusEnum'; enumValues: 'PENDING' | 'SUCCESS' | 'FAILED' | 'DELETED'; };
    'LanguageCodeEnum': { name: 'LanguageCodeEnum'; enumValues: 'AF' | 'AF_NA' | 'AF_ZA' | 'AGQ' | 'AGQ_CM' | 'AK' | 'AK_GH' | 'AM' | 'AM_ET' | 'AR' | 'AR_AE' | 'AR_BH' | 'AR_DJ' | 'AR_DZ' | 'AR_EG' | 'AR_EH' | 'AR_ER' | 'AR_IL' | 'AR_IQ' | 'AR_JO' | 'AR_KM' | 'AR_KW' | 'AR_LB' | 'AR_LY' | 'AR_MA' | 'AR_MR' | 'AR_OM' | 'AR_PS' | 'AR_QA' | 'AR_SA' | 'AR_SD' | 'AR_SO' | 'AR_SS' | 'AR_SY' | 'AR_TD' | 'AR_TN' | 'AR_YE' | 'AS' | 'AS_IN' | 'ASA' | 'ASA_TZ' | 'AST' | 'AST_ES' | 'AZ' | 'AZ_CYRL' | 'AZ_CYRL_AZ' | 'AZ_LATN' | 'AZ_LATN_AZ' | 'BAS' | 'BAS_CM' | 'BE' | 'BE_BY' | 'BEM' | 'BEM_ZM' | 'BEZ' | 'BEZ_TZ' | 'BG' | 'BG_BG' | 'BM' | 'BM_ML' | 'BN' | 'BN_BD' | 'BN_IN' | 'BO' | 'BO_CN' | 'BO_IN' | 'BR' | 'BR_FR' | 'BRX' | 'BRX_IN' | 'BS' | 'BS_CYRL' | 'BS_CYRL_BA' | 'BS_LATN' | 'BS_LATN_BA' | 'CA' | 'CA_AD' | 'CA_ES' | 'CA_ES_VALENCIA' | 'CA_FR' | 'CA_IT' | 'CCP' | 'CCP_BD' | 'CCP_IN' | 'CE' | 'CE_RU' | 'CEB' | 'CEB_PH' | 'CGG' | 'CGG_UG' | 'CHR' | 'CHR_US' | 'CKB' | 'CKB_IQ' | 'CKB_IR' | 'CS' | 'CS_CZ' | 'CU' | 'CU_RU' | 'CY' | 'CY_GB' | 'DA' | 'DA_DK' | 'DA_GL' | 'DAV' | 'DAV_KE' | 'DE' | 'DE_AT' | 'DE_BE' | 'DE_CH' | 'DE_DE' | 'DE_IT' | 'DE_LI' | 'DE_LU' | 'DJE' | 'DJE_NE' | 'DSB' | 'DSB_DE' | 'DUA' | 'DUA_CM' | 'DYO' | 'DYO_SN' | 'DZ' | 'DZ_BT' | 'EBU' | 'EBU_KE' | 'EE' | 'EE_GH' | 'EE_TG' | 'EL' | 'EL_CY' | 'EL_GR' | 'EN' | 'EN_AE' | 'EN_AG' | 'EN_AI' | 'EN_AS' | 'EN_AT' | 'EN_AU' | 'EN_BB' | 'EN_BE' | 'EN_BI' | 'EN_BM' | 'EN_BS' | 'EN_BW' | 'EN_BZ' | 'EN_CA' | 'EN_CC' | 'EN_CH' | 'EN_CK' | 'EN_CM' | 'EN_CX' | 'EN_CY' | 'EN_DE' | 'EN_DG' | 'EN_DK' | 'EN_DM' | 'EN_ER' | 'EN_FI' | 'EN_FJ' | 'EN_FK' | 'EN_FM' | 'EN_GB' | 'EN_GD' | 'EN_GG' | 'EN_GH' | 'EN_GI' | 'EN_GM' | 'EN_GU' | 'EN_GY' | 'EN_HK' | 'EN_IE' | 'EN_IL' | 'EN_IM' | 'EN_IN' | 'EN_IO' | 'EN_JE' | 'EN_JM' | 'EN_KE' | 'EN_KI' | 'EN_KN' | 'EN_KY' | 'EN_LC' | 'EN_LR' | 'EN_LS' | 'EN_MG' | 'EN_MH' | 'EN_MO' | 'EN_MP' | 'EN_MS' | 'EN_MT' | 'EN_MU' | 'EN_MW' | 'EN_MY' | 'EN_NA' | 'EN_NF' | 'EN_NG' | 'EN_NL' | 'EN_NR' | 'EN_NU' | 'EN_NZ' | 'EN_PG' | 'EN_PH' | 'EN_PK' | 'EN_PN' | 'EN_PR' | 'EN_PW' | 'EN_RW' | 'EN_SB' | 'EN_SC' | 'EN_SD' | 'EN_SE' | 'EN_SG' | 'EN_SH' | 'EN_SI' | 'EN_SL' | 'EN_SS' | 'EN_SX' | 'EN_SZ' | 'EN_TC' | 'EN_TK' | 'EN_TO' | 'EN_TT' | 'EN_TV' | 'EN_TZ' | 'EN_UG' | 'EN_UM' | 'EN_US' | 'EN_VC' | 'EN_VG' | 'EN_VI' | 'EN_VU' | 'EN_WS' | 'EN_ZA' | 'EN_ZM' | 'EN_ZW' | 'EO' | 'ES' | 'ES_AR' | 'ES_BO' | 'ES_BR' | 'ES_BZ' | 'ES_CL' | 'ES_CO' | 'ES_CR' | 'ES_CU' | 'ES_DO' | 'ES_EA' | 'ES_EC' | 'ES_ES' | 'ES_GQ' | 'ES_GT' | 'ES_HN' | 'ES_IC' | 'ES_MX' | 'ES_NI' | 'ES_PA' | 'ES_PE' | 'ES_PH' | 'ES_PR' | 'ES_PY' | 'ES_SV' | 'ES_US' | 'ES_UY' | 'ES_VE' | 'ET' | 'ET_EE' | 'EU' | 'EU_ES' | 'EWO' | 'EWO_CM' | 'FA' | 'FA_AF' | 'FA_IR' | 'FF' | 'FF_ADLM' | 'FF_ADLM_BF' | 'FF_ADLM_CM' | 'FF_ADLM_GH' | 'FF_ADLM_GM' | 'FF_ADLM_GN' | 'FF_ADLM_GW' | 'FF_ADLM_LR' | 'FF_ADLM_MR' | 'FF_ADLM_NE' | 'FF_ADLM_NG' | 'FF_ADLM_SL' | 'FF_ADLM_SN' | 'FF_LATN' | 'FF_LATN_BF' | 'FF_LATN_CM' | 'FF_LATN_GH' | 'FF_LATN_GM' | 'FF_LATN_GN' | 'FF_LATN_GW' | 'FF_LATN_LR' | 'FF_LATN_MR' | 'FF_LATN_NE' | 'FF_LATN_NG' | 'FF_LATN_SL' | 'FF_LATN_SN' | 'FI' | 'FI_FI' | 'FIL' | 'FIL_PH' | 'FO' | 'FO_DK' | 'FO_FO' | 'FR' | 'FR_BE' | 'FR_BF' | 'FR_BI' | 'FR_BJ' | 'FR_BL' | 'FR_CA' | 'FR_CD' | 'FR_CF' | 'FR_CG' | 'FR_CH' | 'FR_CI' | 'FR_CM' | 'FR_DJ' | 'FR_DZ' | 'FR_FR' | 'FR_GA' | 'FR_GF' | 'FR_GN' | 'FR_GP' | 'FR_GQ' | 'FR_HT' | 'FR_KM' | 'FR_LU' | 'FR_MA' | 'FR_MC' | 'FR_MF' | 'FR_MG' | 'FR_ML' | 'FR_MQ' | 'FR_MR' | 'FR_MU' | 'FR_NC' | 'FR_NE' | 'FR_PF' | 'FR_PM' | 'FR_RE' | 'FR_RW' | 'FR_SC' | 'FR_SN' | 'FR_SY' | 'FR_TD' | 'FR_TG' | 'FR_TN' | 'FR_VU' | 'FR_WF' | 'FR_YT' | 'FUR' | 'FUR_IT' | 'FY' | 'FY_NL' | 'GA' | 'GA_GB' | 'GA_IE' | 'GD' | 'GD_GB' | 'GL' | 'GL_ES' | 'GSW' | 'GSW_CH' | 'GSW_FR' | 'GSW_LI' | 'GU' | 'GU_IN' | 'GUZ' | 'GUZ_KE' | 'GV' | 'GV_IM' | 'HA' | 'HA_GH' | 'HA_NE' | 'HA_NG' | 'HAW' | 'HAW_US' | 'HE' | 'HE_IL' | 'HI' | 'HI_IN' | 'HR' | 'HR_BA' | 'HR_HR' | 'HSB' | 'HSB_DE' | 'HU' | 'HU_HU' | 'HY' | 'HY_AM' | 'IA' | 'ID' | 'ID_ID' | 'IG' | 'IG_NG' | 'II' | 'II_CN' | 'IS' | 'IS_IS' | 'IT' | 'IT_CH' | 'IT_IT' | 'IT_SM' | 'IT_VA' | 'JA' | 'JA_JP' | 'JGO' | 'JGO_CM' | 'JMC' | 'JMC_TZ' | 'JV' | 'JV_ID' | 'KA' | 'KA_GE' | 'KAB' | 'KAB_DZ' | 'KAM' | 'KAM_KE' | 'KDE' | 'KDE_TZ' | 'KEA' | 'KEA_CV' | 'KHQ' | 'KHQ_ML' | 'KI' | 'KI_KE' | 'KK' | 'KK_KZ' | 'KKJ' | 'KKJ_CM' | 'KL' | 'KL_GL' | 'KLN' | 'KLN_KE' | 'KM' | 'KM_KH' | 'KN' | 'KN_IN' | 'KO' | 'KO_KP' | 'KO_KR' | 'KOK' | 'KOK_IN' | 'KS' | 'KS_ARAB' | 'KS_ARAB_IN' | 'KSB' | 'KSB_TZ' | 'KSF' | 'KSF_CM' | 'KSH' | 'KSH_DE' | 'KU' | 'KU_TR' | 'KW' | 'KW_GB' | 'KY' | 'KY_KG' | 'LAG' | 'LAG_TZ' | 'LB' | 'LB_LU' | 'LG' | 'LG_UG' | 'LKT' | 'LKT_US' | 'LN' | 'LN_AO' | 'LN_CD' | 'LN_CF' | 'LN_CG' | 'LO' | 'LO_LA' | 'LRC' | 'LRC_IQ' | 'LRC_IR' | 'LT' | 'LT_LT' | 'LU' | 'LU_CD' | 'LUO' | 'LUO_KE' | 'LUY' | 'LUY_KE' | 'LV' | 'LV_LV' | 'MAI' | 'MAI_IN' | 'MAS' | 'MAS_KE' | 'MAS_TZ' | 'MER' | 'MER_KE' | 'MFE' | 'MFE_MU' | 'MG' | 'MG_MG' | 'MGH' | 'MGH_MZ' | 'MGO' | 'MGO_CM' | 'MI' | 'MI_NZ' | 'MK' | 'MK_MK' | 'ML' | 'ML_IN' | 'MN' | 'MN_MN' | 'MNI' | 'MNI_BENG' | 'MNI_BENG_IN' | 'MR' | 'MR_IN' | 'MS' | 'MS_BN' | 'MS_ID' | 'MS_MY' | 'MS_SG' | 'MT' | 'MT_MT' | 'MUA' | 'MUA_CM' | 'MY' | 'MY_MM' | 'MZN' | 'MZN_IR' | 'NAQ' | 'NAQ_NA' | 'NB' | 'NB_NO' | 'NB_SJ' | 'ND' | 'ND_ZW' | 'NDS' | 'NDS_DE' | 'NDS_NL' | 'NE' | 'NE_IN' | 'NE_NP' | 'NL' | 'NL_AW' | 'NL_BE' | 'NL_BQ' | 'NL_CW' | 'NL_NL' | 'NL_SR' | 'NL_SX' | 'NMG' | 'NMG_CM' | 'NN' | 'NN_NO' | 'NNH' | 'NNH_CM' | 'NUS' | 'NUS_SS' | 'NYN' | 'NYN_UG' | 'OM' | 'OM_ET' | 'OM_KE' | 'OR' | 'OR_IN' | 'OS' | 'OS_GE' | 'OS_RU' | 'PA' | 'PA_ARAB' | 'PA_ARAB_PK' | 'PA_GURU' | 'PA_GURU_IN' | 'PCM' | 'PCM_NG' | 'PL' | 'PL_PL' | 'PRG' | 'PS' | 'PS_AF' | 'PS_PK' | 'PT' | 'PT_AO' | 'PT_BR' | 'PT_CH' | 'PT_CV' | 'PT_GQ' | 'PT_GW' | 'PT_LU' | 'PT_MO' | 'PT_MZ' | 'PT_PT' | 'PT_ST' | 'PT_TL' | 'QU' | 'QU_BO' | 'QU_EC' | 'QU_PE' | 'RM' | 'RM_CH' | 'RN' | 'RN_BI' | 'RO' | 'RO_MD' | 'RO_RO' | 'ROF' | 'ROF_TZ' | 'RU' | 'RU_BY' | 'RU_KG' | 'RU_KZ' | 'RU_MD' | 'RU_RU' | 'RU_UA' | 'RW' | 'RW_RW' | 'RWK' | 'RWK_TZ' | 'SAH' | 'SAH_RU' | 'SAQ' | 'SAQ_KE' | 'SAT' | 'SAT_OLCK' | 'SAT_OLCK_IN' | 'SBP' | 'SBP_TZ' | 'SD' | 'SD_ARAB' | 'SD_ARAB_PK' | 'SD_DEVA' | 'SD_DEVA_IN' | 'SE' | 'SE_FI' | 'SE_NO' | 'SE_SE' | 'SEH' | 'SEH_MZ' | 'SES' | 'SES_ML' | 'SG' | 'SG_CF' | 'SHI' | 'SHI_LATN' | 'SHI_LATN_MA' | 'SHI_TFNG' | 'SHI_TFNG_MA' | 'SI' | 'SI_LK' | 'SK' | 'SK_SK' | 'SL' | 'SL_SI' | 'SMN' | 'SMN_FI' | 'SN' | 'SN_ZW' | 'SO' | 'SO_DJ' | 'SO_ET' | 'SO_KE' | 'SO_SO' | 'SQ' | 'SQ_AL' | 'SQ_MK' | 'SQ_XK' | 'SR' | 'SR_CYRL' | 'SR_CYRL_BA' | 'SR_CYRL_ME' | 'SR_CYRL_RS' | 'SR_CYRL_XK' | 'SR_LATN' | 'SR_LATN_BA' | 'SR_LATN_ME' | 'SR_LATN_RS' | 'SR_LATN_XK' | 'SU' | 'SU_LATN' | 'SU_LATN_ID' | 'SV' | 'SV_AX' | 'SV_FI' | 'SV_SE' | 'SW' | 'SW_CD' | 'SW_KE' | 'SW_TZ' | 'SW_UG' | 'TA' | 'TA_IN' | 'TA_LK' | 'TA_MY' | 'TA_SG' | 'TE' | 'TE_IN' | 'TEO' | 'TEO_KE' | 'TEO_UG' | 'TG' | 'TG_TJ' | 'TH' | 'TH_TH' | 'TI' | 'TI_ER' | 'TI_ET' | 'TK' | 'TK_TM' | 'TO' | 'TO_TO' | 'TR' | 'TR_CY' | 'TR_TR' | 'TT' | 'TT_RU' | 'TWQ' | 'TWQ_NE' | 'TZM' | 'TZM_MA' | 'UG' | 'UG_CN' | 'UK' | 'UK_UA' | 'UR' | 'UR_IN' | 'UR_PK' | 'UZ' | 'UZ_ARAB' | 'UZ_ARAB_AF' | 'UZ_CYRL' | 'UZ_CYRL_UZ' | 'UZ_LATN' | 'UZ_LATN_UZ' | 'VAI' | 'VAI_LATN' | 'VAI_LATN_LR' | 'VAI_VAII' | 'VAI_VAII_LR' | 'VI' | 'VI_VN' | 'VO' | 'VUN' | 'VUN_TZ' | 'WAE' | 'WAE_CH' | 'WO' | 'WO_SN' | 'XH' | 'XH_ZA' | 'XOG' | 'XOG_UG' | 'YAV' | 'YAV_CM' | 'YI' | 'YO' | 'YO_BJ' | 'YO_NG' | 'YUE' | 'YUE_HANS' | 'YUE_HANS_CN' | 'YUE_HANT' | 'YUE_HANT_HK' | 'ZGH' | 'ZGH_MA' | 'ZH' | 'ZH_HANS' | 'ZH_HANS_CN' | 'ZH_HANS_HK' | 'ZH_HANS_MO' | 'ZH_HANS_SG' | 'ZH_HANT' | 'ZH_HANT_HK' | 'ZH_HANT_MO' | 'ZH_HANT_TW' | 'ZU' | 'ZU_ZA'; };
    'LanguageDisplay': { kind: 'OBJECT'; name: 'LanguageDisplay'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LanguageCodeEnum'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'LimitInfo': { kind: 'OBJECT'; name: 'LimitInfo'; fields: { 'allowedUsage': { name: 'allowedUsage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Limits'; ofType: null; }; } }; 'currentUsage': { name: 'currentUsage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Limits'; ofType: null; }; } }; }; };
    'Limits': { kind: 'OBJECT'; name: 'Limits'; fields: { 'channels': { name: 'channels'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'orders': { name: 'orders'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'productVariants': { name: 'productVariants'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'staffUsers': { name: 'staffUsers'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'warehouses': { name: 'warehouses'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ListStoredPaymentMethods': { kind: 'OBJECT'; name: 'ListStoredPaymentMethods'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Manifest': { kind: 'OBJECT'; name: 'Manifest'; fields: { 'about': { name: 'about'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'appUrl': { name: 'appUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'audience': { name: 'audience'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'author': { name: 'author'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'brand': { name: 'brand'; type: { kind: 'OBJECT'; name: 'AppManifestBrand'; ofType: null; } }; 'configurationUrl': { name: 'configurationUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dataPrivacy': { name: 'dataPrivacy'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'dataPrivacyUrl': { name: 'dataPrivacyUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'extensions': { name: 'extensions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppManifestExtension'; ofType: null; }; }; }; } }; 'homepageUrl': { name: 'homepageUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'identifier': { name: 'identifier'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'permissions': { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Permission'; ofType: null; }; }; } }; 'requiredSaleorVersion': { name: 'requiredSaleorVersion'; type: { kind: 'OBJECT'; name: 'AppManifestRequiredSaleorVersion'; ofType: null; } }; 'supportUrl': { name: 'supportUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'tokenTargetUrl': { name: 'tokenTargetUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'webhooks': { name: 'webhooks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppManifestWebhook'; ofType: null; }; }; }; } }; }; };
    'Margin': { kind: 'OBJECT'; name: 'Margin'; fields: { 'start': { name: 'start'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'stop': { name: 'stop'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'MarkAsPaidStrategyEnum': { name: 'MarkAsPaidStrategyEnum'; enumValues: 'TRANSACTION_FLOW' | 'PAYMENT_FLOW'; };
    'MeasurementUnitsEnum': { name: 'MeasurementUnitsEnum'; enumValues: 'MM' | 'CM' | 'DM' | 'M' | 'KM' | 'FT' | 'YD' | 'INCH' | 'SQ_MM' | 'SQ_CM' | 'SQ_DM' | 'SQ_M' | 'SQ_KM' | 'SQ_FT' | 'SQ_YD' | 'SQ_INCH' | 'CUBIC_MILLIMETER' | 'CUBIC_CENTIMETER' | 'CUBIC_DECIMETER' | 'CUBIC_METER' | 'LITER' | 'CUBIC_FOOT' | 'CUBIC_INCH' | 'CUBIC_YARD' | 'QT' | 'PINT' | 'FL_OZ' | 'ACRE_IN' | 'ACRE_FT' | 'G' | 'LB' | 'OZ' | 'KG' | 'TONNE'; };
    'MeasurementUnitsEnumFilterInput': { kind: 'INPUT_OBJECT'; name: 'MeasurementUnitsEnumFilterInput'; isOneOf: false; inputFields: [{ name: 'eq'; type: { kind: 'ENUM'; name: 'MeasurementUnitsEnum'; ofType: null; }; defaultValue: null }, { name: 'oneOf'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MeasurementUnitsEnum'; ofType: null; }; }; }; defaultValue: null }]; };
    'MediaChoicesSortField': { name: 'MediaChoicesSortField'; enumValues: 'ID'; };
    'MediaInput': { kind: 'INPUT_OBJECT'; name: 'MediaInput'; isOneOf: false; inputFields: [{ name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'Upload'; ofType: null; }; defaultValue: null }, { name: 'mediaUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MediaSortingInput': { kind: 'INPUT_OBJECT'; name: 'MediaSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MediaChoicesSortField'; ofType: null; }; }; defaultValue: null }]; };
    'Menu': { kind: 'OBJECT'; name: 'Menu'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'items': { name: 'items'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; }; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MenuBulkDelete': { kind: 'OBJECT'; name: 'MenuBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; 'menuErrors': { name: 'menuErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; }; };
    'MenuCountableConnection': { kind: 'OBJECT'; name: 'MenuCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'MenuCountableEdge': { kind: 'OBJECT'; name: 'MenuCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Menu'; ofType: null; }; } }; }; };
    'MenuCreate': { kind: 'OBJECT'; name: 'MenuCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; 'menu': { name: 'menu'; type: { kind: 'OBJECT'; name: 'Menu'; ofType: null; } }; 'menuErrors': { name: 'menuErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; }; };
    'MenuCreateInput': { kind: 'INPUT_OBJECT'; name: 'MenuCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'items'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MenuItemInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'MenuCreated': { kind: 'OBJECT'; name: 'MenuCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'menu': { name: 'menu'; type: { kind: 'OBJECT'; name: 'Menu'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MenuDelete': { kind: 'OBJECT'; name: 'MenuDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; 'menu': { name: 'menu'; type: { kind: 'OBJECT'; name: 'Menu'; ofType: null; } }; 'menuErrors': { name: 'menuErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; }; };
    'MenuDeleted': { kind: 'OBJECT'; name: 'MenuDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'menu': { name: 'menu'; type: { kind: 'OBJECT'; name: 'Menu'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MenuError': { kind: 'OBJECT'; name: 'MenuError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MenuErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MenuErrorCode': { name: 'MenuErrorCode'; enumValues: 'CANNOT_ASSIGN_NODE' | 'GRAPHQL_ERROR' | 'INVALID' | 'INVALID_MENU_ITEM' | 'NO_MENU_ITEM_PROVIDED' | 'NOT_FOUND' | 'REQUIRED' | 'TOO_MANY_MENU_ITEMS' | 'UNIQUE'; };
    'MenuFilterInput': { kind: 'INPUT_OBJECT'; name: 'MenuFilterInput'; isOneOf: false; inputFields: [{ name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'slugs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'MenuInput': { kind: 'INPUT_OBJECT'; name: 'MenuInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MenuItem': { kind: 'OBJECT'; name: 'MenuItem'; fields: { 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'children': { name: 'children'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; }; }; } }; 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'level': { name: 'level'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'menu': { name: 'menu'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Menu'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'page': { name: 'page'; type: { kind: 'OBJECT'; name: 'Page'; ofType: null; } }; 'parent': { name: 'parent'; type: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'MenuItemTranslation'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MenuItemBulkDelete': { kind: 'OBJECT'; name: 'MenuItemBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; 'menuErrors': { name: 'menuErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; }; };
    'MenuItemCountableConnection': { kind: 'OBJECT'; name: 'MenuItemCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuItemCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'MenuItemCountableEdge': { kind: 'OBJECT'; name: 'MenuItemCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; }; } }; }; };
    'MenuItemCreate': { kind: 'OBJECT'; name: 'MenuItemCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; 'menuErrors': { name: 'menuErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; 'menuItem': { name: 'menuItem'; type: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; } }; }; };
    'MenuItemCreateInput': { kind: 'INPUT_OBJECT'; name: 'MenuItemCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'category'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'collection'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'page'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'menu'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'parent'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'MenuItemCreated': { kind: 'OBJECT'; name: 'MenuItemCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'menuItem': { name: 'menuItem'; type: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MenuItemDelete': { kind: 'OBJECT'; name: 'MenuItemDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; 'menuErrors': { name: 'menuErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; 'menuItem': { name: 'menuItem'; type: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; } }; }; };
    'MenuItemDeleted': { kind: 'OBJECT'; name: 'MenuItemDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'menuItem': { name: 'menuItem'; type: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MenuItemFilterInput': { kind: 'INPUT_OBJECT'; name: 'MenuItemFilterInput'; isOneOf: false; inputFields: [{ name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }]; };
    'MenuItemInput': { kind: 'INPUT_OBJECT'; name: 'MenuItemInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'category'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'collection'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'page'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'MenuItemMove': { kind: 'OBJECT'; name: 'MenuItemMove'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; 'menu': { name: 'menu'; type: { kind: 'OBJECT'; name: 'Menu'; ofType: null; } }; 'menuErrors': { name: 'menuErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; }; };
    'MenuItemMoveInput': { kind: 'INPUT_OBJECT'; name: 'MenuItemMoveInput'; isOneOf: false; inputFields: [{ name: 'itemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'parentId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'sortOrder'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'MenuItemSortingInput': { kind: 'INPUT_OBJECT'; name: 'MenuItemSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MenuItemsSortField'; ofType: null; }; }; defaultValue: null }]; };
    'MenuItemTranslatableContent': { kind: 'OBJECT'; name: 'MenuItemTranslatableContent'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'menuItem': { name: 'menuItem'; type: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; } }; 'menuItemId': { name: 'menuItemId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'MenuItemTranslation'; ofType: null; } }; }; };
    'MenuItemTranslate': { kind: 'OBJECT'; name: 'MenuItemTranslate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'menuItem': { name: 'menuItem'; type: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; } }; 'translationErrors': { name: 'translationErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; }; };
    'MenuItemTranslation': { kind: 'OBJECT'; name: 'MenuItemTranslation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translatableContent': { name: 'translatableContent'; type: { kind: 'OBJECT'; name: 'MenuItemTranslatableContent'; ofType: null; } }; }; };
    'MenuItemUpdate': { kind: 'OBJECT'; name: 'MenuItemUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; 'menuErrors': { name: 'menuErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; 'menuItem': { name: 'menuItem'; type: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; } }; }; };
    'MenuItemUpdated': { kind: 'OBJECT'; name: 'MenuItemUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'menuItem': { name: 'menuItem'; type: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MenuItemsSortField': { name: 'MenuItemsSortField'; enumValues: 'NAME'; };
    'MenuSortField': { name: 'MenuSortField'; enumValues: 'NAME' | 'ITEMS_COUNT'; };
    'MenuSortingInput': { kind: 'INPUT_OBJECT'; name: 'MenuSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MenuSortField'; ofType: null; }; }; defaultValue: null }]; };
    'MenuUpdate': { kind: 'OBJECT'; name: 'MenuUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; 'menu': { name: 'menu'; type: { kind: 'OBJECT'; name: 'Menu'; ofType: null; } }; 'menuErrors': { name: 'menuErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MenuError'; ofType: null; }; }; }; } }; }; };
    'MenuUpdated': { kind: 'OBJECT'; name: 'MenuUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'menu': { name: 'menu'; type: { kind: 'OBJECT'; name: 'Menu'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Metadata': unknown;
    'MetadataError': { kind: 'OBJECT'; name: 'MetadataError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MetadataErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'MetadataErrorCode': { name: 'MetadataErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED' | 'NOT_UPDATED'; };
    'MetadataFilter': { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; isOneOf: false; inputFields: [{ name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'MetadataInput': { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; isOneOf: false; inputFields: [{ name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'MetadataItem': { kind: 'OBJECT'; name: 'MetadataItem'; fields: { 'key': { name: 'key'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'Minute': unknown;
    'Money': { kind: 'OBJECT'; name: 'Money'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'currency': { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'MoneyInput': { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; isOneOf: false; inputFields: [{ name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; }; defaultValue: null }]; };
    'MoneyRange': { kind: 'OBJECT'; name: 'MoneyRange'; fields: { 'start': { name: 'start'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'stop': { name: 'stop'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; }; };
    'MoveProductInput': { kind: 'INPUT_OBJECT'; name: 'MoveProductInput'; isOneOf: false; inputFields: [{ name: 'productId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'sortOrder'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'Mutation': { kind: 'OBJECT'; name: 'Mutation'; fields: { 'accountAddressCreate': { name: 'accountAddressCreate'; type: { kind: 'OBJECT'; name: 'AccountAddressCreate'; ofType: null; } }; 'accountAddressDelete': { name: 'accountAddressDelete'; type: { kind: 'OBJECT'; name: 'AccountAddressDelete'; ofType: null; } }; 'accountAddressUpdate': { name: 'accountAddressUpdate'; type: { kind: 'OBJECT'; name: 'AccountAddressUpdate'; ofType: null; } }; 'accountDelete': { name: 'accountDelete'; type: { kind: 'OBJECT'; name: 'AccountDelete'; ofType: null; } }; 'accountRegister': { name: 'accountRegister'; type: { kind: 'OBJECT'; name: 'AccountRegister'; ofType: null; } }; 'accountRequestDeletion': { name: 'accountRequestDeletion'; type: { kind: 'OBJECT'; name: 'AccountRequestDeletion'; ofType: null; } }; 'accountSetDefaultAddress': { name: 'accountSetDefaultAddress'; type: { kind: 'OBJECT'; name: 'AccountSetDefaultAddress'; ofType: null; } }; 'accountUpdate': { name: 'accountUpdate'; type: { kind: 'OBJECT'; name: 'AccountUpdate'; ofType: null; } }; 'addressCreate': { name: 'addressCreate'; type: { kind: 'OBJECT'; name: 'AddressCreate'; ofType: null; } }; 'addressDelete': { name: 'addressDelete'; type: { kind: 'OBJECT'; name: 'AddressDelete'; ofType: null; } }; 'addressSetDefault': { name: 'addressSetDefault'; type: { kind: 'OBJECT'; name: 'AddressSetDefault'; ofType: null; } }; 'addressUpdate': { name: 'addressUpdate'; type: { kind: 'OBJECT'; name: 'AddressUpdate'; ofType: null; } }; 'appActivate': { name: 'appActivate'; type: { kind: 'OBJECT'; name: 'AppActivate'; ofType: null; } }; 'appCreate': { name: 'appCreate'; type: { kind: 'OBJECT'; name: 'AppCreate'; ofType: null; } }; 'appDeactivate': { name: 'appDeactivate'; type: { kind: 'OBJECT'; name: 'AppDeactivate'; ofType: null; } }; 'appDelete': { name: 'appDelete'; type: { kind: 'OBJECT'; name: 'AppDelete'; ofType: null; } }; 'appDeleteFailedInstallation': { name: 'appDeleteFailedInstallation'; type: { kind: 'OBJECT'; name: 'AppDeleteFailedInstallation'; ofType: null; } }; 'appFetchManifest': { name: 'appFetchManifest'; type: { kind: 'OBJECT'; name: 'AppFetchManifest'; ofType: null; } }; 'appInstall': { name: 'appInstall'; type: { kind: 'OBJECT'; name: 'AppInstall'; ofType: null; } }; 'appRetryInstall': { name: 'appRetryInstall'; type: { kind: 'OBJECT'; name: 'AppRetryInstall'; ofType: null; } }; 'appTokenCreate': { name: 'appTokenCreate'; type: { kind: 'OBJECT'; name: 'AppTokenCreate'; ofType: null; } }; 'appTokenDelete': { name: 'appTokenDelete'; type: { kind: 'OBJECT'; name: 'AppTokenDelete'; ofType: null; } }; 'appTokenVerify': { name: 'appTokenVerify'; type: { kind: 'OBJECT'; name: 'AppTokenVerify'; ofType: null; } }; 'appUpdate': { name: 'appUpdate'; type: { kind: 'OBJECT'; name: 'AppUpdate'; ofType: null; } }; 'assignNavigation': { name: 'assignNavigation'; type: { kind: 'OBJECT'; name: 'AssignNavigation'; ofType: null; } }; 'assignWarehouseShippingZone': { name: 'assignWarehouseShippingZone'; type: { kind: 'OBJECT'; name: 'WarehouseShippingZoneAssign'; ofType: null; } }; 'attributeBulkCreate': { name: 'attributeBulkCreate'; type: { kind: 'OBJECT'; name: 'AttributeBulkCreate'; ofType: null; } }; 'attributeBulkDelete': { name: 'attributeBulkDelete'; type: { kind: 'OBJECT'; name: 'AttributeBulkDelete'; ofType: null; } }; 'attributeBulkTranslate': { name: 'attributeBulkTranslate'; type: { kind: 'OBJECT'; name: 'AttributeBulkTranslate'; ofType: null; } }; 'attributeBulkUpdate': { name: 'attributeBulkUpdate'; type: { kind: 'OBJECT'; name: 'AttributeBulkUpdate'; ofType: null; } }; 'attributeCreate': { name: 'attributeCreate'; type: { kind: 'OBJECT'; name: 'AttributeCreate'; ofType: null; } }; 'attributeDelete': { name: 'attributeDelete'; type: { kind: 'OBJECT'; name: 'AttributeDelete'; ofType: null; } }; 'attributeReorderValues': { name: 'attributeReorderValues'; type: { kind: 'OBJECT'; name: 'AttributeReorderValues'; ofType: null; } }; 'attributeTranslate': { name: 'attributeTranslate'; type: { kind: 'OBJECT'; name: 'AttributeTranslate'; ofType: null; } }; 'attributeUpdate': { name: 'attributeUpdate'; type: { kind: 'OBJECT'; name: 'AttributeUpdate'; ofType: null; } }; 'attributeValueBulkDelete': { name: 'attributeValueBulkDelete'; type: { kind: 'OBJECT'; name: 'AttributeValueBulkDelete'; ofType: null; } }; 'attributeValueBulkTranslate': { name: 'attributeValueBulkTranslate'; type: { kind: 'OBJECT'; name: 'AttributeValueBulkTranslate'; ofType: null; } }; 'attributeValueCreate': { name: 'attributeValueCreate'; type: { kind: 'OBJECT'; name: 'AttributeValueCreate'; ofType: null; } }; 'attributeValueDelete': { name: 'attributeValueDelete'; type: { kind: 'OBJECT'; name: 'AttributeValueDelete'; ofType: null; } }; 'attributeValueTranslate': { name: 'attributeValueTranslate'; type: { kind: 'OBJECT'; name: 'AttributeValueTranslate'; ofType: null; } }; 'attributeValueUpdate': { name: 'attributeValueUpdate'; type: { kind: 'OBJECT'; name: 'AttributeValueUpdate'; ofType: null; } }; 'categoryBulkDelete': { name: 'categoryBulkDelete'; type: { kind: 'OBJECT'; name: 'CategoryBulkDelete'; ofType: null; } }; 'categoryCreate': { name: 'categoryCreate'; type: { kind: 'OBJECT'; name: 'CategoryCreate'; ofType: null; } }; 'categoryDelete': { name: 'categoryDelete'; type: { kind: 'OBJECT'; name: 'CategoryDelete'; ofType: null; } }; 'categoryTranslate': { name: 'categoryTranslate'; type: { kind: 'OBJECT'; name: 'CategoryTranslate'; ofType: null; } }; 'categoryUpdate': { name: 'categoryUpdate'; type: { kind: 'OBJECT'; name: 'CategoryUpdate'; ofType: null; } }; 'channelActivate': { name: 'channelActivate'; type: { kind: 'OBJECT'; name: 'ChannelActivate'; ofType: null; } }; 'channelCreate': { name: 'channelCreate'; type: { kind: 'OBJECT'; name: 'ChannelCreate'; ofType: null; } }; 'channelDeactivate': { name: 'channelDeactivate'; type: { kind: 'OBJECT'; name: 'ChannelDeactivate'; ofType: null; } }; 'channelDelete': { name: 'channelDelete'; type: { kind: 'OBJECT'; name: 'ChannelDelete'; ofType: null; } }; 'channelReorderWarehouses': { name: 'channelReorderWarehouses'; type: { kind: 'OBJECT'; name: 'ChannelReorderWarehouses'; ofType: null; } }; 'channelUpdate': { name: 'channelUpdate'; type: { kind: 'OBJECT'; name: 'ChannelUpdate'; ofType: null; } }; 'checkoutAddPromoCode': { name: 'checkoutAddPromoCode'; type: { kind: 'OBJECT'; name: 'CheckoutAddPromoCode'; ofType: null; } }; 'checkoutBillingAddressUpdate': { name: 'checkoutBillingAddressUpdate'; type: { kind: 'OBJECT'; name: 'CheckoutBillingAddressUpdate'; ofType: null; } }; 'checkoutComplete': { name: 'checkoutComplete'; type: { kind: 'OBJECT'; name: 'CheckoutComplete'; ofType: null; } }; 'checkoutCreate': { name: 'checkoutCreate'; type: { kind: 'OBJECT'; name: 'CheckoutCreate'; ofType: null; } }; 'checkoutCreateFromOrder': { name: 'checkoutCreateFromOrder'; type: { kind: 'OBJECT'; name: 'CheckoutCreateFromOrder'; ofType: null; } }; 'checkoutCustomerAttach': { name: 'checkoutCustomerAttach'; type: { kind: 'OBJECT'; name: 'CheckoutCustomerAttach'; ofType: null; } }; 'checkoutCustomerDetach': { name: 'checkoutCustomerDetach'; type: { kind: 'OBJECT'; name: 'CheckoutCustomerDetach'; ofType: null; } }; 'checkoutDeliveryMethodUpdate': { name: 'checkoutDeliveryMethodUpdate'; type: { kind: 'OBJECT'; name: 'CheckoutDeliveryMethodUpdate'; ofType: null; } }; 'checkoutEmailUpdate': { name: 'checkoutEmailUpdate'; type: { kind: 'OBJECT'; name: 'CheckoutEmailUpdate'; ofType: null; } }; 'checkoutLanguageCodeUpdate': { name: 'checkoutLanguageCodeUpdate'; type: { kind: 'OBJECT'; name: 'CheckoutLanguageCodeUpdate'; ofType: null; } }; 'checkoutLineDelete': { name: 'checkoutLineDelete'; type: { kind: 'OBJECT'; name: 'CheckoutLineDelete'; ofType: null; } }; 'checkoutLinesAdd': { name: 'checkoutLinesAdd'; type: { kind: 'OBJECT'; name: 'CheckoutLinesAdd'; ofType: null; } }; 'checkoutLinesDelete': { name: 'checkoutLinesDelete'; type: { kind: 'OBJECT'; name: 'CheckoutLinesDelete'; ofType: null; } }; 'checkoutLinesUpdate': { name: 'checkoutLinesUpdate'; type: { kind: 'OBJECT'; name: 'CheckoutLinesUpdate'; ofType: null; } }; 'checkoutPaymentCreate': { name: 'checkoutPaymentCreate'; type: { kind: 'OBJECT'; name: 'CheckoutPaymentCreate'; ofType: null; } }; 'checkoutRemovePromoCode': { name: 'checkoutRemovePromoCode'; type: { kind: 'OBJECT'; name: 'CheckoutRemovePromoCode'; ofType: null; } }; 'checkoutShippingAddressUpdate': { name: 'checkoutShippingAddressUpdate'; type: { kind: 'OBJECT'; name: 'CheckoutShippingAddressUpdate'; ofType: null; } }; 'checkoutShippingMethodUpdate': { name: 'checkoutShippingMethodUpdate'; type: { kind: 'OBJECT'; name: 'CheckoutShippingMethodUpdate'; ofType: null; } }; 'collectionAddProducts': { name: 'collectionAddProducts'; type: { kind: 'OBJECT'; name: 'CollectionAddProducts'; ofType: null; } }; 'collectionBulkDelete': { name: 'collectionBulkDelete'; type: { kind: 'OBJECT'; name: 'CollectionBulkDelete'; ofType: null; } }; 'collectionChannelListingUpdate': { name: 'collectionChannelListingUpdate'; type: { kind: 'OBJECT'; name: 'CollectionChannelListingUpdate'; ofType: null; } }; 'collectionCreate': { name: 'collectionCreate'; type: { kind: 'OBJECT'; name: 'CollectionCreate'; ofType: null; } }; 'collectionDelete': { name: 'collectionDelete'; type: { kind: 'OBJECT'; name: 'CollectionDelete'; ofType: null; } }; 'collectionRemoveProducts': { name: 'collectionRemoveProducts'; type: { kind: 'OBJECT'; name: 'CollectionRemoveProducts'; ofType: null; } }; 'collectionReorderProducts': { name: 'collectionReorderProducts'; type: { kind: 'OBJECT'; name: 'CollectionReorderProducts'; ofType: null; } }; 'collectionTranslate': { name: 'collectionTranslate'; type: { kind: 'OBJECT'; name: 'CollectionTranslate'; ofType: null; } }; 'collectionUpdate': { name: 'collectionUpdate'; type: { kind: 'OBJECT'; name: 'CollectionUpdate'; ofType: null; } }; 'confirmAccount': { name: 'confirmAccount'; type: { kind: 'OBJECT'; name: 'ConfirmAccount'; ofType: null; } }; 'confirmEmailChange': { name: 'confirmEmailChange'; type: { kind: 'OBJECT'; name: 'ConfirmEmailChange'; ofType: null; } }; 'createWarehouse': { name: 'createWarehouse'; type: { kind: 'OBJECT'; name: 'WarehouseCreate'; ofType: null; } }; 'customerBulkDelete': { name: 'customerBulkDelete'; type: { kind: 'OBJECT'; name: 'CustomerBulkDelete'; ofType: null; } }; 'customerBulkUpdate': { name: 'customerBulkUpdate'; type: { kind: 'OBJECT'; name: 'CustomerBulkUpdate'; ofType: null; } }; 'customerCreate': { name: 'customerCreate'; type: { kind: 'OBJECT'; name: 'CustomerCreate'; ofType: null; } }; 'customerDelete': { name: 'customerDelete'; type: { kind: 'OBJECT'; name: 'CustomerDelete'; ofType: null; } }; 'customerUpdate': { name: 'customerUpdate'; type: { kind: 'OBJECT'; name: 'CustomerUpdate'; ofType: null; } }; 'deleteMetadata': { name: 'deleteMetadata'; type: { kind: 'OBJECT'; name: 'DeleteMetadata'; ofType: null; } }; 'deletePrivateMetadata': { name: 'deletePrivateMetadata'; type: { kind: 'OBJECT'; name: 'DeletePrivateMetadata'; ofType: null; } }; 'deleteWarehouse': { name: 'deleteWarehouse'; type: { kind: 'OBJECT'; name: 'WarehouseDelete'; ofType: null; } }; 'digitalContentCreate': { name: 'digitalContentCreate'; type: { kind: 'OBJECT'; name: 'DigitalContentCreate'; ofType: null; } }; 'digitalContentDelete': { name: 'digitalContentDelete'; type: { kind: 'OBJECT'; name: 'DigitalContentDelete'; ofType: null; } }; 'digitalContentUpdate': { name: 'digitalContentUpdate'; type: { kind: 'OBJECT'; name: 'DigitalContentUpdate'; ofType: null; } }; 'digitalContentUrlCreate': { name: 'digitalContentUrlCreate'; type: { kind: 'OBJECT'; name: 'DigitalContentUrlCreate'; ofType: null; } }; 'draftOrderBulkDelete': { name: 'draftOrderBulkDelete'; type: { kind: 'OBJECT'; name: 'DraftOrderBulkDelete'; ofType: null; } }; 'draftOrderComplete': { name: 'draftOrderComplete'; type: { kind: 'OBJECT'; name: 'DraftOrderComplete'; ofType: null; } }; 'draftOrderCreate': { name: 'draftOrderCreate'; type: { kind: 'OBJECT'; name: 'DraftOrderCreate'; ofType: null; } }; 'draftOrderDelete': { name: 'draftOrderDelete'; type: { kind: 'OBJECT'; name: 'DraftOrderDelete'; ofType: null; } }; 'draftOrderLinesBulkDelete': { name: 'draftOrderLinesBulkDelete'; type: { kind: 'OBJECT'; name: 'DraftOrderLinesBulkDelete'; ofType: null; } }; 'draftOrderUpdate': { name: 'draftOrderUpdate'; type: { kind: 'OBJECT'; name: 'DraftOrderUpdate'; ofType: null; } }; 'eventDeliveryRetry': { name: 'eventDeliveryRetry'; type: { kind: 'OBJECT'; name: 'EventDeliveryRetry'; ofType: null; } }; 'exportGiftCards': { name: 'exportGiftCards'; type: { kind: 'OBJECT'; name: 'ExportGiftCards'; ofType: null; } }; 'exportProducts': { name: 'exportProducts'; type: { kind: 'OBJECT'; name: 'ExportProducts'; ofType: null; } }; 'exportVoucherCodes': { name: 'exportVoucherCodes'; type: { kind: 'OBJECT'; name: 'ExportVoucherCodes'; ofType: null; } }; 'externalAuthenticationUrl': { name: 'externalAuthenticationUrl'; type: { kind: 'OBJECT'; name: 'ExternalAuthenticationUrl'; ofType: null; } }; 'externalLogout': { name: 'externalLogout'; type: { kind: 'OBJECT'; name: 'ExternalLogout'; ofType: null; } }; 'externalNotificationTrigger': { name: 'externalNotificationTrigger'; type: { kind: 'OBJECT'; name: 'ExternalNotificationTrigger'; ofType: null; } }; 'externalObtainAccessTokens': { name: 'externalObtainAccessTokens'; type: { kind: 'OBJECT'; name: 'ExternalObtainAccessTokens'; ofType: null; } }; 'externalRefresh': { name: 'externalRefresh'; type: { kind: 'OBJECT'; name: 'ExternalRefresh'; ofType: null; } }; 'externalVerify': { name: 'externalVerify'; type: { kind: 'OBJECT'; name: 'ExternalVerify'; ofType: null; } }; 'fileUpload': { name: 'fileUpload'; type: { kind: 'OBJECT'; name: 'FileUpload'; ofType: null; } }; 'giftCardActivate': { name: 'giftCardActivate'; type: { kind: 'OBJECT'; name: 'GiftCardActivate'; ofType: null; } }; 'giftCardAddNote': { name: 'giftCardAddNote'; type: { kind: 'OBJECT'; name: 'GiftCardAddNote'; ofType: null; } }; 'giftCardBulkActivate': { name: 'giftCardBulkActivate'; type: { kind: 'OBJECT'; name: 'GiftCardBulkActivate'; ofType: null; } }; 'giftCardBulkCreate': { name: 'giftCardBulkCreate'; type: { kind: 'OBJECT'; name: 'GiftCardBulkCreate'; ofType: null; } }; 'giftCardBulkDeactivate': { name: 'giftCardBulkDeactivate'; type: { kind: 'OBJECT'; name: 'GiftCardBulkDeactivate'; ofType: null; } }; 'giftCardBulkDelete': { name: 'giftCardBulkDelete'; type: { kind: 'OBJECT'; name: 'GiftCardBulkDelete'; ofType: null; } }; 'giftCardCreate': { name: 'giftCardCreate'; type: { kind: 'OBJECT'; name: 'GiftCardCreate'; ofType: null; } }; 'giftCardDeactivate': { name: 'giftCardDeactivate'; type: { kind: 'OBJECT'; name: 'GiftCardDeactivate'; ofType: null; } }; 'giftCardDelete': { name: 'giftCardDelete'; type: { kind: 'OBJECT'; name: 'GiftCardDelete'; ofType: null; } }; 'giftCardResend': { name: 'giftCardResend'; type: { kind: 'OBJECT'; name: 'GiftCardResend'; ofType: null; } }; 'giftCardSettingsUpdate': { name: 'giftCardSettingsUpdate'; type: { kind: 'OBJECT'; name: 'GiftCardSettingsUpdate'; ofType: null; } }; 'giftCardUpdate': { name: 'giftCardUpdate'; type: { kind: 'OBJECT'; name: 'GiftCardUpdate'; ofType: null; } }; 'invoiceCreate': { name: 'invoiceCreate'; type: { kind: 'OBJECT'; name: 'InvoiceCreate'; ofType: null; } }; 'invoiceDelete': { name: 'invoiceDelete'; type: { kind: 'OBJECT'; name: 'InvoiceDelete'; ofType: null; } }; 'invoiceRequest': { name: 'invoiceRequest'; type: { kind: 'OBJECT'; name: 'InvoiceRequest'; ofType: null; } }; 'invoiceRequestDelete': { name: 'invoiceRequestDelete'; type: { kind: 'OBJECT'; name: 'InvoiceRequestDelete'; ofType: null; } }; 'invoiceSendNotification': { name: 'invoiceSendNotification'; type: { kind: 'OBJECT'; name: 'InvoiceSendNotification'; ofType: null; } }; 'invoiceUpdate': { name: 'invoiceUpdate'; type: { kind: 'OBJECT'; name: 'InvoiceUpdate'; ofType: null; } }; 'menuBulkDelete': { name: 'menuBulkDelete'; type: { kind: 'OBJECT'; name: 'MenuBulkDelete'; ofType: null; } }; 'menuCreate': { name: 'menuCreate'; type: { kind: 'OBJECT'; name: 'MenuCreate'; ofType: null; } }; 'menuDelete': { name: 'menuDelete'; type: { kind: 'OBJECT'; name: 'MenuDelete'; ofType: null; } }; 'menuItemBulkDelete': { name: 'menuItemBulkDelete'; type: { kind: 'OBJECT'; name: 'MenuItemBulkDelete'; ofType: null; } }; 'menuItemCreate': { name: 'menuItemCreate'; type: { kind: 'OBJECT'; name: 'MenuItemCreate'; ofType: null; } }; 'menuItemDelete': { name: 'menuItemDelete'; type: { kind: 'OBJECT'; name: 'MenuItemDelete'; ofType: null; } }; 'menuItemMove': { name: 'menuItemMove'; type: { kind: 'OBJECT'; name: 'MenuItemMove'; ofType: null; } }; 'menuItemTranslate': { name: 'menuItemTranslate'; type: { kind: 'OBJECT'; name: 'MenuItemTranslate'; ofType: null; } }; 'menuItemUpdate': { name: 'menuItemUpdate'; type: { kind: 'OBJECT'; name: 'MenuItemUpdate'; ofType: null; } }; 'menuUpdate': { name: 'menuUpdate'; type: { kind: 'OBJECT'; name: 'MenuUpdate'; ofType: null; } }; 'orderAddNote': { name: 'orderAddNote'; type: { kind: 'OBJECT'; name: 'OrderAddNote'; ofType: null; } }; 'orderBulkCancel': { name: 'orderBulkCancel'; type: { kind: 'OBJECT'; name: 'OrderBulkCancel'; ofType: null; } }; 'orderBulkCreate': { name: 'orderBulkCreate'; type: { kind: 'OBJECT'; name: 'OrderBulkCreate'; ofType: null; } }; 'orderCancel': { name: 'orderCancel'; type: { kind: 'OBJECT'; name: 'OrderCancel'; ofType: null; } }; 'orderCapture': { name: 'orderCapture'; type: { kind: 'OBJECT'; name: 'OrderCapture'; ofType: null; } }; 'orderConfirm': { name: 'orderConfirm'; type: { kind: 'OBJECT'; name: 'OrderConfirm'; ofType: null; } }; 'orderCreateFromCheckout': { name: 'orderCreateFromCheckout'; type: { kind: 'OBJECT'; name: 'OrderCreateFromCheckout'; ofType: null; } }; 'orderDiscountAdd': { name: 'orderDiscountAdd'; type: { kind: 'OBJECT'; name: 'OrderDiscountAdd'; ofType: null; } }; 'orderDiscountDelete': { name: 'orderDiscountDelete'; type: { kind: 'OBJECT'; name: 'OrderDiscountDelete'; ofType: null; } }; 'orderDiscountUpdate': { name: 'orderDiscountUpdate'; type: { kind: 'OBJECT'; name: 'OrderDiscountUpdate'; ofType: null; } }; 'orderFulfill': { name: 'orderFulfill'; type: { kind: 'OBJECT'; name: 'OrderFulfill'; ofType: null; } }; 'orderFulfillmentApprove': { name: 'orderFulfillmentApprove'; type: { kind: 'OBJECT'; name: 'FulfillmentApprove'; ofType: null; } }; 'orderFulfillmentCancel': { name: 'orderFulfillmentCancel'; type: { kind: 'OBJECT'; name: 'FulfillmentCancel'; ofType: null; } }; 'orderFulfillmentRefundProducts': { name: 'orderFulfillmentRefundProducts'; type: { kind: 'OBJECT'; name: 'FulfillmentRefundProducts'; ofType: null; } }; 'orderFulfillmentReturnProducts': { name: 'orderFulfillmentReturnProducts'; type: { kind: 'OBJECT'; name: 'FulfillmentReturnProducts'; ofType: null; } }; 'orderFulfillmentUpdateTracking': { name: 'orderFulfillmentUpdateTracking'; type: { kind: 'OBJECT'; name: 'FulfillmentUpdateTracking'; ofType: null; } }; 'orderGrantRefundCreate': { name: 'orderGrantRefundCreate'; type: { kind: 'OBJECT'; name: 'OrderGrantRefundCreate'; ofType: null; } }; 'orderGrantRefundUpdate': { name: 'orderGrantRefundUpdate'; type: { kind: 'OBJECT'; name: 'OrderGrantRefundUpdate'; ofType: null; } }; 'orderLineDelete': { name: 'orderLineDelete'; type: { kind: 'OBJECT'; name: 'OrderLineDelete'; ofType: null; } }; 'orderLineDiscountRemove': { name: 'orderLineDiscountRemove'; type: { kind: 'OBJECT'; name: 'OrderLineDiscountRemove'; ofType: null; } }; 'orderLineDiscountUpdate': { name: 'orderLineDiscountUpdate'; type: { kind: 'OBJECT'; name: 'OrderLineDiscountUpdate'; ofType: null; } }; 'orderLineUpdate': { name: 'orderLineUpdate'; type: { kind: 'OBJECT'; name: 'OrderLineUpdate'; ofType: null; } }; 'orderLinesCreate': { name: 'orderLinesCreate'; type: { kind: 'OBJECT'; name: 'OrderLinesCreate'; ofType: null; } }; 'orderMarkAsPaid': { name: 'orderMarkAsPaid'; type: { kind: 'OBJECT'; name: 'OrderMarkAsPaid'; ofType: null; } }; 'orderNoteAdd': { name: 'orderNoteAdd'; type: { kind: 'OBJECT'; name: 'OrderNoteAdd'; ofType: null; } }; 'orderNoteUpdate': { name: 'orderNoteUpdate'; type: { kind: 'OBJECT'; name: 'OrderNoteUpdate'; ofType: null; } }; 'orderRefund': { name: 'orderRefund'; type: { kind: 'OBJECT'; name: 'OrderRefund'; ofType: null; } }; 'orderSettingsUpdate': { name: 'orderSettingsUpdate'; type: { kind: 'OBJECT'; name: 'OrderSettingsUpdate'; ofType: null; } }; 'orderUpdate': { name: 'orderUpdate'; type: { kind: 'OBJECT'; name: 'OrderUpdate'; ofType: null; } }; 'orderUpdateShipping': { name: 'orderUpdateShipping'; type: { kind: 'OBJECT'; name: 'OrderUpdateShipping'; ofType: null; } }; 'orderVoid': { name: 'orderVoid'; type: { kind: 'OBJECT'; name: 'OrderVoid'; ofType: null; } }; 'pageAttributeAssign': { name: 'pageAttributeAssign'; type: { kind: 'OBJECT'; name: 'PageAttributeAssign'; ofType: null; } }; 'pageAttributeUnassign': { name: 'pageAttributeUnassign'; type: { kind: 'OBJECT'; name: 'PageAttributeUnassign'; ofType: null; } }; 'pageBulkDelete': { name: 'pageBulkDelete'; type: { kind: 'OBJECT'; name: 'PageBulkDelete'; ofType: null; } }; 'pageBulkPublish': { name: 'pageBulkPublish'; type: { kind: 'OBJECT'; name: 'PageBulkPublish'; ofType: null; } }; 'pageCreate': { name: 'pageCreate'; type: { kind: 'OBJECT'; name: 'PageCreate'; ofType: null; } }; 'pageDelete': { name: 'pageDelete'; type: { kind: 'OBJECT'; name: 'PageDelete'; ofType: null; } }; 'pageReorderAttributeValues': { name: 'pageReorderAttributeValues'; type: { kind: 'OBJECT'; name: 'PageReorderAttributeValues'; ofType: null; } }; 'pageTranslate': { name: 'pageTranslate'; type: { kind: 'OBJECT'; name: 'PageTranslate'; ofType: null; } }; 'pageTypeBulkDelete': { name: 'pageTypeBulkDelete'; type: { kind: 'OBJECT'; name: 'PageTypeBulkDelete'; ofType: null; } }; 'pageTypeCreate': { name: 'pageTypeCreate'; type: { kind: 'OBJECT'; name: 'PageTypeCreate'; ofType: null; } }; 'pageTypeDelete': { name: 'pageTypeDelete'; type: { kind: 'OBJECT'; name: 'PageTypeDelete'; ofType: null; } }; 'pageTypeReorderAttributes': { name: 'pageTypeReorderAttributes'; type: { kind: 'OBJECT'; name: 'PageTypeReorderAttributes'; ofType: null; } }; 'pageTypeUpdate': { name: 'pageTypeUpdate'; type: { kind: 'OBJECT'; name: 'PageTypeUpdate'; ofType: null; } }; 'pageUpdate': { name: 'pageUpdate'; type: { kind: 'OBJECT'; name: 'PageUpdate'; ofType: null; } }; 'passwordChange': { name: 'passwordChange'; type: { kind: 'OBJECT'; name: 'PasswordChange'; ofType: null; } }; 'paymentCapture': { name: 'paymentCapture'; type: { kind: 'OBJECT'; name: 'PaymentCapture'; ofType: null; } }; 'paymentCheckBalance': { name: 'paymentCheckBalance'; type: { kind: 'OBJECT'; name: 'PaymentCheckBalance'; ofType: null; } }; 'paymentGatewayInitialize': { name: 'paymentGatewayInitialize'; type: { kind: 'OBJECT'; name: 'PaymentGatewayInitialize'; ofType: null; } }; 'paymentGatewayInitializeTokenization': { name: 'paymentGatewayInitializeTokenization'; type: { kind: 'OBJECT'; name: 'PaymentGatewayInitializeTokenization'; ofType: null; } }; 'paymentInitialize': { name: 'paymentInitialize'; type: { kind: 'OBJECT'; name: 'PaymentInitialize'; ofType: null; } }; 'paymentMethodInitializeTokenization': { name: 'paymentMethodInitializeTokenization'; type: { kind: 'OBJECT'; name: 'PaymentMethodInitializeTokenization'; ofType: null; } }; 'paymentMethodProcessTokenization': { name: 'paymentMethodProcessTokenization'; type: { kind: 'OBJECT'; name: 'PaymentMethodProcessTokenization'; ofType: null; } }; 'paymentRefund': { name: 'paymentRefund'; type: { kind: 'OBJECT'; name: 'PaymentRefund'; ofType: null; } }; 'paymentVoid': { name: 'paymentVoid'; type: { kind: 'OBJECT'; name: 'PaymentVoid'; ofType: null; } }; 'permissionGroupCreate': { name: 'permissionGroupCreate'; type: { kind: 'OBJECT'; name: 'PermissionGroupCreate'; ofType: null; } }; 'permissionGroupDelete': { name: 'permissionGroupDelete'; type: { kind: 'OBJECT'; name: 'PermissionGroupDelete'; ofType: null; } }; 'permissionGroupUpdate': { name: 'permissionGroupUpdate'; type: { kind: 'OBJECT'; name: 'PermissionGroupUpdate'; ofType: null; } }; 'pluginUpdate': { name: 'pluginUpdate'; type: { kind: 'OBJECT'; name: 'PluginUpdate'; ofType: null; } }; 'productAttributeAssign': { name: 'productAttributeAssign'; type: { kind: 'OBJECT'; name: 'ProductAttributeAssign'; ofType: null; } }; 'productAttributeAssignmentUpdate': { name: 'productAttributeAssignmentUpdate'; type: { kind: 'OBJECT'; name: 'ProductAttributeAssignmentUpdate'; ofType: null; } }; 'productAttributeUnassign': { name: 'productAttributeUnassign'; type: { kind: 'OBJECT'; name: 'ProductAttributeUnassign'; ofType: null; } }; 'productBulkCreate': { name: 'productBulkCreate'; type: { kind: 'OBJECT'; name: 'ProductBulkCreate'; ofType: null; } }; 'productBulkDelete': { name: 'productBulkDelete'; type: { kind: 'OBJECT'; name: 'ProductBulkDelete'; ofType: null; } }; 'productBulkTranslate': { name: 'productBulkTranslate'; type: { kind: 'OBJECT'; name: 'ProductBulkTranslate'; ofType: null; } }; 'productChannelListingUpdate': { name: 'productChannelListingUpdate'; type: { kind: 'OBJECT'; name: 'ProductChannelListingUpdate'; ofType: null; } }; 'productCreate': { name: 'productCreate'; type: { kind: 'OBJECT'; name: 'ProductCreate'; ofType: null; } }; 'productDelete': { name: 'productDelete'; type: { kind: 'OBJECT'; name: 'ProductDelete'; ofType: null; } }; 'productMediaBulkDelete': { name: 'productMediaBulkDelete'; type: { kind: 'OBJECT'; name: 'ProductMediaBulkDelete'; ofType: null; } }; 'productMediaCreate': { name: 'productMediaCreate'; type: { kind: 'OBJECT'; name: 'ProductMediaCreate'; ofType: null; } }; 'productMediaDelete': { name: 'productMediaDelete'; type: { kind: 'OBJECT'; name: 'ProductMediaDelete'; ofType: null; } }; 'productMediaReorder': { name: 'productMediaReorder'; type: { kind: 'OBJECT'; name: 'ProductMediaReorder'; ofType: null; } }; 'productMediaUpdate': { name: 'productMediaUpdate'; type: { kind: 'OBJECT'; name: 'ProductMediaUpdate'; ofType: null; } }; 'productReorderAttributeValues': { name: 'productReorderAttributeValues'; type: { kind: 'OBJECT'; name: 'ProductReorderAttributeValues'; ofType: null; } }; 'productTranslate': { name: 'productTranslate'; type: { kind: 'OBJECT'; name: 'ProductTranslate'; ofType: null; } }; 'productTypeBulkDelete': { name: 'productTypeBulkDelete'; type: { kind: 'OBJECT'; name: 'ProductTypeBulkDelete'; ofType: null; } }; 'productTypeCreate': { name: 'productTypeCreate'; type: { kind: 'OBJECT'; name: 'ProductTypeCreate'; ofType: null; } }; 'productTypeDelete': { name: 'productTypeDelete'; type: { kind: 'OBJECT'; name: 'ProductTypeDelete'; ofType: null; } }; 'productTypeReorderAttributes': { name: 'productTypeReorderAttributes'; type: { kind: 'OBJECT'; name: 'ProductTypeReorderAttributes'; ofType: null; } }; 'productTypeUpdate': { name: 'productTypeUpdate'; type: { kind: 'OBJECT'; name: 'ProductTypeUpdate'; ofType: null; } }; 'productUpdate': { name: 'productUpdate'; type: { kind: 'OBJECT'; name: 'ProductUpdate'; ofType: null; } }; 'productVariantBulkCreate': { name: 'productVariantBulkCreate'; type: { kind: 'OBJECT'; name: 'ProductVariantBulkCreate'; ofType: null; } }; 'productVariantBulkDelete': { name: 'productVariantBulkDelete'; type: { kind: 'OBJECT'; name: 'ProductVariantBulkDelete'; ofType: null; } }; 'productVariantBulkTranslate': { name: 'productVariantBulkTranslate'; type: { kind: 'OBJECT'; name: 'ProductVariantBulkTranslate'; ofType: null; } }; 'productVariantBulkUpdate': { name: 'productVariantBulkUpdate'; type: { kind: 'OBJECT'; name: 'ProductVariantBulkUpdate'; ofType: null; } }; 'productVariantChannelListingUpdate': { name: 'productVariantChannelListingUpdate'; type: { kind: 'OBJECT'; name: 'ProductVariantChannelListingUpdate'; ofType: null; } }; 'productVariantCreate': { name: 'productVariantCreate'; type: { kind: 'OBJECT'; name: 'ProductVariantCreate'; ofType: null; } }; 'productVariantDelete': { name: 'productVariantDelete'; type: { kind: 'OBJECT'; name: 'ProductVariantDelete'; ofType: null; } }; 'productVariantPreorderDeactivate': { name: 'productVariantPreorderDeactivate'; type: { kind: 'OBJECT'; name: 'ProductVariantPreorderDeactivate'; ofType: null; } }; 'productVariantReorder': { name: 'productVariantReorder'; type: { kind: 'OBJECT'; name: 'ProductVariantReorder'; ofType: null; } }; 'productVariantReorderAttributeValues': { name: 'productVariantReorderAttributeValues'; type: { kind: 'OBJECT'; name: 'ProductVariantReorderAttributeValues'; ofType: null; } }; 'productVariantSetDefault': { name: 'productVariantSetDefault'; type: { kind: 'OBJECT'; name: 'ProductVariantSetDefault'; ofType: null; } }; 'productVariantStocksCreate': { name: 'productVariantStocksCreate'; type: { kind: 'OBJECT'; name: 'ProductVariantStocksCreate'; ofType: null; } }; 'productVariantStocksDelete': { name: 'productVariantStocksDelete'; type: { kind: 'OBJECT'; name: 'ProductVariantStocksDelete'; ofType: null; } }; 'productVariantStocksUpdate': { name: 'productVariantStocksUpdate'; type: { kind: 'OBJECT'; name: 'ProductVariantStocksUpdate'; ofType: null; } }; 'productVariantTranslate': { name: 'productVariantTranslate'; type: { kind: 'OBJECT'; name: 'ProductVariantTranslate'; ofType: null; } }; 'productVariantUpdate': { name: 'productVariantUpdate'; type: { kind: 'OBJECT'; name: 'ProductVariantUpdate'; ofType: null; } }; 'promotionBulkDelete': { name: 'promotionBulkDelete'; type: { kind: 'OBJECT'; name: 'PromotionBulkDelete'; ofType: null; } }; 'promotionCreate': { name: 'promotionCreate'; type: { kind: 'OBJECT'; name: 'PromotionCreate'; ofType: null; } }; 'promotionDelete': { name: 'promotionDelete'; type: { kind: 'OBJECT'; name: 'PromotionDelete'; ofType: null; } }; 'promotionRuleCreate': { name: 'promotionRuleCreate'; type: { kind: 'OBJECT'; name: 'PromotionRuleCreate'; ofType: null; } }; 'promotionRuleDelete': { name: 'promotionRuleDelete'; type: { kind: 'OBJECT'; name: 'PromotionRuleDelete'; ofType: null; } }; 'promotionRuleTranslate': { name: 'promotionRuleTranslate'; type: { kind: 'OBJECT'; name: 'PromotionRuleTranslate'; ofType: null; } }; 'promotionRuleUpdate': { name: 'promotionRuleUpdate'; type: { kind: 'OBJECT'; name: 'PromotionRuleUpdate'; ofType: null; } }; 'promotionTranslate': { name: 'promotionTranslate'; type: { kind: 'OBJECT'; name: 'PromotionTranslate'; ofType: null; } }; 'promotionUpdate': { name: 'promotionUpdate'; type: { kind: 'OBJECT'; name: 'PromotionUpdate'; ofType: null; } }; 'requestEmailChange': { name: 'requestEmailChange'; type: { kind: 'OBJECT'; name: 'RequestEmailChange'; ofType: null; } }; 'requestPasswordReset': { name: 'requestPasswordReset'; type: { kind: 'OBJECT'; name: 'RequestPasswordReset'; ofType: null; } }; 'saleBulkDelete': { name: 'saleBulkDelete'; type: { kind: 'OBJECT'; name: 'SaleBulkDelete'; ofType: null; } }; 'saleCataloguesAdd': { name: 'saleCataloguesAdd'; type: { kind: 'OBJECT'; name: 'SaleAddCatalogues'; ofType: null; } }; 'saleCataloguesRemove': { name: 'saleCataloguesRemove'; type: { kind: 'OBJECT'; name: 'SaleRemoveCatalogues'; ofType: null; } }; 'saleChannelListingUpdate': { name: 'saleChannelListingUpdate'; type: { kind: 'OBJECT'; name: 'SaleChannelListingUpdate'; ofType: null; } }; 'saleCreate': { name: 'saleCreate'; type: { kind: 'OBJECT'; name: 'SaleCreate'; ofType: null; } }; 'saleDelete': { name: 'saleDelete'; type: { kind: 'OBJECT'; name: 'SaleDelete'; ofType: null; } }; 'saleTranslate': { name: 'saleTranslate'; type: { kind: 'OBJECT'; name: 'SaleTranslate'; ofType: null; } }; 'saleUpdate': { name: 'saleUpdate'; type: { kind: 'OBJECT'; name: 'SaleUpdate'; ofType: null; } }; 'sendConfirmationEmail': { name: 'sendConfirmationEmail'; type: { kind: 'OBJECT'; name: 'SendConfirmationEmail'; ofType: null; } }; 'setPassword': { name: 'setPassword'; type: { kind: 'OBJECT'; name: 'SetPassword'; ofType: null; } }; 'shippingMethodChannelListingUpdate': { name: 'shippingMethodChannelListingUpdate'; type: { kind: 'OBJECT'; name: 'ShippingMethodChannelListingUpdate'; ofType: null; } }; 'shippingPriceBulkDelete': { name: 'shippingPriceBulkDelete'; type: { kind: 'OBJECT'; name: 'ShippingPriceBulkDelete'; ofType: null; } }; 'shippingPriceCreate': { name: 'shippingPriceCreate'; type: { kind: 'OBJECT'; name: 'ShippingPriceCreate'; ofType: null; } }; 'shippingPriceDelete': { name: 'shippingPriceDelete'; type: { kind: 'OBJECT'; name: 'ShippingPriceDelete'; ofType: null; } }; 'shippingPriceExcludeProducts': { name: 'shippingPriceExcludeProducts'; type: { kind: 'OBJECT'; name: 'ShippingPriceExcludeProducts'; ofType: null; } }; 'shippingPriceRemoveProductFromExclude': { name: 'shippingPriceRemoveProductFromExclude'; type: { kind: 'OBJECT'; name: 'ShippingPriceRemoveProductFromExclude'; ofType: null; } }; 'shippingPriceTranslate': { name: 'shippingPriceTranslate'; type: { kind: 'OBJECT'; name: 'ShippingPriceTranslate'; ofType: null; } }; 'shippingPriceUpdate': { name: 'shippingPriceUpdate'; type: { kind: 'OBJECT'; name: 'ShippingPriceUpdate'; ofType: null; } }; 'shippingZoneBulkDelete': { name: 'shippingZoneBulkDelete'; type: { kind: 'OBJECT'; name: 'ShippingZoneBulkDelete'; ofType: null; } }; 'shippingZoneCreate': { name: 'shippingZoneCreate'; type: { kind: 'OBJECT'; name: 'ShippingZoneCreate'; ofType: null; } }; 'shippingZoneDelete': { name: 'shippingZoneDelete'; type: { kind: 'OBJECT'; name: 'ShippingZoneDelete'; ofType: null; } }; 'shippingZoneUpdate': { name: 'shippingZoneUpdate'; type: { kind: 'OBJECT'; name: 'ShippingZoneUpdate'; ofType: null; } }; 'shopAddressUpdate': { name: 'shopAddressUpdate'; type: { kind: 'OBJECT'; name: 'ShopAddressUpdate'; ofType: null; } }; 'shopDomainUpdate': { name: 'shopDomainUpdate'; type: { kind: 'OBJECT'; name: 'ShopDomainUpdate'; ofType: null; } }; 'shopFetchTaxRates': { name: 'shopFetchTaxRates'; type: { kind: 'OBJECT'; name: 'ShopFetchTaxRates'; ofType: null; } }; 'shopSettingsTranslate': { name: 'shopSettingsTranslate'; type: { kind: 'OBJECT'; name: 'ShopSettingsTranslate'; ofType: null; } }; 'shopSettingsUpdate': { name: 'shopSettingsUpdate'; type: { kind: 'OBJECT'; name: 'ShopSettingsUpdate'; ofType: null; } }; 'staffBulkDelete': { name: 'staffBulkDelete'; type: { kind: 'OBJECT'; name: 'StaffBulkDelete'; ofType: null; } }; 'staffCreate': { name: 'staffCreate'; type: { kind: 'OBJECT'; name: 'StaffCreate'; ofType: null; } }; 'staffDelete': { name: 'staffDelete'; type: { kind: 'OBJECT'; name: 'StaffDelete'; ofType: null; } }; 'staffNotificationRecipientCreate': { name: 'staffNotificationRecipientCreate'; type: { kind: 'OBJECT'; name: 'StaffNotificationRecipientCreate'; ofType: null; } }; 'staffNotificationRecipientDelete': { name: 'staffNotificationRecipientDelete'; type: { kind: 'OBJECT'; name: 'StaffNotificationRecipientDelete'; ofType: null; } }; 'staffNotificationRecipientUpdate': { name: 'staffNotificationRecipientUpdate'; type: { kind: 'OBJECT'; name: 'StaffNotificationRecipientUpdate'; ofType: null; } }; 'staffUpdate': { name: 'staffUpdate'; type: { kind: 'OBJECT'; name: 'StaffUpdate'; ofType: null; } }; 'stockBulkUpdate': { name: 'stockBulkUpdate'; type: { kind: 'OBJECT'; name: 'StockBulkUpdate'; ofType: null; } }; 'storedPaymentMethodRequestDelete': { name: 'storedPaymentMethodRequestDelete'; type: { kind: 'OBJECT'; name: 'StoredPaymentMethodRequestDelete'; ofType: null; } }; 'taxClassCreate': { name: 'taxClassCreate'; type: { kind: 'OBJECT'; name: 'TaxClassCreate'; ofType: null; } }; 'taxClassDelete': { name: 'taxClassDelete'; type: { kind: 'OBJECT'; name: 'TaxClassDelete'; ofType: null; } }; 'taxClassUpdate': { name: 'taxClassUpdate'; type: { kind: 'OBJECT'; name: 'TaxClassUpdate'; ofType: null; } }; 'taxConfigurationUpdate': { name: 'taxConfigurationUpdate'; type: { kind: 'OBJECT'; name: 'TaxConfigurationUpdate'; ofType: null; } }; 'taxCountryConfigurationDelete': { name: 'taxCountryConfigurationDelete'; type: { kind: 'OBJECT'; name: 'TaxCountryConfigurationDelete'; ofType: null; } }; 'taxCountryConfigurationUpdate': { name: 'taxCountryConfigurationUpdate'; type: { kind: 'OBJECT'; name: 'TaxCountryConfigurationUpdate'; ofType: null; } }; 'taxExemptionManage': { name: 'taxExemptionManage'; type: { kind: 'OBJECT'; name: 'TaxExemptionManage'; ofType: null; } }; 'tokenCreate': { name: 'tokenCreate'; type: { kind: 'OBJECT'; name: 'CreateToken'; ofType: null; } }; 'tokenRefresh': { name: 'tokenRefresh'; type: { kind: 'OBJECT'; name: 'RefreshToken'; ofType: null; } }; 'tokenVerify': { name: 'tokenVerify'; type: { kind: 'OBJECT'; name: 'VerifyToken'; ofType: null; } }; 'tokensDeactivateAll': { name: 'tokensDeactivateAll'; type: { kind: 'OBJECT'; name: 'DeactivateAllUserTokens'; ofType: null; } }; 'transactionCreate': { name: 'transactionCreate'; type: { kind: 'OBJECT'; name: 'TransactionCreate'; ofType: null; } }; 'transactionEventReport': { name: 'transactionEventReport'; type: { kind: 'OBJECT'; name: 'TransactionEventReport'; ofType: null; } }; 'transactionInitialize': { name: 'transactionInitialize'; type: { kind: 'OBJECT'; name: 'TransactionInitialize'; ofType: null; } }; 'transactionProcess': { name: 'transactionProcess'; type: { kind: 'OBJECT'; name: 'TransactionProcess'; ofType: null; } }; 'transactionRequestAction': { name: 'transactionRequestAction'; type: { kind: 'OBJECT'; name: 'TransactionRequestAction'; ofType: null; } }; 'transactionRequestRefundForGrantedRefund': { name: 'transactionRequestRefundForGrantedRefund'; type: { kind: 'OBJECT'; name: 'TransactionRequestRefundForGrantedRefund'; ofType: null; } }; 'transactionUpdate': { name: 'transactionUpdate'; type: { kind: 'OBJECT'; name: 'TransactionUpdate'; ofType: null; } }; 'unassignWarehouseShippingZone': { name: 'unassignWarehouseShippingZone'; type: { kind: 'OBJECT'; name: 'WarehouseShippingZoneUnassign'; ofType: null; } }; 'updateMetadata': { name: 'updateMetadata'; type: { kind: 'OBJECT'; name: 'UpdateMetadata'; ofType: null; } }; 'updatePrivateMetadata': { name: 'updatePrivateMetadata'; type: { kind: 'OBJECT'; name: 'UpdatePrivateMetadata'; ofType: null; } }; 'updateWarehouse': { name: 'updateWarehouse'; type: { kind: 'OBJECT'; name: 'WarehouseUpdate'; ofType: null; } }; 'userAvatarDelete': { name: 'userAvatarDelete'; type: { kind: 'OBJECT'; name: 'UserAvatarDelete'; ofType: null; } }; 'userAvatarUpdate': { name: 'userAvatarUpdate'; type: { kind: 'OBJECT'; name: 'UserAvatarUpdate'; ofType: null; } }; 'userBulkSetActive': { name: 'userBulkSetActive'; type: { kind: 'OBJECT'; name: 'UserBulkSetActive'; ofType: null; } }; 'variantMediaAssign': { name: 'variantMediaAssign'; type: { kind: 'OBJECT'; name: 'VariantMediaAssign'; ofType: null; } }; 'variantMediaUnassign': { name: 'variantMediaUnassign'; type: { kind: 'OBJECT'; name: 'VariantMediaUnassign'; ofType: null; } }; 'voucherBulkDelete': { name: 'voucherBulkDelete'; type: { kind: 'OBJECT'; name: 'VoucherBulkDelete'; ofType: null; } }; 'voucherCataloguesAdd': { name: 'voucherCataloguesAdd'; type: { kind: 'OBJECT'; name: 'VoucherAddCatalogues'; ofType: null; } }; 'voucherCataloguesRemove': { name: 'voucherCataloguesRemove'; type: { kind: 'OBJECT'; name: 'VoucherRemoveCatalogues'; ofType: null; } }; 'voucherChannelListingUpdate': { name: 'voucherChannelListingUpdate'; type: { kind: 'OBJECT'; name: 'VoucherChannelListingUpdate'; ofType: null; } }; 'voucherCodeBulkDelete': { name: 'voucherCodeBulkDelete'; type: { kind: 'OBJECT'; name: 'VoucherCodeBulkDelete'; ofType: null; } }; 'voucherCreate': { name: 'voucherCreate'; type: { kind: 'OBJECT'; name: 'VoucherCreate'; ofType: null; } }; 'voucherDelete': { name: 'voucherDelete'; type: { kind: 'OBJECT'; name: 'VoucherDelete'; ofType: null; } }; 'voucherTranslate': { name: 'voucherTranslate'; type: { kind: 'OBJECT'; name: 'VoucherTranslate'; ofType: null; } }; 'voucherUpdate': { name: 'voucherUpdate'; type: { kind: 'OBJECT'; name: 'VoucherUpdate'; ofType: null; } }; 'webhookCreate': { name: 'webhookCreate'; type: { kind: 'OBJECT'; name: 'WebhookCreate'; ofType: null; } }; 'webhookDelete': { name: 'webhookDelete'; type: { kind: 'OBJECT'; name: 'WebhookDelete'; ofType: null; } }; 'webhookDryRun': { name: 'webhookDryRun'; type: { kind: 'OBJECT'; name: 'WebhookDryRun'; ofType: null; } }; 'webhookTrigger': { name: 'webhookTrigger'; type: { kind: 'OBJECT'; name: 'WebhookTrigger'; ofType: null; } }; 'webhookUpdate': { name: 'webhookUpdate'; type: { kind: 'OBJECT'; name: 'WebhookUpdate'; ofType: null; } }; }; };
    'NameTranslationInput': { kind: 'INPUT_OBJECT'; name: 'NameTranslationInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'NavigationType': { name: 'NavigationType'; enumValues: 'MAIN' | 'SECONDARY'; };
    'Node': { kind: 'INTERFACE'; name: 'Node'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; possibleTypes: 'Address' | 'Allocation' | 'App' | 'AppExtension' | 'AppInstallation' | 'AppToken' | 'Attribute' | 'AttributeTranslatableContent' | 'AttributeTranslation' | 'AttributeValue' | 'AttributeValueTranslatableContent' | 'AttributeValueTranslation' | 'Category' | 'CategoryTranslatableContent' | 'CategoryTranslation' | 'Channel' | 'Checkout' | 'CheckoutLine' | 'Collection' | 'CollectionChannelListing' | 'CollectionTranslatableContent' | 'CollectionTranslation' | 'CustomerEvent' | 'DigitalContent' | 'DigitalContentUrl' | 'EventDelivery' | 'EventDeliveryAttempt' | 'ExportEvent' | 'ExportFile' | 'Fulfillment' | 'FulfillmentLine' | 'GiftCard' | 'GiftCardEvent' | 'GiftCardTag' | 'Group' | 'Invoice' | 'Menu' | 'MenuItem' | 'MenuItemTranslatableContent' | 'MenuItemTranslation' | 'Order' | 'OrderDiscount' | 'OrderEvent' | 'OrderLine' | 'Page' | 'PageTranslatableContent' | 'PageTranslation' | 'PageType' | 'Payment' | 'Product' | 'ProductChannelListing' | 'ProductMedia' | 'ProductTranslatableContent' | 'ProductTranslation' | 'ProductType' | 'ProductVariant' | 'ProductVariantChannelListing' | 'ProductVariantTranslatableContent' | 'ProductVariantTranslation' | 'Promotion' | 'PromotionCreatedEvent' | 'PromotionEndedEvent' | 'PromotionRule' | 'PromotionRuleCreatedEvent' | 'PromotionRuleDeletedEvent' | 'PromotionRuleTranslatableContent' | 'PromotionRuleTranslation' | 'PromotionRuleUpdatedEvent' | 'PromotionStartedEvent' | 'PromotionTranslatableContent' | 'PromotionTranslation' | 'PromotionUpdatedEvent' | 'Sale' | 'SaleChannelListing' | 'SaleTranslatableContent' | 'SaleTranslation' | 'ShippingMethod' | 'ShippingMethodChannelListing' | 'ShippingMethodPostalCodeRule' | 'ShippingMethodTranslatableContent' | 'ShippingMethodTranslation' | 'ShippingMethodType' | 'ShippingZone' | 'ShopTranslation' | 'StaffNotificationRecipient' | 'Stock' | 'TaxClass' | 'TaxConfiguration' | 'Transaction' | 'TransactionEvent' | 'TransactionItem' | 'User' | 'Voucher' | 'VoucherChannelListing' | 'VoucherTranslatableContent' | 'VoucherTranslation' | 'Warehouse' | 'Webhook'; };
    'ObjectWithMetadata': { kind: 'INTERFACE'; name: 'ObjectWithMetadata'; fields: { 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; }; possibleTypes: 'Address' | 'App' | 'Attribute' | 'Category' | 'Channel' | 'Checkout' | 'CheckoutLine' | 'Collection' | 'DigitalContent' | 'Fulfillment' | 'GiftCard' | 'Invoice' | 'Menu' | 'MenuItem' | 'Order' | 'OrderLine' | 'Page' | 'PageType' | 'Payment' | 'Product' | 'ProductMedia' | 'ProductType' | 'ProductVariant' | 'Promotion' | 'Sale' | 'ShippingMethod' | 'ShippingMethodType' | 'ShippingZone' | 'Shop' | 'TaxClass' | 'TaxConfiguration' | 'TransactionItem' | 'User' | 'Voucher' | 'Warehouse'; };
    'Order': { kind: 'OBJECT'; name: 'Order'; fields: { 'actions': { name: 'actions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderAction'; ofType: null; }; }; }; } }; 'authorizeStatus': { name: 'authorizeStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderAuthorizeStatusEnum'; ofType: null; }; } }; 'availableCollectionPoints': { name: 'availableCollectionPoints'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; }; }; }; } }; 'availableShippingMethods': { name: 'availableShippingMethods'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingMethod'; ofType: null; }; }; } }; 'billingAddress': { name: 'billingAddress'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'canFinalize': { name: 'canFinalize'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'chargeStatus': { name: 'chargeStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderChargeStatusEnum'; ofType: null; }; } }; 'checkoutId': { name: 'checkoutId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'collectionPointName': { name: 'collectionPointName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'customerNote': { name: 'customerNote'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'deliveryMethod': { name: 'deliveryMethod'; type: { kind: 'UNION'; name: 'DeliveryMethod'; ofType: null; } }; 'discount': { name: 'discount'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'discountName': { name: 'discountName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discounts': { name: 'discounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderDiscount'; ofType: null; }; }; }; } }; 'displayGrossPrices': { name: 'displayGrossPrices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderEvent'; ofType: null; }; }; }; } }; 'externalReference': { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'fulfillments': { name: 'fulfillments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; }; }; }; } }; 'giftCards': { name: 'giftCards'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; }; }; }; } }; 'grantedRefunds': { name: 'grantedRefunds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderGrantedRefund'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'invoices': { name: 'invoices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Invoice'; ofType: null; }; }; }; } }; 'isPaid': { name: 'isPaid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isShippingRequired': { name: 'isShippingRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'languageCode': { name: 'languageCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'languageCodeEnum': { name: 'languageCodeEnum'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LanguageCodeEnum'; ofType: null; }; } }; 'lines': { name: 'lines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderLine'; ofType: null; }; }; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'number': { name: 'number'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'origin': { name: 'origin'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderOriginEnum'; ofType: null; }; } }; 'original': { name: 'original'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'paymentStatus': { name: 'paymentStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaymentChargeStatusEnum'; ofType: null; }; } }; 'paymentStatusDisplay': { name: 'paymentStatusDisplay'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'payments': { name: 'payments'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Payment'; ofType: null; }; }; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'redirectUrl': { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shippingAddress': { name: 'shippingAddress'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'shippingMethod': { name: 'shippingMethod'; type: { kind: 'OBJECT'; name: 'ShippingMethod'; ofType: null; } }; 'shippingMethodName': { name: 'shippingMethodName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shippingMethods': { name: 'shippingMethods'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingMethod'; ofType: null; }; }; }; } }; 'shippingPrice': { name: 'shippingPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; }; } }; 'shippingTaxClass': { name: 'shippingTaxClass'; type: { kind: 'OBJECT'; name: 'TaxClass'; ofType: null; } }; 'shippingTaxClassMetadata': { name: 'shippingTaxClassMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'shippingTaxClassName': { name: 'shippingTaxClassName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shippingTaxClassPrivateMetadata': { name: 'shippingTaxClassPrivateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'shippingTaxRate': { name: 'shippingTaxRate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderStatus'; ofType: null; }; } }; 'statusDisplay': { name: 'statusDisplay'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'subtotal': { name: 'subtotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; }; } }; 'taxExemption': { name: 'taxExemption'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'total': { name: 'total'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; }; } }; 'totalAuthorizePending': { name: 'totalAuthorizePending'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'totalAuthorized': { name: 'totalAuthorized'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'totalBalance': { name: 'totalBalance'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'totalCancelPending': { name: 'totalCancelPending'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'totalCanceled': { name: 'totalCanceled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'totalCaptured': { name: 'totalCaptured'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'totalChargePending': { name: 'totalChargePending'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'totalCharged': { name: 'totalCharged'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'totalGrantedRefund': { name: 'totalGrantedRefund'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'totalRefundPending': { name: 'totalRefundPending'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'totalRefunded': { name: 'totalRefunded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'totalRemainingGrant': { name: 'totalRemainingGrant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'trackingClientId': { name: 'trackingClientId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'transactions': { name: 'transactions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; }; }; }; } }; 'translatedDiscountName': { name: 'translatedDiscountName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'undiscountedShippingPrice': { name: 'undiscountedShippingPrice'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'undiscountedTotal': { name: 'undiscountedTotal'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'userEmail': { name: 'userEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; 'voucherCode': { name: 'voucherCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'weight': { name: 'weight'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Weight'; ofType: null; }; } }; }; };
    'OrderAction': { name: 'OrderAction'; enumValues: 'CAPTURE' | 'MARK_AS_PAID' | 'REFUND' | 'VOID'; };
    'OrderAddNote': { kind: 'OBJECT'; name: 'OrderAddNote'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'event': { name: 'event'; type: { kind: 'OBJECT'; name: 'OrderEvent'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'OrderAddNoteInput': { kind: 'INPUT_OBJECT'; name: 'OrderAddNoteInput'; isOneOf: false; inputFields: [{ name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'OrderAuthorizeStatusEnum': { name: 'OrderAuthorizeStatusEnum'; enumValues: 'NONE' | 'PARTIAL' | 'FULL'; };
    'OrderBulkCancel': { kind: 'OBJECT'; name: 'OrderBulkCancel'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'OrderBulkCreate': { kind: 'OBJECT'; name: 'OrderBulkCreate'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderBulkCreateError'; ofType: null; }; }; }; } }; 'results': { name: 'results'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderBulkCreateResult'; ofType: null; }; }; }; } }; }; };
    'OrderBulkCreateDeliveryMethodInput': { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateDeliveryMethodInput'; isOneOf: false; inputFields: [{ name: 'warehouseId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'warehouseName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'shippingMethodId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'shippingMethodName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'shippingPrice'; type: { kind: 'INPUT_OBJECT'; name: 'TaxedMoneyInput'; ofType: null; }; defaultValue: null }, { name: 'shippingTaxRate'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'shippingTaxClassId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'shippingTaxClassName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'shippingTaxClassMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'shippingTaxClassPrivateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'OrderBulkCreateError': { kind: 'OBJECT'; name: 'OrderBulkCreateError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'OrderBulkCreateErrorCode'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderBulkCreateErrorCode': { name: 'OrderBulkCreateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'REQUIRED' | 'INVALID' | 'NOT_FOUND' | 'UNIQUE' | 'BULK_LIMIT' | 'TOO_MANY_IDENTIFIERS' | 'FUTURE_DATE' | 'INVALID_QUANTITY' | 'PRICE_ERROR' | 'NOTE_LENGTH' | 'INSUFFICIENT_STOCK' | 'NON_EXISTING_STOCK' | 'NO_RELATED_ORDER_LINE' | 'NEGATIVE_INDEX' | 'ORDER_LINE_FULFILLMENT_LINE_MISMATCH' | 'METADATA_KEY_REQUIRED' | 'INCORRECT_CURRENCY'; };
    'OrderBulkCreateFulfillmentInput': { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateFulfillmentInput'; isOneOf: false; inputFields: [{ name: 'trackingCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateFulfillmentLineInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'OrderBulkCreateFulfillmentLineInput': { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateFulfillmentLineInput'; isOneOf: false; inputFields: [{ name: 'variantId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'variantSku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'variantExternalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'warehouse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'orderLineIndex'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'OrderBulkCreateInput': { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateInput'; isOneOf: false; inputFields: [{ name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }, { name: 'status'; type: { kind: 'ENUM'; name: 'OrderStatus'; ofType: null; }; defaultValue: null }, { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateUserInput'; ofType: null; }; }; defaultValue: null }, { name: 'billingAddress'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; }; defaultValue: null }, { name: 'shippingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'customerNote'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'notes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateNoteInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'languageCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LanguageCodeEnum'; ofType: null; }; }; defaultValue: null }, { name: 'displayGrossPrices'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'WeightScalar'; ofType: null; }; defaultValue: null }, { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateOrderLineInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'deliveryMethod'; type: { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateDeliveryMethodInput'; ofType: null; }; defaultValue: null }, { name: 'giftCards'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'voucherCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'discounts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderDiscountCommonInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'fulfillments'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateFulfillmentInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'transactions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TransactionCreateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'invoices'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateInvoiceInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'OrderBulkCreateInvoiceInput': { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateInvoiceInput'; isOneOf: false; inputFields: [{ name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }, { name: 'number'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'OrderBulkCreateNoteInput': { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateNoteInput'; isOneOf: false; inputFields: [{ name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'date'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'userId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'userEmail'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'userExternalReference'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'appId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'OrderBulkCreateOrderLineInput': { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateOrderLineInput'; isOneOf: false; inputFields: [{ name: 'variantId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'variantSku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'variantExternalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'variantName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'productName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'translatedVariantName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'translatedProductName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; }; defaultValue: null }, { name: 'isShippingRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'isGiftCard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'totalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TaxedMoneyInput'; ofType: null; }; }; defaultValue: null }, { name: 'undiscountedTotalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TaxedMoneyInput'; ofType: null; }; }; defaultValue: null }, { name: 'warehouse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'taxRate'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'taxClassId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'taxClassName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'taxClassMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'taxClassPrivateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'OrderBulkCreateResult': { kind: 'OBJECT'; name: 'OrderBulkCreateResult'; fields: { 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderBulkCreateError'; ofType: null; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; }; };
    'OrderBulkCreateUserInput': { kind: 'INPUT_OBJECT'; name: 'OrderBulkCreateUserInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OrderBulkCreated': { kind: 'OBJECT'; name: 'OrderBulkCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'orders': { name: 'orders'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Order'; ofType: null; }; }; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderCancel': { kind: 'OBJECT'; name: 'OrderCancel'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'OrderCancelled': { kind: 'OBJECT'; name: 'OrderCancelled'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderCapture': { kind: 'OBJECT'; name: 'OrderCapture'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'OrderChargeStatusEnum': { name: 'OrderChargeStatusEnum'; enumValues: 'NONE' | 'PARTIAL' | 'FULL' | 'OVERCHARGED'; };
    'OrderConfirm': { kind: 'OBJECT'; name: 'OrderConfirm'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'OrderConfirmed': { kind: 'OBJECT'; name: 'OrderConfirmed'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderCountableConnection': { kind: 'OBJECT'; name: 'OrderCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'OrderCountableEdge': { kind: 'OBJECT'; name: 'OrderCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Order'; ofType: null; }; } }; }; };
    'OrderCreateFromCheckout': { kind: 'OBJECT'; name: 'OrderCreateFromCheckout'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderCreateFromCheckoutError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; }; };
    'OrderCreateFromCheckoutError': { kind: 'OBJECT'; name: 'OrderCreateFromCheckoutError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderCreateFromCheckoutErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lines': { name: 'lines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'variants': { name: 'variants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'OrderCreateFromCheckoutErrorCode': { name: 'OrderCreateFromCheckoutErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'CHECKOUT_NOT_FOUND' | 'CHANNEL_INACTIVE' | 'INSUFFICIENT_STOCK' | 'VOUCHER_NOT_APPLICABLE' | 'GIFT_CARD_NOT_APPLICABLE' | 'TAX_ERROR' | 'SHIPPING_METHOD_NOT_SET' | 'BILLING_ADDRESS_NOT_SET' | 'SHIPPING_ADDRESS_NOT_SET' | 'INVALID_SHIPPING_METHOD' | 'NO_LINES' | 'EMAIL_NOT_SET' | 'UNAVAILABLE_VARIANT_IN_CHANNEL'; };
    'OrderCreated': { kind: 'OBJECT'; name: 'OrderCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderDirection': { name: 'OrderDirection'; enumValues: 'ASC' | 'DESC'; };
    'OrderDiscount': { kind: 'OBJECT'; name: 'OrderDiscount'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'reason': { name: 'reason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translatedName': { name: 'translatedName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDiscountType'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; } }; 'valueType': { name: 'valueType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountValueTypeEnum'; ofType: null; }; } }; }; };
    'OrderDiscountAdd': { kind: 'OBJECT'; name: 'OrderDiscountAdd'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'OrderDiscountCommonInput': { kind: 'INPUT_OBJECT'; name: 'OrderDiscountCommonInput'; isOneOf: false; inputFields: [{ name: 'valueType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountValueTypeEnum'; ofType: null; }; }; defaultValue: null }, { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; }; defaultValue: null }, { name: 'reason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OrderDiscountDelete': { kind: 'OBJECT'; name: 'OrderDiscountDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'OrderDiscountType': { name: 'OrderDiscountType'; enumValues: 'SALE' | 'VOUCHER' | 'MANUAL' | 'PROMOTION' | 'ORDER_PROMOTION'; };
    'OrderDiscountUpdate': { kind: 'OBJECT'; name: 'OrderDiscountUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'OrderDraftFilterInput': { kind: 'INPUT_OBJECT'; name: 'OrderDraftFilterInput'; isOneOf: false; inputFields: [{ name: 'customer'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'created'; type: { kind: 'INPUT_OBJECT'; name: 'DateRangeInput'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'OrderError': { kind: 'OBJECT'; name: 'OrderError'; fields: { 'addressType': { name: 'addressType'; type: { kind: 'ENUM'; name: 'AddressTypeEnum'; ofType: null; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'orderLines': { name: 'orderLines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'variants': { name: 'variants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; }; };
    'OrderErrorCode': { name: 'OrderErrorCode'; enumValues: 'BILLING_ADDRESS_NOT_SET' | 'CANNOT_CANCEL_FULFILLMENT' | 'CANNOT_CANCEL_ORDER' | 'CANNOT_DELETE' | 'CANNOT_DISCOUNT' | 'CANNOT_REFUND' | 'CANNOT_FULFILL_UNPAID_ORDER' | 'CAPTURE_INACTIVE_PAYMENT' | 'GIFT_CARD_LINE' | 'NOT_EDITABLE' | 'FULFILL_ORDER_LINE' | 'GRAPHQL_ERROR' | 'INVALID' | 'PRODUCT_NOT_PUBLISHED' | 'PRODUCT_UNAVAILABLE_FOR_PURCHASE' | 'NOT_FOUND' | 'ORDER_NO_SHIPPING_ADDRESS' | 'PAYMENT_ERROR' | 'PAYMENT_MISSING' | 'TRANSACTION_ERROR' | 'REQUIRED' | 'SHIPPING_METHOD_NOT_APPLICABLE' | 'SHIPPING_METHOD_REQUIRED' | 'TAX_ERROR' | 'UNIQUE' | 'VOID_INACTIVE_PAYMENT' | 'ZERO_QUANTITY' | 'INVALID_QUANTITY' | 'INSUFFICIENT_STOCK' | 'DUPLICATED_INPUT_ITEM' | 'NOT_AVAILABLE_IN_CHANNEL' | 'CHANNEL_INACTIVE' | 'INVALID_VOUCHER' | 'INVALID_VOUCHER_CODE' | 'NON_EDITABLE_GIFT_LINE' | 'NON_REMOVABLE_GIFT_LINE'; };
    'OrderEvent': { kind: 'OBJECT'; name: 'OrderEvent'; fields: { 'amount': { name: 'amount'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'composedId': { name: 'composedId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'discount': { name: 'discount'; type: { kind: 'OBJECT'; name: 'OrderEventDiscountObject'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'emailType': { name: 'emailType'; type: { kind: 'ENUM'; name: 'OrderEventsEmailsEnum'; ofType: null; } }; 'fulfilledItems': { name: 'fulfilledItems'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'FulfillmentLine'; ofType: null; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'invoiceNumber': { name: 'invoiceNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lines': { name: 'lines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderEventOrderLineObject'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'orderNumber': { name: 'orderNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'oversoldItems': { name: 'oversoldItems'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; } }; 'paymentGateway': { name: 'paymentGateway'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'paymentId': { name: 'paymentId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'reference': { name: 'reference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'related': { name: 'related'; type: { kind: 'OBJECT'; name: 'OrderEvent'; ofType: null; } }; 'relatedOrder': { name: 'relatedOrder'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'shippingCostsIncluded': { name: 'shippingCostsIncluded'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'transactionReference': { name: 'transactionReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'OrderEventsEnum'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; }; };
    'OrderEventCountableConnection': { kind: 'OBJECT'; name: 'OrderEventCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderEventCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'OrderEventCountableEdge': { kind: 'OBJECT'; name: 'OrderEventCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderEvent'; ofType: null; }; } }; }; };
    'OrderEventDiscountObject': { kind: 'OBJECT'; name: 'OrderEventDiscountObject'; fields: { 'amount': { name: 'amount'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'oldAmount': { name: 'oldAmount'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'oldValue': { name: 'oldValue'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; } }; 'oldValueType': { name: 'oldValueType'; type: { kind: 'ENUM'; name: 'DiscountValueTypeEnum'; ofType: null; } }; 'reason': { name: 'reason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; } }; 'valueType': { name: 'valueType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountValueTypeEnum'; ofType: null; }; } }; }; };
    'OrderEventOrderLineObject': { kind: 'OBJECT'; name: 'OrderEventOrderLineObject'; fields: { 'discount': { name: 'discount'; type: { kind: 'OBJECT'; name: 'OrderEventDiscountObject'; ofType: null; } }; 'itemName': { name: 'itemName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'orderLine': { name: 'orderLine'; type: { kind: 'OBJECT'; name: 'OrderLine'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'OrderEventsEmailsEnum': { name: 'OrderEventsEmailsEnum'; enumValues: 'PAYMENT_CONFIRMATION' | 'CONFIRMED' | 'SHIPPING_CONFIRMATION' | 'TRACKING_UPDATED' | 'ORDER_CONFIRMATION' | 'ORDER_CANCEL' | 'ORDER_REFUND' | 'FULFILLMENT_CONFIRMATION' | 'DIGITAL_LINKS'; };
    'OrderEventsEnum': { name: 'OrderEventsEnum'; enumValues: 'DRAFT_CREATED' | 'DRAFT_CREATED_FROM_REPLACE' | 'ADDED_PRODUCTS' | 'REMOVED_PRODUCTS' | 'PLACED' | 'PLACED_FROM_DRAFT' | 'OVERSOLD_ITEMS' | 'CANCELED' | 'EXPIRED' | 'ORDER_MARKED_AS_PAID' | 'ORDER_FULLY_PAID' | 'ORDER_REPLACEMENT_CREATED' | 'ORDER_DISCOUNT_ADDED' | 'ORDER_DISCOUNT_AUTOMATICALLY_UPDATED' | 'ORDER_DISCOUNT_UPDATED' | 'ORDER_DISCOUNT_DELETED' | 'ORDER_LINE_DISCOUNT_UPDATED' | 'ORDER_LINE_DISCOUNT_REMOVED' | 'ORDER_LINE_PRODUCT_DELETED' | 'ORDER_LINE_VARIANT_DELETED' | 'UPDATED_ADDRESS' | 'EMAIL_SENT' | 'CONFIRMED' | 'PAYMENT_AUTHORIZED' | 'PAYMENT_CAPTURED' | 'EXTERNAL_SERVICE_NOTIFICATION' | 'PAYMENT_REFUNDED' | 'PAYMENT_VOIDED' | 'PAYMENT_FAILED' | 'TRANSACTION_EVENT' | 'TRANSACTION_CHARGE_REQUESTED' | 'TRANSACTION_REFUND_REQUESTED' | 'TRANSACTION_CANCEL_REQUESTED' | 'TRANSACTION_MARK_AS_PAID_FAILED' | 'INVOICE_REQUESTED' | 'INVOICE_GENERATED' | 'INVOICE_UPDATED' | 'INVOICE_SENT' | 'FULFILLMENT_CANCELED' | 'FULFILLMENT_RESTOCKED_ITEMS' | 'FULFILLMENT_FULFILLED_ITEMS' | 'FULFILLMENT_REFUNDED' | 'FULFILLMENT_RETURNED' | 'FULFILLMENT_REPLACED' | 'FULFILLMENT_AWAITS_APPROVAL' | 'TRACKING_UPDATED' | 'NOTE_ADDED' | 'NOTE_UPDATED' | 'OTHER'; };
    'OrderExpired': { kind: 'OBJECT'; name: 'OrderExpired'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderFilterInput': { kind: 'INPUT_OBJECT'; name: 'OrderFilterInput'; isOneOf: false; inputFields: [{ name: 'paymentStatus'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaymentChargeStatusEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'status'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderStatusFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'customer'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'created'; type: { kind: 'INPUT_OBJECT'; name: 'DateRangeInput'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'authorizeStatus'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderAuthorizeStatusEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'chargeStatus'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderChargeStatusEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeRangeInput'; ofType: null; }; defaultValue: null }, { name: 'isClickAndCollect'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'isPreorder'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'checkoutTokens'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; }; }; defaultValue: null }, { name: 'giftCardUsed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'giftCardBought'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'numbers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'checkoutIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'OrderFilterShippingMethods': { kind: 'OBJECT'; name: 'OrderFilterShippingMethods'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'shippingMethods': { name: 'shippingMethods'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingMethod'; ofType: null; }; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderFulfill': { kind: 'OBJECT'; name: 'OrderFulfill'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'fulfillments': { name: 'fulfillments'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Fulfillment'; ofType: null; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'OrderFulfillInput': { kind: 'INPUT_OBJECT'; name: 'OrderFulfillInput'; isOneOf: false; inputFields: [{ name: 'lines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderFulfillLineInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'notifyCustomer'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'allowStockToBeExceeded'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'trackingNumber'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OrderFulfillLineInput': { kind: 'INPUT_OBJECT'; name: 'OrderFulfillLineInput'; isOneOf: false; inputFields: [{ name: 'orderLineId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'stocks'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderFulfillStockInput'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'OrderFulfillStockInput': { kind: 'INPUT_OBJECT'; name: 'OrderFulfillStockInput'; isOneOf: false; inputFields: [{ name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'warehouse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'OrderFulfilled': { kind: 'OBJECT'; name: 'OrderFulfilled'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderFullyPaid': { kind: 'OBJECT'; name: 'OrderFullyPaid'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderFullyRefunded': { kind: 'OBJECT'; name: 'OrderFullyRefunded'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderGrantRefundCreate': { kind: 'OBJECT'; name: 'OrderGrantRefundCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderGrantRefundCreateError'; ofType: null; }; }; }; } }; 'grantedRefund': { name: 'grantedRefund'; type: { kind: 'OBJECT'; name: 'OrderGrantedRefund'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; }; };
    'OrderGrantRefundCreateError': { kind: 'OBJECT'; name: 'OrderGrantRefundCreateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderGrantRefundCreateErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lines': { name: 'lines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderGrantRefundCreateLineError'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderGrantRefundCreateErrorCode': { name: 'OrderGrantRefundCreateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'SHIPPING_COSTS_ALREADY_GRANTED' | 'AMOUNT_GREATER_THAN_AVAILABLE' | 'REQUIRED' | 'INVALID'; };
    'OrderGrantRefundCreateInput': { kind: 'INPUT_OBJECT'; name: 'OrderGrantRefundCreateInput'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }, { name: 'reason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderGrantRefundCreateLineInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'grantRefundForShipping'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'transactionId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'OrderGrantRefundCreateLineError': { kind: 'OBJECT'; name: 'OrderGrantRefundCreateLineError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderGrantRefundCreateLineErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lineId': { name: 'lineId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderGrantRefundCreateLineErrorCode': { name: 'OrderGrantRefundCreateLineErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'QUANTITY_GREATER_THAN_AVAILABLE'; };
    'OrderGrantRefundCreateLineInput': { kind: 'INPUT_OBJECT'; name: 'OrderGrantRefundCreateLineInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'reason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OrderGrantRefundUpdate': { kind: 'OBJECT'; name: 'OrderGrantRefundUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderGrantRefundUpdateError'; ofType: null; }; }; }; } }; 'grantedRefund': { name: 'grantedRefund'; type: { kind: 'OBJECT'; name: 'OrderGrantedRefund'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; }; };
    'OrderGrantRefundUpdateError': { kind: 'OBJECT'; name: 'OrderGrantRefundUpdateError'; fields: { 'addLines': { name: 'addLines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderGrantRefundUpdateLineError'; ofType: null; }; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderGrantRefundUpdateErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'removeLines': { name: 'removeLines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderGrantRefundUpdateLineError'; ofType: null; }; }; } }; }; };
    'OrderGrantRefundUpdateErrorCode': { name: 'OrderGrantRefundUpdateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'REQUIRED' | 'INVALID' | 'AMOUNT_GREATER_THAN_AVAILABLE' | 'SHIPPING_COSTS_ALREADY_GRANTED'; };
    'OrderGrantRefundUpdateInput': { kind: 'INPUT_OBJECT'; name: 'OrderGrantRefundUpdateInput'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'SCALAR'; name: 'Decimal'; ofType: null; }; defaultValue: null }, { name: 'reason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'addLines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderGrantRefundUpdateLineAddInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeLines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'grantRefundForShipping'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'transactionId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'OrderGrantRefundUpdateLineAddInput': { kind: 'INPUT_OBJECT'; name: 'OrderGrantRefundUpdateLineAddInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'reason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OrderGrantRefundUpdateLineError': { kind: 'OBJECT'; name: 'OrderGrantRefundUpdateLineError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderGrantRefundUpdateLineErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'lineId': { name: 'lineId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderGrantRefundUpdateLineErrorCode': { name: 'OrderGrantRefundUpdateLineErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'QUANTITY_GREATER_THAN_AVAILABLE'; };
    'OrderGrantedRefund': { kind: 'OBJECT'; name: 'OrderGrantedRefund'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'lines': { name: 'lines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderGrantedRefundLine'; ofType: null; }; }; } }; 'reason': { name: 'reason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shippingCostsIncluded': { name: 'shippingCostsIncluded'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'status': { name: 'status'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderGrantedRefundStatusEnum'; ofType: null; }; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; } }; 'transactionEvents': { name: 'transactionEvents'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionEvent'; ofType: null; }; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'OrderGrantedRefundLine': { kind: 'OBJECT'; name: 'OrderGrantedRefundLine'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'orderLine': { name: 'orderLine'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderLine'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'reason': { name: 'reason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderGrantedRefundStatusEnum': { name: 'OrderGrantedRefundStatusEnum'; enumValues: 'NONE' | 'PENDING' | 'SUCCESS' | 'FAILURE'; };
    'OrderLine': { kind: 'OBJECT'; name: 'OrderLine'; fields: { 'allocations': { name: 'allocations'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Allocation'; ofType: null; }; }; } }; 'digitalContentUrl': { name: 'digitalContentUrl'; type: { kind: 'OBJECT'; name: 'DigitalContentUrl'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isGift': { name: 'isGift'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'isPriceOverridden': { name: 'isPriceOverridden'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'isShippingRequired': { name: 'isShippingRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'productName': { name: 'productName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'productSku': { name: 'productSku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'productVariantId': { name: 'productVariantId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'quantityFulfilled': { name: 'quantityFulfilled'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'quantityToFulfill': { name: 'quantityToFulfill'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'saleId': { name: 'saleId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'taxClass': { name: 'taxClass'; type: { kind: 'OBJECT'; name: 'TaxClass'; ofType: null; } }; 'taxClassMetadata': { name: 'taxClassMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'taxClassName': { name: 'taxClassName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'taxClassPrivateMetadata': { name: 'taxClassPrivateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'taxRate': { name: 'taxRate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'thumbnail': { name: 'thumbnail'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'totalPrice': { name: 'totalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; }; } }; 'translatedProductName': { name: 'translatedProductName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translatedVariantName': { name: 'translatedVariantName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'undiscountedTotalPrice': { name: 'undiscountedTotalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; }; } }; 'undiscountedUnitPrice': { name: 'undiscountedUnitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; }; } }; 'unitDiscount': { name: 'unitDiscount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'unitDiscountReason': { name: 'unitDiscountReason'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'unitDiscountType': { name: 'unitDiscountType'; type: { kind: 'ENUM'; name: 'DiscountValueTypeEnum'; ofType: null; } }; 'unitDiscountValue': { name: 'unitDiscountValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; } }; 'unitPrice': { name: 'unitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'variantName': { name: 'variantName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'voucherCode': { name: 'voucherCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderLineCreateInput': { kind: 'INPUT_OBJECT'; name: 'OrderLineCreateInput'; isOneOf: false; inputFields: [{ name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'variantId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'forceNewLine'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'price'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }]; };
    'OrderLineDelete': { kind: 'OBJECT'; name: 'OrderLineDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'orderLine': { name: 'orderLine'; type: { kind: 'OBJECT'; name: 'OrderLine'; ofType: null; } }; }; };
    'OrderLineDiscountRemove': { kind: 'OBJECT'; name: 'OrderLineDiscountRemove'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'orderLine': { name: 'orderLine'; type: { kind: 'OBJECT'; name: 'OrderLine'; ofType: null; } }; }; };
    'OrderLineDiscountUpdate': { kind: 'OBJECT'; name: 'OrderLineDiscountUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'orderLine': { name: 'orderLine'; type: { kind: 'OBJECT'; name: 'OrderLine'; ofType: null; } }; }; };
    'OrderLineInput': { kind: 'INPUT_OBJECT'; name: 'OrderLineInput'; isOneOf: false; inputFields: [{ name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'OrderLineUpdate': { kind: 'OBJECT'; name: 'OrderLineUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'orderLine': { name: 'orderLine'; type: { kind: 'OBJECT'; name: 'OrderLine'; ofType: null; } }; }; };
    'OrderLinesCreate': { kind: 'OBJECT'; name: 'OrderLinesCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'orderLines': { name: 'orderLines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderLine'; ofType: null; }; }; } }; }; };
    'OrderMarkAsPaid': { kind: 'OBJECT'; name: 'OrderMarkAsPaid'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'OrderMetadataUpdated': { kind: 'OBJECT'; name: 'OrderMetadataUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderNoteAdd': { kind: 'OBJECT'; name: 'OrderNoteAdd'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderNoteAddError'; ofType: null; }; }; }; } }; 'event': { name: 'event'; type: { kind: 'OBJECT'; name: 'OrderEvent'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; }; };
    'OrderNoteAddError': { kind: 'OBJECT'; name: 'OrderNoteAddError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'OrderNoteAddErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderNoteAddErrorCode': { name: 'OrderNoteAddErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'REQUIRED'; };
    'OrderNoteInput': { kind: 'INPUT_OBJECT'; name: 'OrderNoteInput'; isOneOf: false; inputFields: [{ name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'OrderNoteUpdate': { kind: 'OBJECT'; name: 'OrderNoteUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderNoteUpdateError'; ofType: null; }; }; }; } }; 'event': { name: 'event'; type: { kind: 'OBJECT'; name: 'OrderEvent'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; }; };
    'OrderNoteUpdateError': { kind: 'OBJECT'; name: 'OrderNoteUpdateError'; fields: { 'code': { name: 'code'; type: { kind: 'ENUM'; name: 'OrderNoteUpdateErrorCode'; ofType: null; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderNoteUpdateErrorCode': { name: 'OrderNoteUpdateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'REQUIRED'; };
    'OrderOrCheckout': { kind: 'UNION'; name: 'OrderOrCheckout'; fields: {}; possibleTypes: 'Checkout' | 'Order'; };
    'OrderOriginEnum': { name: 'OrderOriginEnum'; enumValues: 'CHECKOUT' | 'DRAFT' | 'REISSUE' | 'BULK_CREATE'; };
    'OrderPaid': { kind: 'OBJECT'; name: 'OrderPaid'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderPredicateInput': { kind: 'INPUT_OBJECT'; name: 'OrderPredicateInput'; isOneOf: false; inputFields: [{ name: 'discountedObjectPredicate'; type: { kind: 'INPUT_OBJECT'; name: 'DiscountedObjectWhereInput'; ofType: null; }; defaultValue: null }, { name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderPredicateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderPredicateInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'OrderRefund': { kind: 'OBJECT'; name: 'OrderRefund'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'OrderRefundFulfillmentLineInput': { kind: 'INPUT_OBJECT'; name: 'OrderRefundFulfillmentLineInput'; isOneOf: false; inputFields: [{ name: 'fulfillmentLineId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'OrderRefundLineInput': { kind: 'INPUT_OBJECT'; name: 'OrderRefundLineInput'; isOneOf: false; inputFields: [{ name: 'orderLineId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'OrderRefundProductsInput': { kind: 'INPUT_OBJECT'; name: 'OrderRefundProductsInput'; isOneOf: false; inputFields: [{ name: 'orderLines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderRefundLineInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'fulfillmentLines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderRefundFulfillmentLineInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'amountToRefund'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'includeShippingCosts'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'OrderRefunded': { kind: 'OBJECT'; name: 'OrderRefunded'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderReturnFulfillmentLineInput': { kind: 'INPUT_OBJECT'; name: 'OrderReturnFulfillmentLineInput'; isOneOf: false; inputFields: [{ name: 'fulfillmentLineId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'replace'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'OrderReturnLineInput': { kind: 'INPUT_OBJECT'; name: 'OrderReturnLineInput'; isOneOf: false; inputFields: [{ name: 'orderLineId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'replace'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'OrderReturnProductsInput': { kind: 'INPUT_OBJECT'; name: 'OrderReturnProductsInput'; isOneOf: false; inputFields: [{ name: 'orderLines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderReturnLineInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'fulfillmentLines'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'OrderReturnFulfillmentLineInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'amountToRefund'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'includeShippingCosts'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }, { name: 'refund'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'OrderSettings': { kind: 'OBJECT'; name: 'OrderSettings'; fields: { 'allowUnpaidOrders': { name: 'allowUnpaidOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'automaticallyConfirmAllNewOrders': { name: 'automaticallyConfirmAllNewOrders'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'automaticallyFulfillNonShippableGiftCard': { name: 'automaticallyFulfillNonShippableGiftCard'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'deleteExpiredOrdersAfter': { name: 'deleteExpiredOrdersAfter'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Day'; ofType: null; }; } }; 'expireOrdersAfter': { name: 'expireOrdersAfter'; type: { kind: 'SCALAR'; name: 'Minute'; ofType: null; } }; 'includeDraftOrderInVoucherUsage': { name: 'includeDraftOrderInVoucherUsage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'markAsPaidStrategy': { name: 'markAsPaidStrategy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'MarkAsPaidStrategyEnum'; ofType: null; }; } }; }; };
    'OrderSettingsError': { kind: 'OBJECT'; name: 'OrderSettingsError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderSettingsErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderSettingsErrorCode': { name: 'OrderSettingsErrorCode'; enumValues: 'INVALID'; };
    'OrderSettingsInput': { kind: 'INPUT_OBJECT'; name: 'OrderSettingsInput'; isOneOf: false; inputFields: [{ name: 'automaticallyConfirmAllNewOrders'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'automaticallyFulfillNonShippableGiftCard'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'expireOrdersAfter'; type: { kind: 'SCALAR'; name: 'Minute'; ofType: null; }; defaultValue: null }, { name: 'deleteExpiredOrdersAfter'; type: { kind: 'SCALAR'; name: 'Day'; ofType: null; }; defaultValue: null }, { name: 'markAsPaidStrategy'; type: { kind: 'ENUM'; name: 'MarkAsPaidStrategyEnum'; ofType: null; }; defaultValue: null }, { name: 'allowUnpaidOrders'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'includeDraftOrderInVoucherUsage'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'OrderSettingsUpdate': { kind: 'OBJECT'; name: 'OrderSettingsUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderSettingsError'; ofType: null; }; }; }; } }; 'orderSettings': { name: 'orderSettings'; type: { kind: 'OBJECT'; name: 'OrderSettings'; ofType: null; } }; 'orderSettingsErrors': { name: 'orderSettingsErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderSettingsError'; ofType: null; }; }; }; } }; }; };
    'OrderSettingsUpdateInput': { kind: 'INPUT_OBJECT'; name: 'OrderSettingsUpdateInput'; isOneOf: false; inputFields: [{ name: 'automaticallyConfirmAllNewOrders'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'automaticallyFulfillNonShippableGiftCard'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'OrderSortField': { name: 'OrderSortField'; enumValues: 'NUMBER' | 'RANK' | 'CREATION_DATE' | 'CREATED_AT' | 'LAST_MODIFIED_AT' | 'CUSTOMER' | 'PAYMENT' | 'FULFILLMENT_STATUS'; };
    'OrderSortingInput': { kind: 'INPUT_OBJECT'; name: 'OrderSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderSortField'; ofType: null; }; }; defaultValue: null }]; };
    'OrderStatus': { name: 'OrderStatus'; enumValues: 'DRAFT' | 'UNCONFIRMED' | 'UNFULFILLED' | 'PARTIALLY_FULFILLED' | 'PARTIALLY_RETURNED' | 'RETURNED' | 'FULFILLED' | 'CANCELED' | 'EXPIRED'; };
    'OrderStatusFilter': { name: 'OrderStatusFilter'; enumValues: 'READY_TO_FULFILL' | 'READY_TO_CAPTURE' | 'UNFULFILLED' | 'UNCONFIRMED' | 'PARTIALLY_FULFILLED' | 'FULFILLED' | 'CANCELED'; };
    'OrderUpdate': { kind: 'OBJECT'; name: 'OrderUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'OrderUpdateInput': { kind: 'INPUT_OBJECT'; name: 'OrderUpdateInput'; isOneOf: false; inputFields: [{ name: 'billingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'userEmail'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'shippingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'OrderUpdateShipping': { kind: 'OBJECT'; name: 'OrderUpdateShipping'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'OrderUpdateShippingInput': { kind: 'INPUT_OBJECT'; name: 'OrderUpdateShippingInput'; isOneOf: false; inputFields: [{ name: 'shippingMethod'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'OrderUpdated': { kind: 'OBJECT'; name: 'OrderUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'OrderVoid': { kind: 'OBJECT'; name: 'OrderVoid'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderErrors': { name: 'orderErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'OrderError'; ofType: null; }; }; }; } }; }; };
    'Page': { kind: 'OBJECT'; name: 'Page'; fields: { 'attributes': { name: 'attributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SelectedAttribute'; ofType: null; }; }; }; } }; 'content': { name: 'content'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'contentJson': { name: 'contentJson'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isPublished': { name: 'isPublished'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'pageType': { name: 'pageType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageType'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'publicationDate': { name: 'publicationDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'publishedAt': { name: 'publishedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'seoDescription': { name: 'seoDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoTitle': { name: 'seoTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'PageTranslation'; ofType: null; } }; }; };
    'PageAttributeAssign': { kind: 'OBJECT'; name: 'PageAttributeAssign'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageErrors': { name: 'pageErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageType': { name: 'pageType'; type: { kind: 'OBJECT'; name: 'PageType'; ofType: null; } }; }; };
    'PageAttributeUnassign': { kind: 'OBJECT'; name: 'PageAttributeUnassign'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageErrors': { name: 'pageErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageType': { name: 'pageType'; type: { kind: 'OBJECT'; name: 'PageType'; ofType: null; } }; }; };
    'PageBulkDelete': { kind: 'OBJECT'; name: 'PageBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageErrors': { name: 'pageErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; }; };
    'PageBulkPublish': { kind: 'OBJECT'; name: 'PageBulkPublish'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageErrors': { name: 'pageErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; }; };
    'PageCountableConnection': { kind: 'OBJECT'; name: 'PageCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'PageCountableEdge': { kind: 'OBJECT'; name: 'PageCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Page'; ofType: null; }; } }; }; };
    'PageCreate': { kind: 'OBJECT'; name: 'PageCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'page': { name: 'page'; type: { kind: 'OBJECT'; name: 'Page'; ofType: null; } }; 'pageErrors': { name: 'pageErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; }; };
    'PageCreateInput': { kind: 'INPUT_OBJECT'; name: 'PageCreateInput'; isOneOf: false; inputFields: [{ name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'content'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeValueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'isPublished'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'publicationDate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'publishedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'seo'; type: { kind: 'INPUT_OBJECT'; name: 'SeoInput'; ofType: null; }; defaultValue: null }, { name: 'pageType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'PageCreated': { kind: 'OBJECT'; name: 'PageCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'page': { name: 'page'; type: { kind: 'OBJECT'; name: 'Page'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PageDelete': { kind: 'OBJECT'; name: 'PageDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'page': { name: 'page'; type: { kind: 'OBJECT'; name: 'Page'; ofType: null; } }; 'pageErrors': { name: 'pageErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; }; };
    'PageDeleted': { kind: 'OBJECT'; name: 'PageDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'page': { name: 'page'; type: { kind: 'OBJECT'; name: 'Page'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PageError': { kind: 'OBJECT'; name: 'PageError'; fields: { 'attributes': { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PageErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'values': { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'PageErrorCode': { name: 'PageErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE' | 'DUPLICATED_INPUT_ITEM' | 'ATTRIBUTE_ALREADY_ASSIGNED'; };
    'PageFilterInput': { kind: 'INPUT_OBJECT'; name: 'PageFilterInput'; isOneOf: false; inputFields: [{ name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'pageTypes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'slugs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'PageInfo': { kind: 'OBJECT'; name: 'PageInfo'; fields: { 'endCursor': { name: 'endCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'hasNextPage': { name: 'hasNextPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'hasPreviousPage': { name: 'hasPreviousPage'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'startCursor': { name: 'startCursor'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PageInput': { kind: 'INPUT_OBJECT'; name: 'PageInput'; isOneOf: false; inputFields: [{ name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'content'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeValueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'isPublished'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'publicationDate'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'publishedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'seo'; type: { kind: 'INPUT_OBJECT'; name: 'SeoInput'; ofType: null; }; defaultValue: null }]; };
    'PageReorderAttributeValues': { kind: 'OBJECT'; name: 'PageReorderAttributeValues'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'page': { name: 'page'; type: { kind: 'OBJECT'; name: 'Page'; ofType: null; } }; 'pageErrors': { name: 'pageErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; }; };
    'PageSortField': { name: 'PageSortField'; enumValues: 'TITLE' | 'SLUG' | 'VISIBILITY' | 'CREATION_DATE' | 'PUBLICATION_DATE' | 'PUBLISHED_AT' | 'CREATED_AT'; };
    'PageSortingInput': { kind: 'INPUT_OBJECT'; name: 'PageSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PageSortField'; ofType: null; }; }; defaultValue: null }]; };
    'PageTranslatableContent': { kind: 'OBJECT'; name: 'PageTranslatableContent'; fields: { 'attributeValues': { name: 'attributeValues'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeValueTranslatableContent'; ofType: null; }; }; }; } }; 'content': { name: 'content'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'contentJson': { name: 'contentJson'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'page': { name: 'page'; type: { kind: 'OBJECT'; name: 'Page'; ofType: null; } }; 'pageId': { name: 'pageId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'seoDescription': { name: 'seoDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoTitle': { name: 'seoTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'PageTranslation'; ofType: null; } }; }; };
    'PageTranslate': { kind: 'OBJECT'; name: 'PageTranslate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'page': { name: 'page'; type: { kind: 'OBJECT'; name: 'PageTranslatableContent'; ofType: null; } }; 'translationErrors': { name: 'translationErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; }; };
    'PageTranslation': { kind: 'OBJECT'; name: 'PageTranslation'; fields: { 'content': { name: 'content'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'contentJson': { name: 'contentJson'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; } }; 'seoDescription': { name: 'seoDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoTitle': { name: 'seoTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'title': { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translatableContent': { name: 'translatableContent'; type: { kind: 'OBJECT'; name: 'PageTranslatableContent'; ofType: null; } }; }; };
    'PageTranslationInput': { kind: 'INPUT_OBJECT'; name: 'PageTranslationInput'; isOneOf: false; inputFields: [{ name: 'seoTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'seoDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'content'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }]; };
    'PageType': { kind: 'OBJECT'; name: 'PageType'; fields: { 'attributes': { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; } }; 'availableAttributes': { name: 'availableAttributes'; type: { kind: 'OBJECT'; name: 'AttributeCountableConnection'; ofType: null; } }; 'hasPages': { name: 'hasPages'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PageTypeBulkDelete': { kind: 'OBJECT'; name: 'PageTypeBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageErrors': { name: 'pageErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; }; };
    'PageTypeCountableConnection': { kind: 'OBJECT'; name: 'PageTypeCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageTypeCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'PageTypeCountableEdge': { kind: 'OBJECT'; name: 'PageTypeCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageType'; ofType: null; }; } }; }; };
    'PageTypeCreate': { kind: 'OBJECT'; name: 'PageTypeCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageErrors': { name: 'pageErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageType': { name: 'pageType'; type: { kind: 'OBJECT'; name: 'PageType'; ofType: null; } }; }; };
    'PageTypeCreateInput': { kind: 'INPUT_OBJECT'; name: 'PageTypeCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'addAttributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'PageTypeCreated': { kind: 'OBJECT'; name: 'PageTypeCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'pageType': { name: 'pageType'; type: { kind: 'OBJECT'; name: 'PageType'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PageTypeDelete': { kind: 'OBJECT'; name: 'PageTypeDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageErrors': { name: 'pageErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageType': { name: 'pageType'; type: { kind: 'OBJECT'; name: 'PageType'; ofType: null; } }; }; };
    'PageTypeDeleted': { kind: 'OBJECT'; name: 'PageTypeDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'pageType': { name: 'pageType'; type: { kind: 'OBJECT'; name: 'PageType'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PageTypeFilterInput': { kind: 'INPUT_OBJECT'; name: 'PageTypeFilterInput'; isOneOf: false; inputFields: [{ name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slugs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'PageTypeReorderAttributes': { kind: 'OBJECT'; name: 'PageTypeReorderAttributes'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageErrors': { name: 'pageErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageType': { name: 'pageType'; type: { kind: 'OBJECT'; name: 'PageType'; ofType: null; } }; }; };
    'PageTypeSortField': { name: 'PageTypeSortField'; enumValues: 'NAME' | 'SLUG'; };
    'PageTypeSortingInput': { kind: 'INPUT_OBJECT'; name: 'PageTypeSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PageTypeSortField'; ofType: null; }; }; defaultValue: null }]; };
    'PageTypeUpdate': { kind: 'OBJECT'; name: 'PageTypeUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageErrors': { name: 'pageErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'pageType': { name: 'pageType'; type: { kind: 'OBJECT'; name: 'PageType'; ofType: null; } }; }; };
    'PageTypeUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PageTypeUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'addAttributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeAttributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'PageTypeUpdated': { kind: 'OBJECT'; name: 'PageTypeUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'pageType': { name: 'pageType'; type: { kind: 'OBJECT'; name: 'PageType'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PageUpdate': { kind: 'OBJECT'; name: 'PageUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; 'page': { name: 'page'; type: { kind: 'OBJECT'; name: 'Page'; ofType: null; } }; 'pageErrors': { name: 'pageErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageError'; ofType: null; }; }; }; } }; }; };
    'PageUpdated': { kind: 'OBJECT'; name: 'PageUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'page': { name: 'page'; type: { kind: 'OBJECT'; name: 'Page'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PasswordChange': { kind: 'OBJECT'; name: 'PasswordChange'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'Payment': { kind: 'OBJECT'; name: 'Payment'; fields: { 'actions': { name: 'actions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderAction'; ofType: null; }; }; }; } }; 'availableCaptureAmount': { name: 'availableCaptureAmount'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'availableRefundAmount': { name: 'availableRefundAmount'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'capturedAmount': { name: 'capturedAmount'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'chargeStatus': { name: 'chargeStatus'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaymentChargeStatusEnum'; ofType: null; }; } }; 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'creditCard': { name: 'creditCard'; type: { kind: 'OBJECT'; name: 'CreditCard'; ofType: null; } }; 'customerIpAddress': { name: 'customerIpAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gateway': { name: 'gateway'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isActive': { name: 'isActive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'modified': { name: 'modified'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'partial': { name: 'partial'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'paymentMethodType': { name: 'paymentMethodType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'pspReference': { name: 'pspReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'total': { name: 'total'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'transactions': { name: 'transactions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Transaction'; ofType: null; }; }; } }; }; };
    'PaymentAuthorize': { kind: 'OBJECT'; name: 'PaymentAuthorize'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'payment': { name: 'payment'; type: { kind: 'OBJECT'; name: 'Payment'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentCapture': { kind: 'OBJECT'; name: 'PaymentCapture'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentError'; ofType: null; }; }; }; } }; 'payment': { name: 'payment'; type: { kind: 'OBJECT'; name: 'Payment'; ofType: null; } }; 'paymentErrors': { name: 'paymentErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentError'; ofType: null; }; }; }; } }; }; };
    'PaymentCaptureEvent': { kind: 'OBJECT'; name: 'PaymentCaptureEvent'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'payment': { name: 'payment'; type: { kind: 'OBJECT'; name: 'Payment'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentChargeStatusEnum': { name: 'PaymentChargeStatusEnum'; enumValues: 'NOT_CHARGED' | 'PENDING' | 'PARTIALLY_CHARGED' | 'FULLY_CHARGED' | 'PARTIALLY_REFUNDED' | 'FULLY_REFUNDED' | 'REFUSED' | 'CANCELLED'; };
    'PaymentCheckBalance': { kind: 'OBJECT'; name: 'PaymentCheckBalance'; fields: { 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentError'; ofType: null; }; }; }; } }; 'paymentErrors': { name: 'paymentErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentError'; ofType: null; }; }; }; } }; }; };
    'PaymentCheckBalanceInput': { kind: 'INPUT_OBJECT'; name: 'PaymentCheckBalanceInput'; isOneOf: false; inputFields: [{ name: 'gatewayId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'method'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'card'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CardInput'; ofType: null; }; }; defaultValue: null }]; };
    'PaymentConfirmEvent': { kind: 'OBJECT'; name: 'PaymentConfirmEvent'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'payment': { name: 'payment'; type: { kind: 'OBJECT'; name: 'Payment'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentCountableConnection': { kind: 'OBJECT'; name: 'PaymentCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'PaymentCountableEdge': { kind: 'OBJECT'; name: 'PaymentCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Payment'; ofType: null; }; } }; }; };
    'PaymentError': { kind: 'OBJECT'; name: 'PaymentError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaymentErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'variants': { name: 'variants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'PaymentErrorCode': { name: 'PaymentErrorCode'; enumValues: 'BILLING_ADDRESS_NOT_SET' | 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE' | 'PARTIAL_PAYMENT_NOT_ALLOWED' | 'SHIPPING_ADDRESS_NOT_SET' | 'INVALID_SHIPPING_METHOD' | 'SHIPPING_METHOD_NOT_SET' | 'PAYMENT_ERROR' | 'NOT_SUPPORTED_GATEWAY' | 'CHANNEL_INACTIVE' | 'BALANCE_CHECK_ERROR' | 'CHECKOUT_EMAIL_NOT_SET' | 'UNAVAILABLE_VARIANT_IN_CHANNEL' | 'NO_CHECKOUT_LINES' | 'CHECKOUT_COMPLETION_IN_PROGRESS'; };
    'PaymentFilterInput': { kind: 'INPUT_OBJECT'; name: 'PaymentFilterInput'; isOneOf: false; inputFields: [{ name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'checkouts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'PaymentGateway': { kind: 'OBJECT'; name: 'PaymentGateway'; fields: { 'config': { name: 'config'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GatewayConfigLine'; ofType: null; }; }; }; } }; 'currencies': { name: 'currencies'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PaymentGatewayConfig': { kind: 'OBJECT'; name: 'PaymentGatewayConfig'; fields: { 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentGatewayConfigError'; ofType: null; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PaymentGatewayConfigError': { kind: 'OBJECT'; name: 'PaymentGatewayConfigError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaymentGatewayConfigErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentGatewayConfigErrorCode': { name: 'PaymentGatewayConfigErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND'; };
    'PaymentGatewayInitialize': { kind: 'OBJECT'; name: 'PaymentGatewayInitialize'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentGatewayInitializeError'; ofType: null; }; }; }; } }; 'gatewayConfigs': { name: 'gatewayConfigs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentGatewayConfig'; ofType: null; }; }; } }; }; };
    'PaymentGatewayInitializeError': { kind: 'OBJECT'; name: 'PaymentGatewayInitializeError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaymentGatewayInitializeErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentGatewayInitializeErrorCode': { name: 'PaymentGatewayInitializeErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND'; };
    'PaymentGatewayInitializeSession': { kind: 'OBJECT'; name: 'PaymentGatewayInitializeSession'; fields: { 'amount': { name: 'amount'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; } }; 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'sourceObject': { name: 'sourceObject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'OrderOrCheckout'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentGatewayInitializeTokenization': { kind: 'OBJECT'; name: 'PaymentGatewayInitializeTokenization'; fields: { 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentGatewayInitializeTokenizationError'; ofType: null; }; }; }; } }; 'result': { name: 'result'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaymentGatewayInitializeTokenizationResult'; ofType: null; }; } }; }; };
    'PaymentGatewayInitializeTokenizationError': { kind: 'OBJECT'; name: 'PaymentGatewayInitializeTokenizationError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaymentGatewayInitializeTokenizationErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentGatewayInitializeTokenizationErrorCode': { name: 'PaymentGatewayInitializeTokenizationErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'CHANNEL_INACTIVE' | 'GATEWAY_ERROR'; };
    'PaymentGatewayInitializeTokenizationResult': { name: 'PaymentGatewayInitializeTokenizationResult'; enumValues: 'SUCCESSFULLY_INITIALIZED' | 'FAILED_TO_INITIALIZE' | 'FAILED_TO_DELIVER'; };
    'PaymentGatewayInitializeTokenizationSession': { kind: 'OBJECT'; name: 'PaymentGatewayInitializeTokenizationSession'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentGatewayToInitialize': { kind: 'INPUT_OBJECT'; name: 'PaymentGatewayToInitialize'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }]; };
    'PaymentInitialize': { kind: 'OBJECT'; name: 'PaymentInitialize'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentError'; ofType: null; }; }; }; } }; 'initializedPayment': { name: 'initializedPayment'; type: { kind: 'OBJECT'; name: 'PaymentInitialized'; ofType: null; } }; 'paymentErrors': { name: 'paymentErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentError'; ofType: null; }; }; }; } }; }; };
    'PaymentInitialized': { kind: 'OBJECT'; name: 'PaymentInitialized'; fields: { 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'gateway': { name: 'gateway'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PaymentInput': { kind: 'INPUT_OBJECT'; name: 'PaymentInput'; isOneOf: false; inputFields: [{ name: 'gateway'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'amount'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'returnUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'storePaymentMethod'; type: { kind: 'ENUM'; name: 'StorePaymentMethodEnum'; ofType: null; }; defaultValue: "NONE" }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'PaymentListGateways': { kind: 'OBJECT'; name: 'PaymentListGateways'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentMethodInitializeTokenization': { kind: 'OBJECT'; name: 'PaymentMethodInitializeTokenization'; fields: { 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentMethodInitializeTokenizationError'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'result': { name: 'result'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaymentMethodTokenizationResult'; ofType: null; }; } }; }; };
    'PaymentMethodInitializeTokenizationError': { kind: 'OBJECT'; name: 'PaymentMethodInitializeTokenizationError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaymentMethodInitializeTokenizationErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentMethodInitializeTokenizationErrorCode': { name: 'PaymentMethodInitializeTokenizationErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'CHANNEL_INACTIVE' | 'GATEWAY_ERROR'; };
    'PaymentMethodInitializeTokenizationSession': { kind: 'OBJECT'; name: 'PaymentMethodInitializeTokenizationSession'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'paymentFlowToSupport': { name: 'paymentFlowToSupport'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TokenizedPaymentFlowEnum'; ofType: null; }; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentMethodProcessTokenization': { kind: 'OBJECT'; name: 'PaymentMethodProcessTokenization'; fields: { 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentMethodProcessTokenizationError'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'result': { name: 'result'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaymentMethodTokenizationResult'; ofType: null; }; } }; }; };
    'PaymentMethodProcessTokenizationError': { kind: 'OBJECT'; name: 'PaymentMethodProcessTokenizationError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PaymentMethodProcessTokenizationErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentMethodProcessTokenizationErrorCode': { name: 'PaymentMethodProcessTokenizationErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'CHANNEL_INACTIVE' | 'GATEWAY_ERROR'; };
    'PaymentMethodProcessTokenizationSession': { kind: 'OBJECT'; name: 'PaymentMethodProcessTokenizationSession'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentMethodRequestDeleteError': { kind: 'OBJECT'; name: 'PaymentMethodRequestDeleteError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'StoredPaymentMethodRequestDeleteErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentMethodTokenizationResult': { name: 'PaymentMethodTokenizationResult'; enumValues: 'SUCCESSFULLY_TOKENIZED' | 'PENDING' | 'ADDITIONAL_ACTION_REQUIRED' | 'FAILED_TO_TOKENIZE' | 'FAILED_TO_DELIVER'; };
    'PaymentProcessEvent': { kind: 'OBJECT'; name: 'PaymentProcessEvent'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'payment': { name: 'payment'; type: { kind: 'OBJECT'; name: 'Payment'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentRefund': { kind: 'OBJECT'; name: 'PaymentRefund'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentError'; ofType: null; }; }; }; } }; 'payment': { name: 'payment'; type: { kind: 'OBJECT'; name: 'Payment'; ofType: null; } }; 'paymentErrors': { name: 'paymentErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentError'; ofType: null; }; }; }; } }; }; };
    'PaymentRefundEvent': { kind: 'OBJECT'; name: 'PaymentRefundEvent'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'payment': { name: 'payment'; type: { kind: 'OBJECT'; name: 'Payment'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentSettings': { kind: 'OBJECT'; name: 'PaymentSettings'; fields: { 'defaultTransactionFlowStrategy': { name: 'defaultTransactionFlowStrategy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionFlowStrategyEnum'; ofType: null; }; } }; }; };
    'PaymentSettingsInput': { kind: 'INPUT_OBJECT'; name: 'PaymentSettingsInput'; isOneOf: false; inputFields: [{ name: 'defaultTransactionFlowStrategy'; type: { kind: 'ENUM'; name: 'TransactionFlowStrategyEnum'; ofType: null; }; defaultValue: null }]; };
    'PaymentSource': { kind: 'OBJECT'; name: 'PaymentSource'; fields: { 'creditCardInfo': { name: 'creditCardInfo'; type: { kind: 'OBJECT'; name: 'CreditCard'; ofType: null; } }; 'gateway': { name: 'gateway'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'paymentMethodId': { name: 'paymentMethodId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PaymentVoid': { kind: 'OBJECT'; name: 'PaymentVoid'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentError'; ofType: null; }; }; }; } }; 'payment': { name: 'payment'; type: { kind: 'OBJECT'; name: 'Payment'; ofType: null; } }; 'paymentErrors': { name: 'paymentErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentError'; ofType: null; }; }; }; } }; }; };
    'PaymentVoidEvent': { kind: 'OBJECT'; name: 'PaymentVoidEvent'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'payment': { name: 'payment'; type: { kind: 'OBJECT'; name: 'Payment'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Permission': { kind: 'OBJECT'; name: 'Permission'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PermissionEnum'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PermissionEnum': { name: 'PermissionEnum'; enumValues: 'MANAGE_USERS' | 'MANAGE_STAFF' | 'IMPERSONATE_USER' | 'MANAGE_APPS' | 'MANAGE_OBSERVABILITY' | 'MANAGE_CHECKOUTS' | 'HANDLE_CHECKOUTS' | 'HANDLE_TAXES' | 'MANAGE_TAXES' | 'MANAGE_CHANNELS' | 'MANAGE_DISCOUNTS' | 'MANAGE_GIFT_CARD' | 'MANAGE_MENUS' | 'MANAGE_ORDERS' | 'MANAGE_ORDERS_IMPORT' | 'MANAGE_PAGES' | 'MANAGE_PAGE_TYPES_AND_ATTRIBUTES' | 'HANDLE_PAYMENTS' | 'MANAGE_PLUGINS' | 'MANAGE_PRODUCTS' | 'MANAGE_PRODUCT_TYPES_AND_ATTRIBUTES' | 'MANAGE_SHIPPING' | 'MANAGE_SETTINGS' | 'MANAGE_TRANSLATIONS'; };
    'PermissionGroupCreate': { kind: 'OBJECT'; name: 'PermissionGroupCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PermissionGroupError'; ofType: null; }; }; }; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'permissionGroupErrors': { name: 'permissionGroupErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PermissionGroupError'; ofType: null; }; }; }; } }; }; };
    'PermissionGroupCreateInput': { kind: 'INPUT_OBJECT'; name: 'PermissionGroupCreateInput'; isOneOf: false; inputFields: [{ name: 'addPermissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PermissionEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'addUsers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'addChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'restrictedAccessToChannels'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: "false" }]; };
    'PermissionGroupCreated': { kind: 'OBJECT'; name: 'PermissionGroupCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'permissionGroup': { name: 'permissionGroup'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PermissionGroupDelete': { kind: 'OBJECT'; name: 'PermissionGroupDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PermissionGroupError'; ofType: null; }; }; }; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'permissionGroupErrors': { name: 'permissionGroupErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PermissionGroupError'; ofType: null; }; }; }; } }; }; };
    'PermissionGroupDeleted': { kind: 'OBJECT'; name: 'PermissionGroupDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'permissionGroup': { name: 'permissionGroup'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PermissionGroupError': { kind: 'OBJECT'; name: 'PermissionGroupError'; fields: { 'channels': { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PermissionGroupErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'permissions': { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PermissionEnum'; ofType: null; }; }; } }; 'users': { name: 'users'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'PermissionGroupErrorCode': { name: 'PermissionGroupErrorCode'; enumValues: 'REQUIRED' | 'UNIQUE' | 'ASSIGN_NON_STAFF_MEMBER' | 'DUPLICATED_INPUT_ITEM' | 'CANNOT_REMOVE_FROM_LAST_GROUP' | 'LEFT_NOT_MANAGEABLE_PERMISSION' | 'OUT_OF_SCOPE_PERMISSION' | 'OUT_OF_SCOPE_USER' | 'OUT_OF_SCOPE_CHANNEL'; };
    'PermissionGroupFilterInput': { kind: 'INPUT_OBJECT'; name: 'PermissionGroupFilterInput'; isOneOf: false; inputFields: [{ name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'PermissionGroupSortField': { name: 'PermissionGroupSortField'; enumValues: 'NAME'; };
    'PermissionGroupSortingInput': { kind: 'INPUT_OBJECT'; name: 'PermissionGroupSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PermissionGroupSortField'; ofType: null; }; }; defaultValue: null }]; };
    'PermissionGroupUpdate': { kind: 'OBJECT'; name: 'PermissionGroupUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PermissionGroupError'; ofType: null; }; }; }; } }; 'group': { name: 'group'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'permissionGroupErrors': { name: 'permissionGroupErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PermissionGroupError'; ofType: null; }; }; }; } }; }; };
    'PermissionGroupUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PermissionGroupUpdateInput'; isOneOf: false; inputFields: [{ name: 'addPermissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PermissionEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'addUsers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'addChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'removePermissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PermissionEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeUsers'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'restrictedAccessToChannels'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'PermissionGroupUpdated': { kind: 'OBJECT'; name: 'PermissionGroupUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'permissionGroup': { name: 'permissionGroup'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Plugin': { kind: 'OBJECT'; name: 'Plugin'; fields: { 'channelConfigurations': { name: 'channelConfigurations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PluginConfiguration'; ofType: null; }; }; }; } }; 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'globalConfiguration': { name: 'globalConfiguration'; type: { kind: 'OBJECT'; name: 'PluginConfiguration'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'PluginConfiguration': { kind: 'OBJECT'; name: 'PluginConfiguration'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'configuration': { name: 'configuration'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ConfigurationItem'; ofType: null; }; }; } }; }; };
    'PluginConfigurationType': { name: 'PluginConfigurationType'; enumValues: 'PER_CHANNEL' | 'GLOBAL'; };
    'PluginCountableConnection': { kind: 'OBJECT'; name: 'PluginCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PluginCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'PluginCountableEdge': { kind: 'OBJECT'; name: 'PluginCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Plugin'; ofType: null; }; } }; }; };
    'PluginError': { kind: 'OBJECT'; name: 'PluginError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PluginErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PluginErrorCode': { name: 'PluginErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'PLUGIN_MISCONFIGURED' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE'; };
    'PluginFilterInput': { kind: 'INPUT_OBJECT'; name: 'PluginFilterInput'; isOneOf: false; inputFields: [{ name: 'statusInChannels'; type: { kind: 'INPUT_OBJECT'; name: 'PluginStatusInChannelsInput'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'ENUM'; name: 'PluginConfigurationType'; ofType: null; }; defaultValue: null }]; };
    'PluginSortField': { name: 'PluginSortField'; enumValues: 'NAME' | 'IS_ACTIVE'; };
    'PluginSortingInput': { kind: 'INPUT_OBJECT'; name: 'PluginSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PluginSortField'; ofType: null; }; }; defaultValue: null }]; };
    'PluginStatusInChannelsInput': { kind: 'INPUT_OBJECT'; name: 'PluginStatusInChannelsInput'; isOneOf: false; inputFields: [{ name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'channels'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'PluginUpdate': { kind: 'OBJECT'; name: 'PluginUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PluginError'; ofType: null; }; }; }; } }; 'plugin': { name: 'plugin'; type: { kind: 'OBJECT'; name: 'Plugin'; ofType: null; } }; 'pluginsErrors': { name: 'pluginsErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PluginError'; ofType: null; }; }; }; } }; }; };
    'PluginUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PluginUpdateInput'; isOneOf: false; inputFields: [{ name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'configuration'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ConfigurationItemInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'PositiveDecimal': unknown;
    'PostalCodeRuleInclusionTypeEnum': { name: 'PostalCodeRuleInclusionTypeEnum'; enumValues: 'INCLUDE' | 'EXCLUDE'; };
    'PreorderData': { kind: 'OBJECT'; name: 'PreorderData'; fields: { 'endDate': { name: 'endDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'globalSoldUnits': { name: 'globalSoldUnits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'globalThreshold': { name: 'globalThreshold'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'PreorderSettingsInput': { kind: 'INPUT_OBJECT'; name: 'PreorderSettingsInput'; isOneOf: false; inputFields: [{ name: 'globalThreshold'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'endDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'PreorderThreshold': { kind: 'OBJECT'; name: 'PreorderThreshold'; fields: { 'quantity': { name: 'quantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'soldUnits': { name: 'soldUnits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; }; };
    'PriceInput': { kind: 'INPUT_OBJECT'; name: 'PriceInput'; isOneOf: false; inputFields: [{ name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; }; defaultValue: null }]; };
    'PriceRangeInput': { kind: 'INPUT_OBJECT'; name: 'PriceRangeInput'; isOneOf: false; inputFields: [{ name: 'gte'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'lte'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'Product': { kind: 'OBJECT'; name: 'Product'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'SelectedAttribute'; ofType: null; } }; 'attributes': { name: 'attributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SelectedAttribute'; ofType: null; }; }; }; } }; 'availableForPurchase': { name: 'availableForPurchase'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'availableForPurchaseAt': { name: 'availableForPurchaseAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'channel': { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'channelListings': { name: 'channelListings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductChannelListing'; ofType: null; }; }; } }; 'chargeTaxes': { name: 'chargeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'collections': { name: 'collections'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Collection'; ofType: null; }; }; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'defaultVariant': { name: 'defaultVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'descriptionJson': { name: 'descriptionJson'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'externalReference': { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'imageById': { name: 'imageById'; type: { kind: 'OBJECT'; name: 'ProductImage'; ofType: null; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductImage'; ofType: null; }; }; } }; 'isAvailable': { name: 'isAvailable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'isAvailableForPurchase': { name: 'isAvailableForPurchase'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'media': { name: 'media'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductMedia'; ofType: null; }; }; } }; 'mediaById': { name: 'mediaById'; type: { kind: 'OBJECT'; name: 'ProductMedia'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'pricing': { name: 'pricing'; type: { kind: 'OBJECT'; name: 'ProductPricingInfo'; ofType: null; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'productType': { name: 'productType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductType'; ofType: null; }; } }; 'rating': { name: 'rating'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'seoDescription': { name: 'seoDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoTitle': { name: 'seoTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'taxClass': { name: 'taxClass'; type: { kind: 'OBJECT'; name: 'TaxClass'; ofType: null; } }; 'taxType': { name: 'taxType'; type: { kind: 'OBJECT'; name: 'TaxType'; ofType: null; } }; 'thumbnail': { name: 'thumbnail'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'ProductTranslation'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'variants': { name: 'variants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; }; } }; 'weight': { name: 'weight'; type: { kind: 'OBJECT'; name: 'Weight'; ofType: null; } }; }; };
    'ProductAttributeAssign': { kind: 'OBJECT'; name: 'ProductAttributeAssign'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productType': { name: 'productType'; type: { kind: 'OBJECT'; name: 'ProductType'; ofType: null; } }; }; };
    'ProductAttributeAssignInput': { kind: 'INPUT_OBJECT'; name: 'ProductAttributeAssignInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductAttributeType'; ofType: null; }; }; defaultValue: null }, { name: 'variantSelection'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'ProductAttributeAssignmentUpdate': { kind: 'OBJECT'; name: 'ProductAttributeAssignmentUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productType': { name: 'productType'; type: { kind: 'OBJECT'; name: 'ProductType'; ofType: null; } }; }; };
    'ProductAttributeAssignmentUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ProductAttributeAssignmentUpdateInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'variantSelection'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }]; };
    'ProductAttributeType': { name: 'ProductAttributeType'; enumValues: 'PRODUCT' | 'VARIANT'; };
    'ProductAttributeUnassign': { kind: 'OBJECT'; name: 'ProductAttributeUnassign'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productType': { name: 'productType'; type: { kind: 'OBJECT'; name: 'ProductType'; ofType: null; } }; }; };
    'ProductBulkCreate': { kind: 'OBJECT'; name: 'ProductBulkCreate'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductBulkCreateError'; ofType: null; }; }; }; } }; 'results': { name: 'results'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductBulkResult'; ofType: null; }; }; }; } }; }; };
    'ProductBulkCreateError': { kind: 'OBJECT'; name: 'ProductBulkCreateError'; fields: { 'attributes': { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'channels': { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductBulkCreateErrorCode'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'values': { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'warehouses': { name: 'warehouses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'ProductBulkCreateErrorCode': { name: 'ProductBulkCreateErrorCode'; enumValues: 'ATTRIBUTE_ALREADY_ASSIGNED' | 'ATTRIBUTE_CANNOT_BE_ASSIGNED' | 'ATTRIBUTE_VARIANTS_DISABLED' | 'BLANK' | 'MAX_LENGTH' | 'DUPLICATED_INPUT_ITEM' | 'GRAPHQL_ERROR' | 'INVALID' | 'INVALID_PRICE' | 'PRODUCT_WITHOUT_CATEGORY' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE' | 'PRODUCT_NOT_ASSIGNED_TO_CHANNEL' | 'UNSUPPORTED_MEDIA_PROVIDER'; };
    'ProductBulkCreateInput': { kind: 'INPUT_OBJECT'; name: 'ProductBulkCreateInput'; isOneOf: false; inputFields: [{ name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeValueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'category'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'chargeTaxes'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'collections'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'taxClass'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'taxCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'seo'; type: { kind: 'INPUT_OBJECT'; name: 'SeoInput'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'WeightScalar'; ofType: null; }; defaultValue: null }, { name: 'rating'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'productType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'media'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MediaInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'channelListings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductChannelListingCreateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'variants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductVariantBulkCreateInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'ProductBulkDelete': { kind: 'OBJECT'; name: 'ProductBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'ProductBulkResult': { kind: 'OBJECT'; name: 'ProductBulkResult'; fields: { 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductBulkCreateError'; ofType: null; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; }; };
    'ProductBulkTranslate': { kind: 'OBJECT'; name: 'ProductBulkTranslate'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductBulkTranslateError'; ofType: null; }; }; }; } }; 'results': { name: 'results'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductBulkTranslateResult'; ofType: null; }; }; }; } }; }; };
    'ProductBulkTranslateError': { kind: 'OBJECT'; name: 'ProductBulkTranslateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductTranslateErrorCode'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProductBulkTranslateInput': { kind: 'INPUT_OBJECT'; name: 'ProductBulkTranslateInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'languageCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LanguageCodeEnum'; ofType: null; }; }; defaultValue: null }, { name: 'translationFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TranslationInput'; ofType: null; }; }; defaultValue: null }]; };
    'ProductBulkTranslateResult': { kind: 'OBJECT'; name: 'ProductBulkTranslateResult'; fields: { 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductBulkTranslateError'; ofType: null; }; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'ProductTranslation'; ofType: null; } }; }; };
    'ProductChannelListing': { kind: 'OBJECT'; name: 'ProductChannelListing'; fields: { 'availableForPurchase': { name: 'availableForPurchase'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'availableForPurchaseAt': { name: 'availableForPurchaseAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'discountedPrice': { name: 'discountedPrice'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isAvailableForPurchase': { name: 'isAvailableForPurchase'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'isPublished': { name: 'isPublished'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'margin': { name: 'margin'; type: { kind: 'OBJECT'; name: 'Margin'; ofType: null; } }; 'pricing': { name: 'pricing'; type: { kind: 'OBJECT'; name: 'ProductPricingInfo'; ofType: null; } }; 'publicationDate': { name: 'publicationDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; } }; 'publishedAt': { name: 'publishedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'purchaseCost': { name: 'purchaseCost'; type: { kind: 'OBJECT'; name: 'MoneyRange'; ofType: null; } }; 'visibleInListings': { name: 'visibleInListings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; }; };
    'ProductChannelListingAddInput': { kind: 'INPUT_OBJECT'; name: 'ProductChannelListingAddInput'; isOneOf: false; inputFields: [{ name: 'channelId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'isPublished'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'publicationDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'publishedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'visibleInListings'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'isAvailableForPurchase'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'availableForPurchaseDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'availableForPurchaseAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'addVariants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeVariants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'ProductChannelListingCreateInput': { kind: 'INPUT_OBJECT'; name: 'ProductChannelListingCreateInput'; isOneOf: false; inputFields: [{ name: 'channelId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'isPublished'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'publishedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'visibleInListings'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'isAvailableForPurchase'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'availableForPurchaseAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'ProductChannelListingError': { kind: 'OBJECT'; name: 'ProductChannelListingError'; fields: { 'attributes': { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'channels': { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'values': { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'variants': { name: 'variants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'ProductChannelListingUpdate': { kind: 'OBJECT'; name: 'ProductChannelListingUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductChannelListingError'; ofType: null; }; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productChannelListingErrors': { name: 'productChannelListingErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductChannelListingError'; ofType: null; }; }; }; } }; }; };
    'ProductChannelListingUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ProductChannelListingUpdateInput'; isOneOf: false; inputFields: [{ name: 'updateChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductChannelListingAddInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'ProductCountableConnection': { kind: 'OBJECT'; name: 'ProductCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ProductCountableEdge': { kind: 'OBJECT'; name: 'ProductCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; } }; }; };
    'ProductCreate': { kind: 'OBJECT'; name: 'ProductCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'ProductCreateInput': { kind: 'INPUT_OBJECT'; name: 'ProductCreateInput'; isOneOf: false; inputFields: [{ name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeValueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'category'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'chargeTaxes'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'collections'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'taxClass'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'taxCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'seo'; type: { kind: 'INPUT_OBJECT'; name: 'SeoInput'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'WeightScalar'; ofType: null; }; defaultValue: null }, { name: 'rating'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'productType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ProductCreated': { kind: 'OBJECT'; name: 'ProductCreated'; fields: { 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProductDelete': { kind: 'OBJECT'; name: 'ProductDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'ProductDeleted': { kind: 'OBJECT'; name: 'ProductDeleted'; fields: { 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProductError': { kind: 'OBJECT'; name: 'ProductError'; fields: { 'attributes': { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'values': { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'ProductErrorCode': { name: 'ProductErrorCode'; enumValues: 'ALREADY_EXISTS' | 'ATTRIBUTE_ALREADY_ASSIGNED' | 'ATTRIBUTE_CANNOT_BE_ASSIGNED' | 'ATTRIBUTE_VARIANTS_DISABLED' | 'MEDIA_ALREADY_ASSIGNED' | 'DUPLICATED_INPUT_ITEM' | 'GRAPHQL_ERROR' | 'INVALID' | 'INVALID_PRICE' | 'PRODUCT_WITHOUT_CATEGORY' | 'NOT_PRODUCTS_IMAGE' | 'NOT_PRODUCTS_VARIANT' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE' | 'VARIANT_NO_DIGITAL_CONTENT' | 'CANNOT_MANAGE_PRODUCT_WITHOUT_VARIANT' | 'PRODUCT_NOT_ASSIGNED_TO_CHANNEL' | 'UNSUPPORTED_MEDIA_PROVIDER' | 'PREORDER_VARIANT_CANNOT_BE_DEACTIVATED'; };
    'ProductExportCompleted': { kind: 'OBJECT'; name: 'ProductExportCompleted'; fields: { 'export': { name: 'export'; type: { kind: 'OBJECT'; name: 'ExportFile'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProductFieldEnum': { name: 'ProductFieldEnum'; enumValues: 'NAME' | 'DESCRIPTION' | 'PRODUCT_TYPE' | 'CATEGORY' | 'PRODUCT_WEIGHT' | 'COLLECTIONS' | 'CHARGE_TAXES' | 'PRODUCT_MEDIA' | 'VARIANT_ID' | 'VARIANT_SKU' | 'VARIANT_WEIGHT' | 'VARIANT_MEDIA'; };
    'ProductFilterInput': { kind: 'INPUT_OBJECT'; name: 'ProductFilterInput'; isOneOf: false; inputFields: [{ name: 'isPublished'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'collections'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'categories'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'hasCategory'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'stockAvailability'; type: { kind: 'ENUM'; name: 'StockAvailability'; ofType: null; }; defaultValue: null }, { name: 'stocks'; type: { kind: 'INPUT_OBJECT'; name: 'ProductStockFilterInput'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'publishedFrom'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'isAvailable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'availableFrom'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'isVisibleInListing'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'price'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRangeInput'; ofType: null; }; defaultValue: null }, { name: 'minimalPrice'; type: { kind: 'INPUT_OBJECT'; name: 'PriceRangeInput'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeRangeInput'; ofType: null; }; defaultValue: null }, { name: 'productTypes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'giftCard'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'hasPreorderedVariants'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'slugs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ProductImage': { kind: 'OBJECT'; name: 'ProductImage'; fields: { 'alt': { name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'sortOrder': { name: 'sortOrder'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductInput': { kind: 'INPUT_OBJECT'; name: 'ProductInput'; isOneOf: false; inputFields: [{ name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeValueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'category'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'chargeTaxes'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'collections'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'taxClass'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'taxCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'seo'; type: { kind: 'INPUT_OBJECT'; name: 'SeoInput'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'WeightScalar'; ofType: null; }; defaultValue: null }, { name: 'rating'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ProductMedia': { kind: 'OBJECT'; name: 'ProductMedia'; fields: { 'alt': { name: 'alt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'oembedData': { name: 'oembedData'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'productId': { name: 'productId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'sortOrder': { name: 'sortOrder'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductMediaType'; ofType: null; }; } }; 'url': { name: 'url'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ProductMediaBulkDelete': { kind: 'OBJECT'; name: 'ProductMediaBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'ProductMediaCreate': { kind: 'OBJECT'; name: 'ProductMediaCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'media': { name: 'media'; type: { kind: 'OBJECT'; name: 'ProductMedia'; ofType: null; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'ProductMediaCreateInput': { kind: 'INPUT_OBJECT'; name: 'ProductMediaCreateInput'; isOneOf: false; inputFields: [{ name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'image'; type: { kind: 'SCALAR'; name: 'Upload'; ofType: null; }; defaultValue: null }, { name: 'product'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'mediaUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ProductMediaCreated': { kind: 'OBJECT'; name: 'ProductMediaCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'productMedia': { name: 'productMedia'; type: { kind: 'OBJECT'; name: 'ProductMedia'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProductMediaDelete': { kind: 'OBJECT'; name: 'ProductMediaDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'media': { name: 'media'; type: { kind: 'OBJECT'; name: 'ProductMedia'; ofType: null; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'ProductMediaDeleted': { kind: 'OBJECT'; name: 'ProductMediaDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'productMedia': { name: 'productMedia'; type: { kind: 'OBJECT'; name: 'ProductMedia'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProductMediaReorder': { kind: 'OBJECT'; name: 'ProductMediaReorder'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'media': { name: 'media'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductMedia'; ofType: null; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'ProductMediaType': { name: 'ProductMediaType'; enumValues: 'IMAGE' | 'VIDEO'; };
    'ProductMediaUpdate': { kind: 'OBJECT'; name: 'ProductMediaUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'media': { name: 'media'; type: { kind: 'OBJECT'; name: 'ProductMedia'; ofType: null; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'ProductMediaUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ProductMediaUpdateInput'; isOneOf: false; inputFields: [{ name: 'alt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ProductMediaUpdated': { kind: 'OBJECT'; name: 'ProductMediaUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'productMedia': { name: 'productMedia'; type: { kind: 'OBJECT'; name: 'ProductMedia'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProductMetadataUpdated': { kind: 'OBJECT'; name: 'ProductMetadataUpdated'; fields: { 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProductOrder': { kind: 'INPUT_OBJECT'; name: 'ProductOrder'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'attributeId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'field'; type: { kind: 'ENUM'; name: 'ProductOrderField'; ofType: null; }; defaultValue: null }]; };
    'ProductOrderField': { name: 'ProductOrderField'; enumValues: 'NAME' | 'RANK' | 'PRICE' | 'MINIMAL_PRICE' | 'LAST_MODIFIED' | 'DATE' | 'TYPE' | 'PUBLISHED' | 'PUBLICATION_DATE' | 'PUBLISHED_AT' | 'LAST_MODIFIED_AT' | 'COLLECTION' | 'RATING' | 'CREATED_AT'; };
    'ProductPricingInfo': { kind: 'OBJECT'; name: 'ProductPricingInfo'; fields: { 'discount': { name: 'discount'; type: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; } }; 'discountLocalCurrency': { name: 'discountLocalCurrency'; type: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; } }; 'displayGrossPrices': { name: 'displayGrossPrices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'onSale': { name: 'onSale'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'priceRange': { name: 'priceRange'; type: { kind: 'OBJECT'; name: 'TaxedMoneyRange'; ofType: null; } }; 'priceRangeLocalCurrency': { name: 'priceRangeLocalCurrency'; type: { kind: 'OBJECT'; name: 'TaxedMoneyRange'; ofType: null; } }; 'priceRangeUndiscounted': { name: 'priceRangeUndiscounted'; type: { kind: 'OBJECT'; name: 'TaxedMoneyRange'; ofType: null; } }; }; };
    'ProductReorderAttributeValues': { kind: 'OBJECT'; name: 'ProductReorderAttributeValues'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'ProductStockFilterInput': { kind: 'INPUT_OBJECT'; name: 'ProductStockFilterInput'; isOneOf: false; inputFields: [{ name: 'warehouseIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'INPUT_OBJECT'; name: 'IntRangeInput'; ofType: null; }; defaultValue: null }]; };
    'ProductTranslatableContent': { kind: 'OBJECT'; name: 'ProductTranslatableContent'; fields: { 'attributeValues': { name: 'attributeValues'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeValueTranslatableContent'; ofType: null; }; }; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'descriptionJson': { name: 'descriptionJson'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productId': { name: 'productId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'seoDescription': { name: 'seoDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoTitle': { name: 'seoTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'ProductTranslation'; ofType: null; } }; }; };
    'ProductTranslate': { kind: 'OBJECT'; name: 'ProductTranslate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'translationErrors': { name: 'translationErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; }; };
    'ProductTranslateErrorCode': { name: 'ProductTranslateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED'; };
    'ProductTranslation': { kind: 'OBJECT'; name: 'ProductTranslation'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'descriptionJson': { name: 'descriptionJson'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoDescription': { name: 'seoDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'seoTitle': { name: 'seoTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translatableContent': { name: 'translatableContent'; type: { kind: 'OBJECT'; name: 'ProductTranslatableContent'; ofType: null; } }; }; };
    'ProductType': { kind: 'OBJECT'; name: 'ProductType'; fields: { 'assignedVariantAttributes': { name: 'assignedVariantAttributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AssignedVariantAttribute'; ofType: null; }; }; } }; 'availableAttributes': { name: 'availableAttributes'; type: { kind: 'OBJECT'; name: 'AttributeCountableConnection'; ofType: null; } }; 'hasVariants': { name: 'hasVariants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isDigital': { name: 'isDigital'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isShippingRequired': { name: 'isShippingRequired'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'kind': { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductTypeKindEnum'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'productAttributes': { name: 'productAttributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; } }; 'products': { name: 'products'; type: { kind: 'OBJECT'; name: 'ProductCountableConnection'; ofType: null; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'taxClass': { name: 'taxClass'; type: { kind: 'OBJECT'; name: 'TaxClass'; ofType: null; } }; 'taxType': { name: 'taxType'; type: { kind: 'OBJECT'; name: 'TaxType'; ofType: null; } }; 'variantAttributes': { name: 'variantAttributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; }; } }; 'weight': { name: 'weight'; type: { kind: 'OBJECT'; name: 'Weight'; ofType: null; } }; }; };
    'ProductTypeBulkDelete': { kind: 'OBJECT'; name: 'ProductTypeBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'ProductTypeConfigurable': { name: 'ProductTypeConfigurable'; enumValues: 'CONFIGURABLE' | 'SIMPLE'; };
    'ProductTypeCountableConnection': { kind: 'OBJECT'; name: 'ProductTypeCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductTypeCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ProductTypeCountableEdge': { kind: 'OBJECT'; name: 'ProductTypeCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductType'; ofType: null; }; } }; }; };
    'ProductTypeCreate': { kind: 'OBJECT'; name: 'ProductTypeCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productType': { name: 'productType'; type: { kind: 'OBJECT'; name: 'ProductType'; ofType: null; } }; }; };
    'ProductTypeDelete': { kind: 'OBJECT'; name: 'ProductTypeDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productType': { name: 'productType'; type: { kind: 'OBJECT'; name: 'ProductType'; ofType: null; } }; }; };
    'ProductTypeEnum': { name: 'ProductTypeEnum'; enumValues: 'DIGITAL' | 'SHIPPABLE'; };
    'ProductTypeFilterInput': { kind: 'INPUT_OBJECT'; name: 'ProductTypeFilterInput'; isOneOf: false; inputFields: [{ name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'configurable'; type: { kind: 'ENUM'; name: 'ProductTypeConfigurable'; ofType: null; }; defaultValue: null }, { name: 'productType'; type: { kind: 'ENUM'; name: 'ProductTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'kind'; type: { kind: 'ENUM'; name: 'ProductTypeKindEnum'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'slugs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'ProductTypeInput': { kind: 'INPUT_OBJECT'; name: 'ProductTypeInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'kind'; type: { kind: 'ENUM'; name: 'ProductTypeKindEnum'; ofType: null; }; defaultValue: null }, { name: 'hasVariants'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'productAttributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'variantAttributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'isShippingRequired'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'isDigital'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'WeightScalar'; ofType: null; }; defaultValue: null }, { name: 'taxCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'taxClass'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'ProductTypeKindEnum': { name: 'ProductTypeKindEnum'; enumValues: 'NORMAL' | 'GIFT_CARD'; };
    'ProductTypeReorderAttributes': { kind: 'OBJECT'; name: 'ProductTypeReorderAttributes'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productType': { name: 'productType'; type: { kind: 'OBJECT'; name: 'ProductType'; ofType: null; } }; }; };
    'ProductTypeSortField': { name: 'ProductTypeSortField'; enumValues: 'NAME' | 'DIGITAL' | 'SHIPPING_REQUIRED'; };
    'ProductTypeSortingInput': { kind: 'INPUT_OBJECT'; name: 'ProductTypeSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductTypeSortField'; ofType: null; }; }; defaultValue: null }]; };
    'ProductTypeUpdate': { kind: 'OBJECT'; name: 'ProductTypeUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productType': { name: 'productType'; type: { kind: 'OBJECT'; name: 'ProductType'; ofType: null; } }; }; };
    'ProductUpdate': { kind: 'OBJECT'; name: 'ProductUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'ProductUpdated': { kind: 'OBJECT'; name: 'ProductUpdated'; fields: { 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProductVariant': { kind: 'OBJECT'; name: 'ProductVariant'; fields: { 'attributes': { name: 'attributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SelectedAttribute'; ofType: null; }; }; }; } }; 'channel': { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'channelListings': { name: 'channelListings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantChannelListing'; ofType: null; }; }; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'digitalContent': { name: 'digitalContent'; type: { kind: 'OBJECT'; name: 'DigitalContent'; ofType: null; } }; 'externalReference': { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'images': { name: 'images'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductImage'; ofType: null; }; }; } }; 'margin': { name: 'margin'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'media': { name: 'media'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductMedia'; ofType: null; }; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'preorder': { name: 'preorder'; type: { kind: 'OBJECT'; name: 'PreorderData'; ofType: null; } }; 'pricing': { name: 'pricing'; type: { kind: 'OBJECT'; name: 'VariantPricingInfo'; ofType: null; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'product': { name: 'product'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Product'; ofType: null; }; } }; 'quantityAvailable': { name: 'quantityAvailable'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'quantityLimitPerCustomer': { name: 'quantityLimitPerCustomer'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'quantityOrdered': { name: 'quantityOrdered'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'revenue': { name: 'revenue'; type: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; } }; 'sku': { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'stocks': { name: 'stocks'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Stock'; ofType: null; }; }; } }; 'trackInventory': { name: 'trackInventory'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'ProductVariantTranslation'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'weight': { name: 'weight'; type: { kind: 'OBJECT'; name: 'Weight'; ofType: null; } }; }; };
    'ProductVariantBackInStock': { kind: 'OBJECT'; name: 'ProductVariantBackInStock'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; }; };
    'ProductVariantBulkCreate': { kind: 'OBJECT'; name: 'ProductVariantBulkCreate'; fields: { 'bulkProductErrors': { name: 'bulkProductErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BulkProductError'; ofType: null; }; }; }; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BulkProductError'; ofType: null; }; }; }; } }; 'productVariants': { name: 'productVariants'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; }; }; } }; 'results': { name: 'results'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantBulkResult'; ofType: null; }; }; }; } }; }; };
    'ProductVariantBulkCreateInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantBulkCreateInput'; isOneOf: false; inputFields: [{ name: 'attributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'BulkAttributeValueInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'trackInventory'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'WeightScalar'; ofType: null; }; defaultValue: null }, { name: 'preorder'; type: { kind: 'INPUT_OBJECT'; name: 'PreorderSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'quantityLimitPerCustomer'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'stocks'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'StockInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'channelListings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductVariantChannelListingAddInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'ProductVariantBulkDelete': { kind: 'OBJECT'; name: 'ProductVariantBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantBulkError': { kind: 'OBJECT'; name: 'ProductVariantBulkError'; fields: { 'attributes': { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'channelListings': { name: 'channelListings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'channels': { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductVariantBulkErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'stocks': { name: 'stocks'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'values': { name: 'values'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'warehouses': { name: 'warehouses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'ProductVariantBulkErrorCode': { name: 'ProductVariantBulkErrorCode'; enumValues: 'ATTRIBUTE_ALREADY_ASSIGNED' | 'ATTRIBUTE_CANNOT_BE_ASSIGNED' | 'ATTRIBUTE_VARIANTS_DISABLED' | 'DUPLICATED_INPUT_ITEM' | 'GRAPHQL_ERROR' | 'INVALID' | 'INVALID_PRICE' | 'NOT_PRODUCTS_VARIANT' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE' | 'PRODUCT_NOT_ASSIGNED_TO_CHANNEL' | 'STOCK_ALREADY_EXISTS'; };
    'ProductVariantBulkResult': { kind: 'OBJECT'; name: 'ProductVariantBulkResult'; fields: { 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantBulkError'; ofType: null; }; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'ProductVariantBulkTranslate': { kind: 'OBJECT'; name: 'ProductVariantBulkTranslate'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantBulkTranslateError'; ofType: null; }; }; }; } }; 'results': { name: 'results'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantBulkTranslateResult'; ofType: null; }; }; }; } }; }; };
    'ProductVariantBulkTranslateError': { kind: 'OBJECT'; name: 'ProductVariantBulkTranslateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductVariantTranslateErrorCode'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProductVariantBulkTranslateInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantBulkTranslateInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'languageCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LanguageCodeEnum'; ofType: null; }; }; defaultValue: null }, { name: 'translationFields'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'NameTranslationInput'; ofType: null; }; }; defaultValue: null }]; };
    'ProductVariantBulkTranslateResult': { kind: 'OBJECT'; name: 'ProductVariantBulkTranslateResult'; fields: { 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantBulkTranslateError'; ofType: null; }; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'ProductVariantTranslation'; ofType: null; } }; }; };
    'ProductVariantBulkUpdate': { kind: 'OBJECT'; name: 'ProductVariantBulkUpdate'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantBulkError'; ofType: null; }; }; }; } }; 'results': { name: 'results'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantBulkResult'; ofType: null; }; }; }; } }; }; };
    'ProductVariantBulkUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantBulkUpdateInput'; isOneOf: false; inputFields: [{ name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'BulkAttributeValueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'trackInventory'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'WeightScalar'; ofType: null; }; defaultValue: null }, { name: 'preorder'; type: { kind: 'INPUT_OBJECT'; name: 'PreorderSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'quantityLimitPerCustomer'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'stocks'; type: { kind: 'INPUT_OBJECT'; name: 'ProductVariantStocksUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'channelListings'; type: { kind: 'INPUT_OBJECT'; name: 'ProductVariantChannelListingUpdateInput'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'ProductVariantChannelListing': { kind: 'OBJECT'; name: 'ProductVariantChannelListing'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'costPrice': { name: 'costPrice'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'margin': { name: 'margin'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'preorderThreshold': { name: 'preorderThreshold'; type: { kind: 'OBJECT'; name: 'PreorderThreshold'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; }; };
    'ProductVariantChannelListingAddInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantChannelListingAddInput'; isOneOf: false; inputFields: [{ name: 'channelId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; }; defaultValue: null }, { name: 'costPrice'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'preorderThreshold'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'ProductVariantChannelListingUpdate': { kind: 'OBJECT'; name: 'ProductVariantChannelListingUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductChannelListingError'; ofType: null; }; }; }; } }; 'productChannelListingErrors': { name: 'productChannelListingErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductChannelListingError'; ofType: null; }; }; }; } }; 'variant': { name: 'variant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'ProductVariantChannelListingUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantChannelListingUpdateInput'; isOneOf: false; inputFields: [{ name: 'create'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductVariantChannelListingAddInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'update'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ChannelListingUpdateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'remove'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'ProductVariantCountableConnection': { kind: 'OBJECT'; name: 'ProductVariantCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariantCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ProductVariantCountableEdge': { kind: 'OBJECT'; name: 'ProductVariantCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; } }; }; };
    'ProductVariantCreate': { kind: 'OBJECT'; name: 'ProductVariantCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'ProductVariantCreateInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantCreateInput'; isOneOf: false; inputFields: [{ name: 'attributes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeValueInput'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'trackInventory'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'WeightScalar'; ofType: null; }; defaultValue: null }, { name: 'preorder'; type: { kind: 'INPUT_OBJECT'; name: 'PreorderSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'quantityLimitPerCustomer'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'product'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'stocks'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'StockInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'ProductVariantCreated': { kind: 'OBJECT'; name: 'ProductVariantCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProductVariantDelete': { kind: 'OBJECT'; name: 'ProductVariantDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'ProductVariantDeleted': { kind: 'OBJECT'; name: 'ProductVariantDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProductVariantFilterInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantFilterInput'; isOneOf: false; inputFields: [{ name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'sku'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'isPreorder'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeRangeInput'; ofType: null; }; defaultValue: null }]; };
    'ProductVariantInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantInput'; isOneOf: false; inputFields: [{ name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeValueInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'sku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'trackInventory'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'weight'; type: { kind: 'SCALAR'; name: 'WeightScalar'; ofType: null; }; defaultValue: null }, { name: 'preorder'; type: { kind: 'INPUT_OBJECT'; name: 'PreorderSettingsInput'; ofType: null; }; defaultValue: null }, { name: 'quantityLimitPerCustomer'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ProductVariantMetadataUpdated': { kind: 'OBJECT'; name: 'ProductVariantMetadataUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProductVariantOutOfStock': { kind: 'OBJECT'; name: 'ProductVariantOutOfStock'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; }; };
    'ProductVariantPreorderDeactivate': { kind: 'OBJECT'; name: 'ProductVariantPreorderDeactivate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'ProductVariantReorder': { kind: 'OBJECT'; name: 'ProductVariantReorder'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantReorderAttributeValues': { kind: 'OBJECT'; name: 'ProductVariantReorderAttributeValues'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'ProductVariantSetDefault': { kind: 'OBJECT'; name: 'ProductVariantSetDefault'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantSortField': { name: 'ProductVariantSortField'; enumValues: 'LAST_MODIFIED_AT'; };
    'ProductVariantSortingInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ProductVariantSortField'; ofType: null; }; }; defaultValue: null }]; };
    'ProductVariantStockUpdated': { kind: 'OBJECT'; name: 'ProductVariantStockUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; }; };
    'ProductVariantStocksCreate': { kind: 'OBJECT'; name: 'ProductVariantStocksCreate'; fields: { 'bulkStockErrors': { name: 'bulkStockErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BulkStockError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BulkStockError'; ofType: null; }; }; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'ProductVariantStocksDelete': { kind: 'OBJECT'; name: 'ProductVariantStocksDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StockError'; ofType: null; }; }; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'stockErrors': { name: 'stockErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StockError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantStocksUpdate': { kind: 'OBJECT'; name: 'ProductVariantStocksUpdate'; fields: { 'bulkStockErrors': { name: 'bulkStockErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BulkStockError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'BulkStockError'; ofType: null; }; }; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'ProductVariantStocksUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantStocksUpdateInput'; isOneOf: false; inputFields: [{ name: 'create'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'StockInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'update'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'StockUpdateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'remove'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'ProductVariantTranslatableContent': { kind: 'OBJECT'; name: 'ProductVariantTranslatableContent'; fields: { 'attributeValues': { name: 'attributeValues'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeValueTranslatableContent'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'productVariantId': { name: 'productVariantId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'ProductVariantTranslation'; ofType: null; } }; }; };
    'ProductVariantTranslate': { kind: 'OBJECT'; name: 'ProductVariantTranslate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'translationErrors': { name: 'translationErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; }; };
    'ProductVariantTranslateErrorCode': { name: 'ProductVariantTranslateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED'; };
    'ProductVariantTranslation': { kind: 'OBJECT'; name: 'ProductVariantTranslation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'translatableContent': { name: 'translatableContent'; type: { kind: 'OBJECT'; name: 'ProductVariantTranslatableContent'; ofType: null; } }; }; };
    'ProductVariantUpdate': { kind: 'OBJECT'; name: 'ProductVariantUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'ProductVariantUpdated': { kind: 'OBJECT'; name: 'ProductVariantUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ProductVariantWhereInput': { kind: 'INPUT_OBJECT'; name: 'ProductVariantWhereInput'; isOneOf: false; inputFields: [{ name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductVariantWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductVariantWhereInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'ProductWhereInput': { kind: 'INPUT_OBJECT'; name: 'ProductWhereInput'; isOneOf: false; inputFields: [{ name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilterInput'; ofType: null; }; defaultValue: null }, { name: 'slug'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilterInput'; ofType: null; }; defaultValue: null }, { name: 'productType'; type: { kind: 'INPUT_OBJECT'; name: 'GlobalIDFilterInput'; ofType: null; }; defaultValue: null }, { name: 'category'; type: { kind: 'INPUT_OBJECT'; name: 'GlobalIDFilterInput'; ofType: null; }; defaultValue: null }, { name: 'collection'; type: { kind: 'INPUT_OBJECT'; name: 'GlobalIDFilterInput'; ofType: null; }; defaultValue: null }, { name: 'isAvailable'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'isPublished'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'isVisibleInListing'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'publishedFrom'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'availableFrom'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'hasCategory'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'price'; type: { kind: 'INPUT_OBJECT'; name: 'DecimalFilterInput'; ofType: null; }; defaultValue: null }, { name: 'minimalPrice'; type: { kind: 'INPUT_OBJECT'; name: 'DecimalFilterInput'; ofType: null; }; defaultValue: null }, { name: 'attributes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AttributeInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'stockAvailability'; type: { kind: 'ENUM'; name: 'StockAvailability'; ofType: null; }; defaultValue: null }, { name: 'stocks'; type: { kind: 'INPUT_OBJECT'; name: 'ProductStockFilterInput'; ofType: null; }; defaultValue: null }, { name: 'giftCard'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'hasPreorderedVariants'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeFilterInput'; ofType: null; }; defaultValue: null }, { name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ProductWhereInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'Promotion': { kind: 'OBJECT'; name: 'Promotion'; fields: { 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'endDate': { name: 'endDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'PromotionEvent'; ofType: null; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'rules': { name: 'rules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PromotionRule'; ofType: null; }; }; } }; 'startDate': { name: 'startDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'PromotionTranslation'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'PromotionTypeEnum'; ofType: null; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; }; };
    'PromotionBulkDelete': { kind: 'OBJECT'; name: 'PromotionBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; }; };
    'PromotionCountableConnection': { kind: 'OBJECT'; name: 'PromotionCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PromotionCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'PromotionCountableEdge': { kind: 'OBJECT'; name: 'PromotionCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Promotion'; ofType: null; }; } }; }; };
    'PromotionCreate': { kind: 'OBJECT'; name: 'PromotionCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PromotionCreateError'; ofType: null; }; }; }; } }; 'promotion': { name: 'promotion'; type: { kind: 'OBJECT'; name: 'Promotion'; ofType: null; } }; }; };
    'PromotionCreateError': { kind: 'OBJECT'; name: 'PromotionCreateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionCreateErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'giftsLimit': { name: 'giftsLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'giftsLimitExceedBy': { name: 'giftsLimitExceedBy'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'index': { name: 'index'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'rulesLimit': { name: 'rulesLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'rulesLimitExceedBy': { name: 'rulesLimitExceedBy'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'PromotionCreateErrorCode': { name: 'PromotionCreateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'REQUIRED' | 'INVALID' | 'MULTIPLE_CURRENCIES_NOT_ALLOWED' | 'INVALID_PRECISION' | 'MISSING_CHANNELS' | 'RULES_NUMBER_LIMIT' | 'GIFTS_NUMBER_LIMIT' | 'INVALID_GIFT_TYPE'; };
    'PromotionCreateInput': { kind: 'INPUT_OBJECT'; name: 'PromotionCreateInput'; isOneOf: false; inputFields: [{ name: 'description'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'startDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'endDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionTypeEnum'; ofType: null; }; }; defaultValue: null }, { name: 'rules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PromotionRuleInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'PromotionCreated': { kind: 'OBJECT'; name: 'PromotionCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'promotion': { name: 'promotion'; type: { kind: 'OBJECT'; name: 'Promotion'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PromotionCreatedEvent': { kind: 'OBJECT'; name: 'PromotionCreatedEvent'; fields: { 'createdBy': { name: 'createdBy'; type: { kind: 'UNION'; name: 'UserOrApp'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionEventsEnum'; ofType: null; }; } }; }; };
    'PromotionDelete': { kind: 'OBJECT'; name: 'PromotionDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PromotionDeleteError'; ofType: null; }; }; }; } }; 'promotion': { name: 'promotion'; type: { kind: 'OBJECT'; name: 'Promotion'; ofType: null; } }; }; };
    'PromotionDeleteError': { kind: 'OBJECT'; name: 'PromotionDeleteError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionDeleteErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PromotionDeleteErrorCode': { name: 'PromotionDeleteErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'NOT_FOUND'; };
    'PromotionDeleted': { kind: 'OBJECT'; name: 'PromotionDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'promotion': { name: 'promotion'; type: { kind: 'OBJECT'; name: 'Promotion'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PromotionEnded': { kind: 'OBJECT'; name: 'PromotionEnded'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'promotion': { name: 'promotion'; type: { kind: 'OBJECT'; name: 'Promotion'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PromotionEndedEvent': { kind: 'OBJECT'; name: 'PromotionEndedEvent'; fields: { 'createdBy': { name: 'createdBy'; type: { kind: 'UNION'; name: 'UserOrApp'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionEventsEnum'; ofType: null; }; } }; }; };
    'PromotionEvent': { kind: 'UNION'; name: 'PromotionEvent'; fields: {}; possibleTypes: 'PromotionCreatedEvent' | 'PromotionEndedEvent' | 'PromotionRuleCreatedEvent' | 'PromotionRuleDeletedEvent' | 'PromotionRuleUpdatedEvent' | 'PromotionStartedEvent' | 'PromotionUpdatedEvent'; };
    'PromotionEventInterface': { kind: 'INTERFACE'; name: 'PromotionEventInterface'; fields: { 'createdBy': { name: 'createdBy'; type: { kind: 'UNION'; name: 'UserOrApp'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionEventsEnum'; ofType: null; }; } }; }; possibleTypes: 'PromotionCreatedEvent' | 'PromotionEndedEvent' | 'PromotionRuleCreatedEvent' | 'PromotionRuleDeletedEvent' | 'PromotionRuleUpdatedEvent' | 'PromotionStartedEvent' | 'PromotionUpdatedEvent'; };
    'PromotionEventsEnum': { name: 'PromotionEventsEnum'; enumValues: 'PROMOTION_CREATED' | 'PROMOTION_UPDATED' | 'PROMOTION_STARTED' | 'PROMOTION_ENDED' | 'RULE_CREATED' | 'RULE_UPDATED' | 'RULE_DELETED'; };
    'PromotionRule': { kind: 'OBJECT'; name: 'PromotionRule'; fields: { 'cataloguePredicate': { name: 'cataloguePredicate'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'channels': { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'giftIds': { name: 'giftIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'giftsLimit': { name: 'giftsLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'orderPredicate': { name: 'orderPredicate'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'predicateType': { name: 'predicateType'; type: { kind: 'ENUM'; name: 'PromotionTypeEnum'; ofType: null; } }; 'promotion': { name: 'promotion'; type: { kind: 'OBJECT'; name: 'Promotion'; ofType: null; } }; 'rewardType': { name: 'rewardType'; type: { kind: 'ENUM'; name: 'RewardTypeEnum'; ofType: null; } }; 'rewardValue': { name: 'rewardValue'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; } }; 'rewardValueType': { name: 'rewardValueType'; type: { kind: 'ENUM'; name: 'RewardValueTypeEnum'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'PromotionRuleTranslation'; ofType: null; } }; }; };
    'PromotionRuleCreate': { kind: 'OBJECT'; name: 'PromotionRuleCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PromotionRuleCreateError'; ofType: null; }; }; }; } }; 'promotionRule': { name: 'promotionRule'; type: { kind: 'OBJECT'; name: 'PromotionRule'; ofType: null; } }; }; };
    'PromotionRuleCreateError': { kind: 'OBJECT'; name: 'PromotionRuleCreateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionRuleCreateErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'giftsLimit': { name: 'giftsLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'giftsLimitExceedBy': { name: 'giftsLimitExceedBy'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'rulesLimit': { name: 'rulesLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'rulesLimitExceedBy': { name: 'rulesLimitExceedBy'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'PromotionRuleCreateErrorCode': { name: 'PromotionRuleCreateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'REQUIRED' | 'INVALID' | 'MULTIPLE_CURRENCIES_NOT_ALLOWED' | 'INVALID_PRECISION' | 'MISSING_CHANNELS' | 'RULES_NUMBER_LIMIT' | 'GIFTS_NUMBER_LIMIT' | 'INVALID_GIFT_TYPE'; };
    'PromotionRuleCreateInput': { kind: 'INPUT_OBJECT'; name: 'PromotionRuleCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'cataloguePredicate'; type: { kind: 'INPUT_OBJECT'; name: 'CataloguePredicateInput'; ofType: null; }; defaultValue: null }, { name: 'orderPredicate'; type: { kind: 'INPUT_OBJECT'; name: 'OrderPredicateInput'; ofType: null; }; defaultValue: null }, { name: 'rewardValueType'; type: { kind: 'ENUM'; name: 'RewardValueTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'rewardValue'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'rewardType'; type: { kind: 'ENUM'; name: 'RewardTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'gifts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'promotion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }]; };
    'PromotionRuleCreated': { kind: 'OBJECT'; name: 'PromotionRuleCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'promotionRule': { name: 'promotionRule'; type: { kind: 'OBJECT'; name: 'PromotionRule'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PromotionRuleCreatedEvent': { kind: 'OBJECT'; name: 'PromotionRuleCreatedEvent'; fields: { 'createdBy': { name: 'createdBy'; type: { kind: 'UNION'; name: 'UserOrApp'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ruleId': { name: 'ruleId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionEventsEnum'; ofType: null; }; } }; }; };
    'PromotionRuleDelete': { kind: 'OBJECT'; name: 'PromotionRuleDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PromotionRuleDeleteError'; ofType: null; }; }; }; } }; 'promotionRule': { name: 'promotionRule'; type: { kind: 'OBJECT'; name: 'PromotionRule'; ofType: null; } }; }; };
    'PromotionRuleDeleteError': { kind: 'OBJECT'; name: 'PromotionRuleDeleteError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionRuleDeleteErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PromotionRuleDeleteErrorCode': { name: 'PromotionRuleDeleteErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'NOT_FOUND'; };
    'PromotionRuleDeleted': { kind: 'OBJECT'; name: 'PromotionRuleDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'promotionRule': { name: 'promotionRule'; type: { kind: 'OBJECT'; name: 'PromotionRule'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PromotionRuleDeletedEvent': { kind: 'OBJECT'; name: 'PromotionRuleDeletedEvent'; fields: { 'createdBy': { name: 'createdBy'; type: { kind: 'UNION'; name: 'UserOrApp'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ruleId': { name: 'ruleId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionEventsEnum'; ofType: null; }; } }; }; };
    'PromotionRuleEventInterface': { kind: 'INTERFACE'; name: 'PromotionRuleEventInterface'; fields: { 'ruleId': { name: 'ruleId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; possibleTypes: 'PromotionRuleCreatedEvent' | 'PromotionRuleDeletedEvent' | 'PromotionRuleUpdatedEvent'; };
    'PromotionRuleInput': { kind: 'INPUT_OBJECT'; name: 'PromotionRuleInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'cataloguePredicate'; type: { kind: 'INPUT_OBJECT'; name: 'CataloguePredicateInput'; ofType: null; }; defaultValue: null }, { name: 'orderPredicate'; type: { kind: 'INPUT_OBJECT'; name: 'OrderPredicateInput'; ofType: null; }; defaultValue: null }, { name: 'rewardValueType'; type: { kind: 'ENUM'; name: 'RewardValueTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'rewardValue'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'rewardType'; type: { kind: 'ENUM'; name: 'RewardTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'gifts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'PromotionRuleTranslatableContent': { kind: 'OBJECT'; name: 'PromotionRuleTranslatableContent'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'promotionRuleId': { name: 'promotionRuleId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'PromotionRuleTranslation'; ofType: null; } }; }; };
    'PromotionRuleTranslate': { kind: 'OBJECT'; name: 'PromotionRuleTranslate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'promotionRule': { name: 'promotionRule'; type: { kind: 'OBJECT'; name: 'PromotionRule'; ofType: null; } }; }; };
    'PromotionRuleTranslation': { kind: 'OBJECT'; name: 'PromotionRuleTranslation'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translatableContent': { name: 'translatableContent'; type: { kind: 'OBJECT'; name: 'PromotionRuleTranslatableContent'; ofType: null; } }; }; };
    'PromotionRuleTranslationInput': { kind: 'INPUT_OBJECT'; name: 'PromotionRuleTranslationInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }]; };
    'PromotionRuleUpdate': { kind: 'OBJECT'; name: 'PromotionRuleUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PromotionRuleUpdateError'; ofType: null; }; }; }; } }; 'promotionRule': { name: 'promotionRule'; type: { kind: 'OBJECT'; name: 'PromotionRule'; ofType: null; } }; }; };
    'PromotionRuleUpdateError': { kind: 'OBJECT'; name: 'PromotionRuleUpdateError'; fields: { 'channels': { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionRuleUpdateErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'giftsLimit': { name: 'giftsLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'giftsLimitExceedBy': { name: 'giftsLimitExceedBy'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PromotionRuleUpdateErrorCode': { name: 'PromotionRuleUpdateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'INVALID' | 'REQUIRED' | 'DUPLICATED_INPUT_ITEM' | 'MISSING_CHANNELS' | 'MULTIPLE_CURRENCIES_NOT_ALLOWED' | 'INVALID_PRECISION' | 'INVALID_GIFT_TYPE' | 'GIFTS_NUMBER_LIMIT'; };
    'PromotionRuleUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PromotionRuleUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'cataloguePredicate'; type: { kind: 'INPUT_OBJECT'; name: 'CataloguePredicateInput'; ofType: null; }; defaultValue: null }, { name: 'orderPredicate'; type: { kind: 'INPUT_OBJECT'; name: 'OrderPredicateInput'; ofType: null; }; defaultValue: null }, { name: 'rewardValueType'; type: { kind: 'ENUM'; name: 'RewardValueTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'rewardValue'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'rewardType'; type: { kind: 'ENUM'; name: 'RewardTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'addChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'addGifts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeGifts'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'PromotionRuleUpdated': { kind: 'OBJECT'; name: 'PromotionRuleUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'promotionRule': { name: 'promotionRule'; type: { kind: 'OBJECT'; name: 'PromotionRule'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PromotionRuleUpdatedEvent': { kind: 'OBJECT'; name: 'PromotionRuleUpdatedEvent'; fields: { 'createdBy': { name: 'createdBy'; type: { kind: 'UNION'; name: 'UserOrApp'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'ruleId': { name: 'ruleId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionEventsEnum'; ofType: null; }; } }; }; };
    'PromotionSortField': { name: 'PromotionSortField'; enumValues: 'NAME' | 'START_DATE' | 'END_DATE' | 'CREATED_AT'; };
    'PromotionSortingInput': { kind: 'INPUT_OBJECT'; name: 'PromotionSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionSortField'; ofType: null; }; }; defaultValue: null }]; };
    'PromotionStarted': { kind: 'OBJECT'; name: 'PromotionStarted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'promotion': { name: 'promotion'; type: { kind: 'OBJECT'; name: 'Promotion'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PromotionStartedEvent': { kind: 'OBJECT'; name: 'PromotionStartedEvent'; fields: { 'createdBy': { name: 'createdBy'; type: { kind: 'UNION'; name: 'UserOrApp'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionEventsEnum'; ofType: null; }; } }; }; };
    'PromotionTranslatableContent': { kind: 'OBJECT'; name: 'PromotionTranslatableContent'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'promotionId': { name: 'promotionId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'PromotionTranslation'; ofType: null; } }; }; };
    'PromotionTranslate': { kind: 'OBJECT'; name: 'PromotionTranslate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'promotion': { name: 'promotion'; type: { kind: 'OBJECT'; name: 'Promotion'; ofType: null; } }; }; };
    'PromotionTranslation': { kind: 'OBJECT'; name: 'PromotionTranslation'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translatableContent': { name: 'translatableContent'; type: { kind: 'OBJECT'; name: 'PromotionTranslatableContent'; ofType: null; } }; }; };
    'PromotionTranslationInput': { kind: 'INPUT_OBJECT'; name: 'PromotionTranslationInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }]; };
    'PromotionTypeEnum': { name: 'PromotionTypeEnum'; enumValues: 'CATALOGUE' | 'ORDER'; };
    'PromotionTypeEnumFilterInput': { kind: 'INPUT_OBJECT'; name: 'PromotionTypeEnumFilterInput'; isOneOf: false; inputFields: [{ name: 'eq'; type: { kind: 'ENUM'; name: 'PromotionTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'oneOf'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionTypeEnum'; ofType: null; }; }; }; defaultValue: null }]; };
    'PromotionUpdate': { kind: 'OBJECT'; name: 'PromotionUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PromotionUpdateError'; ofType: null; }; }; }; } }; 'promotion': { name: 'promotion'; type: { kind: 'OBJECT'; name: 'Promotion'; ofType: null; } }; }; };
    'PromotionUpdateError': { kind: 'OBJECT'; name: 'PromotionUpdateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionUpdateErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PromotionUpdateErrorCode': { name: 'PromotionUpdateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'REQUIRED' | 'INVALID'; };
    'PromotionUpdateInput': { kind: 'INPUT_OBJECT'; name: 'PromotionUpdateInput'; isOneOf: false; inputFields: [{ name: 'description'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; }; defaultValue: null }, { name: 'startDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'endDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'PromotionUpdated': { kind: 'OBJECT'; name: 'PromotionUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'promotion': { name: 'promotion'; type: { kind: 'OBJECT'; name: 'Promotion'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'PromotionUpdatedEvent': { kind: 'OBJECT'; name: 'PromotionUpdatedEvent'; fields: { 'createdBy': { name: 'createdBy'; type: { kind: 'UNION'; name: 'UserOrApp'; ofType: null; } }; 'date': { name: 'date'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PromotionEventsEnum'; ofType: null; }; } }; }; };
    'PromotionWhereInput': { kind: 'INPUT_OBJECT'; name: 'PromotionWhereInput'; isOneOf: false; inputFields: [{ name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'name'; type: { kind: 'INPUT_OBJECT'; name: 'StringFilterInput'; ofType: null; }; defaultValue: null }, { name: 'endDate'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeFilterInput'; ofType: null; }; defaultValue: null }, { name: 'startDate'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeFilterInput'; ofType: null; }; defaultValue: null }, { name: 'isOldSale'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'INPUT_OBJECT'; name: 'PromotionTypeEnumFilterInput'; ofType: null; }; defaultValue: null }, { name: 'AND'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PromotionWhereInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'OR'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'PromotionWhereInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'PublishableChannelListingInput': { kind: 'INPUT_OBJECT'; name: 'PublishableChannelListingInput'; isOneOf: false; inputFields: [{ name: 'channelId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'isPublished'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'publicationDate'; type: { kind: 'SCALAR'; name: 'Date'; ofType: null; }; defaultValue: null }, { name: 'publishedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'Query': { kind: 'OBJECT'; name: 'Query'; fields: { '_entities': { name: '_entities'; type: { kind: 'LIST'; name: never; ofType: { kind: 'UNION'; name: '_Entity'; ofType: null; }; } }; '_service': { name: '_service'; type: { kind: 'OBJECT'; name: '_Service'; ofType: null; } }; 'address': { name: 'address'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'addressValidationRules': { name: 'addressValidationRules'; type: { kind: 'OBJECT'; name: 'AddressValidationData'; ofType: null; } }; 'app': { name: 'app'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'appExtension': { name: 'appExtension'; type: { kind: 'OBJECT'; name: 'AppExtension'; ofType: null; } }; 'appExtensions': { name: 'appExtensions'; type: { kind: 'OBJECT'; name: 'AppExtensionCountableConnection'; ofType: null; } }; 'apps': { name: 'apps'; type: { kind: 'OBJECT'; name: 'AppCountableConnection'; ofType: null; } }; 'appsInstallations': { name: 'appsInstallations'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AppInstallation'; ofType: null; }; }; }; } }; 'attribute': { name: 'attribute'; type: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; } }; 'attributes': { name: 'attributes'; type: { kind: 'OBJECT'; name: 'AttributeCountableConnection'; ofType: null; } }; 'categories': { name: 'categories'; type: { kind: 'OBJECT'; name: 'CategoryCountableConnection'; ofType: null; } }; 'category': { name: 'category'; type: { kind: 'OBJECT'; name: 'Category'; ofType: null; } }; 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'channels': { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; }; } }; 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutLines': { name: 'checkoutLines'; type: { kind: 'OBJECT'; name: 'CheckoutLineCountableConnection'; ofType: null; } }; 'checkouts': { name: 'checkouts'; type: { kind: 'OBJECT'; name: 'CheckoutCountableConnection'; ofType: null; } }; 'collection': { name: 'collection'; type: { kind: 'OBJECT'; name: 'Collection'; ofType: null; } }; 'collections': { name: 'collections'; type: { kind: 'OBJECT'; name: 'CollectionCountableConnection'; ofType: null; } }; 'customers': { name: 'customers'; type: { kind: 'OBJECT'; name: 'UserCountableConnection'; ofType: null; } }; 'digitalContent': { name: 'digitalContent'; type: { kind: 'OBJECT'; name: 'DigitalContent'; ofType: null; } }; 'digitalContents': { name: 'digitalContents'; type: { kind: 'OBJECT'; name: 'DigitalContentCountableConnection'; ofType: null; } }; 'draftOrders': { name: 'draftOrders'; type: { kind: 'OBJECT'; name: 'OrderCountableConnection'; ofType: null; } }; 'exportFile': { name: 'exportFile'; type: { kind: 'OBJECT'; name: 'ExportFile'; ofType: null; } }; 'exportFiles': { name: 'exportFiles'; type: { kind: 'OBJECT'; name: 'ExportFileCountableConnection'; ofType: null; } }; 'giftCard': { name: 'giftCard'; type: { kind: 'OBJECT'; name: 'GiftCard'; ofType: null; } }; 'giftCardCurrencies': { name: 'giftCardCurrencies'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'giftCardSettings': { name: 'giftCardSettings'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'GiftCardSettings'; ofType: null; }; } }; 'giftCardTags': { name: 'giftCardTags'; type: { kind: 'OBJECT'; name: 'GiftCardTagCountableConnection'; ofType: null; } }; 'giftCards': { name: 'giftCards'; type: { kind: 'OBJECT'; name: 'GiftCardCountableConnection'; ofType: null; } }; 'homepageEvents': { name: 'homepageEvents'; type: { kind: 'OBJECT'; name: 'OrderEventCountableConnection'; ofType: null; } }; 'me': { name: 'me'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'menu': { name: 'menu'; type: { kind: 'OBJECT'; name: 'Menu'; ofType: null; } }; 'menuItem': { name: 'menuItem'; type: { kind: 'OBJECT'; name: 'MenuItem'; ofType: null; } }; 'menuItems': { name: 'menuItems'; type: { kind: 'OBJECT'; name: 'MenuItemCountableConnection'; ofType: null; } }; 'menus': { name: 'menus'; type: { kind: 'OBJECT'; name: 'MenuCountableConnection'; ofType: null; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderByToken': { name: 'orderByToken'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'orderSettings': { name: 'orderSettings'; type: { kind: 'OBJECT'; name: 'OrderSettings'; ofType: null; } }; 'orders': { name: 'orders'; type: { kind: 'OBJECT'; name: 'OrderCountableConnection'; ofType: null; } }; 'ordersTotal': { name: 'ordersTotal'; type: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; } }; 'page': { name: 'page'; type: { kind: 'OBJECT'; name: 'Page'; ofType: null; } }; 'pageType': { name: 'pageType'; type: { kind: 'OBJECT'; name: 'PageType'; ofType: null; } }; 'pageTypes': { name: 'pageTypes'; type: { kind: 'OBJECT'; name: 'PageTypeCountableConnection'; ofType: null; } }; 'pages': { name: 'pages'; type: { kind: 'OBJECT'; name: 'PageCountableConnection'; ofType: null; } }; 'payment': { name: 'payment'; type: { kind: 'OBJECT'; name: 'Payment'; ofType: null; } }; 'payments': { name: 'payments'; type: { kind: 'OBJECT'; name: 'PaymentCountableConnection'; ofType: null; } }; 'permissionGroup': { name: 'permissionGroup'; type: { kind: 'OBJECT'; name: 'Group'; ofType: null; } }; 'permissionGroups': { name: 'permissionGroups'; type: { kind: 'OBJECT'; name: 'GroupCountableConnection'; ofType: null; } }; 'plugin': { name: 'plugin'; type: { kind: 'OBJECT'; name: 'Plugin'; ofType: null; } }; 'plugins': { name: 'plugins'; type: { kind: 'OBJECT'; name: 'PluginCountableConnection'; ofType: null; } }; 'product': { name: 'product'; type: { kind: 'OBJECT'; name: 'Product'; ofType: null; } }; 'productType': { name: 'productType'; type: { kind: 'OBJECT'; name: 'ProductType'; ofType: null; } }; 'productTypes': { name: 'productTypes'; type: { kind: 'OBJECT'; name: 'ProductTypeCountableConnection'; ofType: null; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; 'productVariants': { name: 'productVariants'; type: { kind: 'OBJECT'; name: 'ProductVariantCountableConnection'; ofType: null; } }; 'products': { name: 'products'; type: { kind: 'OBJECT'; name: 'ProductCountableConnection'; ofType: null; } }; 'promotion': { name: 'promotion'; type: { kind: 'OBJECT'; name: 'Promotion'; ofType: null; } }; 'promotions': { name: 'promotions'; type: { kind: 'OBJECT'; name: 'PromotionCountableConnection'; ofType: null; } }; 'reportProductSales': { name: 'reportProductSales'; type: { kind: 'OBJECT'; name: 'ProductVariantCountableConnection'; ofType: null; } }; 'sale': { name: 'sale'; type: { kind: 'OBJECT'; name: 'Sale'; ofType: null; } }; 'sales': { name: 'sales'; type: { kind: 'OBJECT'; name: 'SaleCountableConnection'; ofType: null; } }; 'shippingZone': { name: 'shippingZone'; type: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; } }; 'shippingZones': { name: 'shippingZones'; type: { kind: 'OBJECT'; name: 'ShippingZoneCountableConnection'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Shop'; ofType: null; }; } }; 'staffUsers': { name: 'staffUsers'; type: { kind: 'OBJECT'; name: 'UserCountableConnection'; ofType: null; } }; 'stock': { name: 'stock'; type: { kind: 'OBJECT'; name: 'Stock'; ofType: null; } }; 'stocks': { name: 'stocks'; type: { kind: 'OBJECT'; name: 'StockCountableConnection'; ofType: null; } }; 'taxClass': { name: 'taxClass'; type: { kind: 'OBJECT'; name: 'TaxClass'; ofType: null; } }; 'taxClasses': { name: 'taxClasses'; type: { kind: 'OBJECT'; name: 'TaxClassCountableConnection'; ofType: null; } }; 'taxConfiguration': { name: 'taxConfiguration'; type: { kind: 'OBJECT'; name: 'TaxConfiguration'; ofType: null; } }; 'taxConfigurations': { name: 'taxConfigurations'; type: { kind: 'OBJECT'; name: 'TaxConfigurationCountableConnection'; ofType: null; } }; 'taxCountryConfiguration': { name: 'taxCountryConfiguration'; type: { kind: 'OBJECT'; name: 'TaxCountryConfiguration'; ofType: null; } }; 'taxCountryConfigurations': { name: 'taxCountryConfigurations'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxCountryConfiguration'; ofType: null; }; }; } }; 'taxTypes': { name: 'taxTypes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxType'; ofType: null; }; }; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'UNION'; name: 'TranslatableItem'; ofType: null; } }; 'translations': { name: 'translations'; type: { kind: 'OBJECT'; name: 'TranslatableItemConnection'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; 'vouchers': { name: 'vouchers'; type: { kind: 'OBJECT'; name: 'VoucherCountableConnection'; ofType: null; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; 'warehouses': { name: 'warehouses'; type: { kind: 'OBJECT'; name: 'WarehouseCountableConnection'; ofType: null; } }; 'webhook': { name: 'webhook'; type: { kind: 'OBJECT'; name: 'Webhook'; ofType: null; } }; 'webhookEvents': { name: 'webhookEvents'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookEvent'; ofType: null; }; }; } }; 'webhookSamplePayload': { name: 'webhookSamplePayload'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; }; };
    'ReducedRate': { kind: 'OBJECT'; name: 'ReducedRate'; fields: { 'rate': { name: 'rate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'rateType': { name: 'rateType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'RefreshToken': { kind: 'OBJECT'; name: 'RefreshToken'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'ReorderInput': { kind: 'INPUT_OBJECT'; name: 'ReorderInput'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'sortOrder'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'ReportingPeriod': { name: 'ReportingPeriod'; enumValues: 'TODAY' | 'THIS_MONTH'; };
    'RequestEmailChange': { kind: 'OBJECT'; name: 'RequestEmailChange'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'RequestPasswordReset': { kind: 'OBJECT'; name: 'RequestPasswordReset'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; }; };
    'RewardTypeEnum': { name: 'RewardTypeEnum'; enumValues: 'SUBTOTAL_DISCOUNT' | 'GIFT'; };
    'RewardValueTypeEnum': { name: 'RewardValueTypeEnum'; enumValues: 'FIXED' | 'PERCENTAGE'; };
    'Sale': { kind: 'OBJECT'; name: 'Sale'; fields: { 'categories': { name: 'categories'; type: { kind: 'OBJECT'; name: 'CategoryCountableConnection'; ofType: null; } }; 'channelListings': { name: 'channelListings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleChannelListing'; ofType: null; }; }; } }; 'collections': { name: 'collections'; type: { kind: 'OBJECT'; name: 'CollectionCountableConnection'; ofType: null; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'currency': { name: 'currency'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discountValue': { name: 'discountValue'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'endDate': { name: 'endDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'products': { name: 'products'; type: { kind: 'OBJECT'; name: 'ProductCountableConnection'; ofType: null; } }; 'startDate': { name: 'startDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'SaleTranslation'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleType'; ofType: null; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'variants': { name: 'variants'; type: { kind: 'OBJECT'; name: 'ProductVariantCountableConnection'; ofType: null; } }; }; };
    'SaleAddCatalogues': { kind: 'OBJECT'; name: 'SaleAddCatalogues'; fields: { 'discountErrors': { name: 'discountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'sale': { name: 'sale'; type: { kind: 'OBJECT'; name: 'Sale'; ofType: null; } }; }; };
    'SaleBulkDelete': { kind: 'OBJECT'; name: 'SaleBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'discountErrors': { name: 'discountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; }; };
    'SaleChannelListing': { kind: 'OBJECT'; name: 'SaleChannelListing'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'currency': { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'discountValue': { name: 'discountValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'SaleChannelListingAddInput': { kind: 'INPUT_OBJECT'; name: 'SaleChannelListingAddInput'; isOneOf: false; inputFields: [{ name: 'channelId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'discountValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; }; defaultValue: null }]; };
    'SaleChannelListingInput': { kind: 'INPUT_OBJECT'; name: 'SaleChannelListingInput'; isOneOf: false; inputFields: [{ name: 'addChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'SaleChannelListingAddInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'SaleChannelListingUpdate': { kind: 'OBJECT'; name: 'SaleChannelListingUpdate'; fields: { 'discountErrors': { name: 'discountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'sale': { name: 'sale'; type: { kind: 'OBJECT'; name: 'Sale'; ofType: null; } }; }; };
    'SaleCountableConnection': { kind: 'OBJECT'; name: 'SaleCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SaleCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'SaleCountableEdge': { kind: 'OBJECT'; name: 'SaleCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Sale'; ofType: null; }; } }; }; };
    'SaleCreate': { kind: 'OBJECT'; name: 'SaleCreate'; fields: { 'discountErrors': { name: 'discountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'sale': { name: 'sale'; type: { kind: 'OBJECT'; name: 'Sale'; ofType: null; } }; }; };
    'SaleCreated': { kind: 'OBJECT'; name: 'SaleCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'sale': { name: 'sale'; type: { kind: 'OBJECT'; name: 'Sale'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SaleDelete': { kind: 'OBJECT'; name: 'SaleDelete'; fields: { 'discountErrors': { name: 'discountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'sale': { name: 'sale'; type: { kind: 'OBJECT'; name: 'Sale'; ofType: null; } }; }; };
    'SaleDeleted': { kind: 'OBJECT'; name: 'SaleDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'sale': { name: 'sale'; type: { kind: 'OBJECT'; name: 'Sale'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SaleFilterInput': { kind: 'INPUT_OBJECT'; name: 'SaleFilterInput'; isOneOf: false; inputFields: [{ name: 'status'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountStatusEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'saleType'; type: { kind: 'ENUM'; name: 'DiscountValueTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'started'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeRangeInput'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'updatedAt'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeRangeInput'; ofType: null; }; defaultValue: null }]; };
    'SaleInput': { kind: 'INPUT_OBJECT'; name: 'SaleInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'ENUM'; name: 'DiscountValueTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'value'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'products'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'variants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'categories'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'collections'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'startDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'endDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }]; };
    'SaleRemoveCatalogues': { kind: 'OBJECT'; name: 'SaleRemoveCatalogues'; fields: { 'discountErrors': { name: 'discountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'sale': { name: 'sale'; type: { kind: 'OBJECT'; name: 'Sale'; ofType: null; } }; }; };
    'SaleSortField': { name: 'SaleSortField'; enumValues: 'NAME' | 'START_DATE' | 'END_DATE' | 'VALUE' | 'TYPE' | 'CREATED_AT' | 'LAST_MODIFIED_AT'; };
    'SaleSortingInput': { kind: 'INPUT_OBJECT'; name: 'SaleSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SaleSortField'; ofType: null; }; }; defaultValue: null }]; };
    'SaleToggle': { kind: 'OBJECT'; name: 'SaleToggle'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'sale': { name: 'sale'; type: { kind: 'OBJECT'; name: 'Sale'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SaleTranslatableContent': { kind: 'OBJECT'; name: 'SaleTranslatableContent'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sale': { name: 'sale'; type: { kind: 'OBJECT'; name: 'Sale'; ofType: null; } }; 'saleId': { name: 'saleId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'SaleTranslation'; ofType: null; } }; }; };
    'SaleTranslate': { kind: 'OBJECT'; name: 'SaleTranslate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'sale': { name: 'sale'; type: { kind: 'OBJECT'; name: 'Sale'; ofType: null; } }; 'translationErrors': { name: 'translationErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; }; };
    'SaleTranslation': { kind: 'OBJECT'; name: 'SaleTranslation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translatableContent': { name: 'translatableContent'; type: { kind: 'OBJECT'; name: 'SaleTranslatableContent'; ofType: null; } }; }; };
    'SaleType': { name: 'SaleType'; enumValues: 'FIXED' | 'PERCENTAGE'; };
    'SaleUpdate': { kind: 'OBJECT'; name: 'SaleUpdate'; fields: { 'discountErrors': { name: 'discountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'sale': { name: 'sale'; type: { kind: 'OBJECT'; name: 'Sale'; ofType: null; } }; }; };
    'SaleUpdated': { kind: 'OBJECT'; name: 'SaleUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'sale': { name: 'sale'; type: { kind: 'OBJECT'; name: 'Sale'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SelectedAttribute': { kind: 'OBJECT'; name: 'SelectedAttribute'; fields: { 'attribute': { name: 'attribute'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Attribute'; ofType: null; }; } }; 'values': { name: 'values'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AttributeValue'; ofType: null; }; }; }; } }; }; };
    'SendConfirmationEmail': { kind: 'OBJECT'; name: 'SendConfirmationEmail'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'SendConfirmationEmailError'; ofType: null; }; }; }; } }; }; };
    'SendConfirmationEmailError': { kind: 'OBJECT'; name: 'SendConfirmationEmailError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'SendConfirmationEmailErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'SendConfirmationEmailErrorCode': { name: 'SendConfirmationEmailErrorCode'; enumValues: 'INVALID' | 'ACCOUNT_CONFIRMED' | 'CONFIRMATION_ALREADY_REQUESTED' | 'MISSING_CHANNEL_SLUG'; };
    'SeoInput': { kind: 'INPUT_OBJECT'; name: 'SeoInput'; isOneOf: false; inputFields: [{ name: 'title'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'SetPassword': { kind: 'OBJECT'; name: 'SetPassword'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'csrfToken': { name: 'csrfToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'refreshToken': { name: 'refreshToken'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'ShippingError': { kind: 'OBJECT'; name: 'ShippingError'; fields: { 'channels': { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShippingErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'warehouses': { name: 'warehouses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'ShippingErrorCode': { name: 'ShippingErrorCode'; enumValues: 'ALREADY_EXISTS' | 'GRAPHQL_ERROR' | 'INVALID' | 'MAX_LESS_THAN_MIN' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE' | 'DUPLICATED_INPUT_ITEM'; };
    'ShippingListMethodsForCheckout': { kind: 'OBJECT'; name: 'ShippingListMethodsForCheckout'; fields: { 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'shippingMethods': { name: 'shippingMethods'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingMethod'; ofType: null; }; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShippingMethod': { kind: 'OBJECT'; name: 'ShippingMethod'; fields: { 'active': { name: 'active'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'maximumDeliveryDays': { name: 'maximumDeliveryDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'maximumOrderPrice': { name: 'maximumOrderPrice'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'maximumOrderWeight': { name: 'maximumOrderWeight'; type: { kind: 'OBJECT'; name: 'Weight'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'minimumDeliveryDays': { name: 'minimumDeliveryDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'minimumOrderPrice': { name: 'minimumOrderPrice'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'minimumOrderWeight': { name: 'minimumOrderWeight'; type: { kind: 'OBJECT'; name: 'Weight'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'price': { name: 'price'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'ShippingMethodTranslation'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'ShippingMethodTypeEnum'; ofType: null; } }; }; };
    'ShippingMethodChannelListing': { kind: 'OBJECT'; name: 'ShippingMethodChannelListing'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'maximumOrderPrice': { name: 'maximumOrderPrice'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'minimumOrderPrice': { name: 'minimumOrderPrice'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; }; };
    'ShippingMethodChannelListingAddInput': { kind: 'INPUT_OBJECT'; name: 'ShippingMethodChannelListingAddInput'; isOneOf: false; inputFields: [{ name: 'channelId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'price'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'minimumOrderPrice'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'maximumOrderPrice'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }]; };
    'ShippingMethodChannelListingInput': { kind: 'INPUT_OBJECT'; name: 'ShippingMethodChannelListingInput'; isOneOf: false; inputFields: [{ name: 'addChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ShippingMethodChannelListingAddInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'ShippingMethodChannelListingUpdate': { kind: 'OBJECT'; name: 'ShippingMethodChannelListingUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingErrors': { name: 'shippingErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingMethod': { name: 'shippingMethod'; type: { kind: 'OBJECT'; name: 'ShippingMethodType'; ofType: null; } }; }; };
    'ShippingMethodPostalCodeRule': { kind: 'OBJECT'; name: 'ShippingMethodPostalCodeRule'; fields: { 'end': { name: 'end'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'inclusionType': { name: 'inclusionType'; type: { kind: 'ENUM'; name: 'PostalCodeRuleInclusionTypeEnum'; ofType: null; } }; 'start': { name: 'start'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShippingMethodTranslatableContent': { kind: 'OBJECT'; name: 'ShippingMethodTranslatableContent'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'shippingMethod': { name: 'shippingMethod'; type: { kind: 'OBJECT'; name: 'ShippingMethodType'; ofType: null; } }; 'shippingMethodId': { name: 'shippingMethodId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'ShippingMethodTranslation'; ofType: null; } }; }; };
    'ShippingMethodTranslation': { kind: 'OBJECT'; name: 'ShippingMethodTranslation'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translatableContent': { name: 'translatableContent'; type: { kind: 'OBJECT'; name: 'ShippingMethodTranslatableContent'; ofType: null; } }; }; };
    'ShippingMethodType': { kind: 'OBJECT'; name: 'ShippingMethodType'; fields: { 'channelListings': { name: 'channelListings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingMethodChannelListing'; ofType: null; }; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'excludedProducts': { name: 'excludedProducts'; type: { kind: 'OBJECT'; name: 'ProductCountableConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'maximumDeliveryDays': { name: 'maximumDeliveryDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'maximumOrderPrice': { name: 'maximumOrderPrice'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'maximumOrderWeight': { name: 'maximumOrderWeight'; type: { kind: 'OBJECT'; name: 'Weight'; ofType: null; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'minimumDeliveryDays': { name: 'minimumDeliveryDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'minimumOrderPrice': { name: 'minimumOrderPrice'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'minimumOrderWeight': { name: 'minimumOrderWeight'; type: { kind: 'OBJECT'; name: 'Weight'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'postalCodeRules': { name: 'postalCodeRules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingMethodPostalCodeRule'; ofType: null; }; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'taxClass': { name: 'taxClass'; type: { kind: 'OBJECT'; name: 'TaxClass'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'ShippingMethodTranslation'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'ShippingMethodTypeEnum'; ofType: null; } }; }; };
    'ShippingMethodTypeEnum': { name: 'ShippingMethodTypeEnum'; enumValues: 'PRICE' | 'WEIGHT'; };
    'ShippingMethodsPerCountry': { kind: 'OBJECT'; name: 'ShippingMethodsPerCountry'; fields: { 'countryCode': { name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; } }; 'shippingMethods': { name: 'shippingMethods'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingMethod'; ofType: null; }; }; } }; }; };
    'ShippingPostalCodeRulesCreateInputRange': { kind: 'INPUT_OBJECT'; name: 'ShippingPostalCodeRulesCreateInputRange'; isOneOf: false; inputFields: [{ name: 'start'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'end'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ShippingPriceBulkDelete': { kind: 'OBJECT'; name: 'ShippingPriceBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingErrors': { name: 'shippingErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; }; };
    'ShippingPriceCreate': { kind: 'OBJECT'; name: 'ShippingPriceCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingErrors': { name: 'shippingErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingMethod': { name: 'shippingMethod'; type: { kind: 'OBJECT'; name: 'ShippingMethodType'; ofType: null; } }; 'shippingZone': { name: 'shippingZone'; type: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; } }; }; };
    'ShippingPriceCreated': { kind: 'OBJECT'; name: 'ShippingPriceCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'shippingMethod': { name: 'shippingMethod'; type: { kind: 'OBJECT'; name: 'ShippingMethodType'; ofType: null; } }; 'shippingZone': { name: 'shippingZone'; type: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShippingPriceDelete': { kind: 'OBJECT'; name: 'ShippingPriceDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingErrors': { name: 'shippingErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingMethod': { name: 'shippingMethod'; type: { kind: 'OBJECT'; name: 'ShippingMethodType'; ofType: null; } }; 'shippingZone': { name: 'shippingZone'; type: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; } }; }; };
    'ShippingPriceDeleted': { kind: 'OBJECT'; name: 'ShippingPriceDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'shippingMethod': { name: 'shippingMethod'; type: { kind: 'OBJECT'; name: 'ShippingMethodType'; ofType: null; } }; 'shippingZone': { name: 'shippingZone'; type: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShippingPriceExcludeProducts': { kind: 'OBJECT'; name: 'ShippingPriceExcludeProducts'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingErrors': { name: 'shippingErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingMethod': { name: 'shippingMethod'; type: { kind: 'OBJECT'; name: 'ShippingMethodType'; ofType: null; } }; }; };
    'ShippingPriceExcludeProductsInput': { kind: 'INPUT_OBJECT'; name: 'ShippingPriceExcludeProductsInput'; isOneOf: false; inputFields: [{ name: 'products'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; }; defaultValue: null }]; };
    'ShippingPriceInput': { kind: 'INPUT_OBJECT'; name: 'ShippingPriceInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }, { name: 'minimumOrderWeight'; type: { kind: 'SCALAR'; name: 'WeightScalar'; ofType: null; }; defaultValue: null }, { name: 'maximumOrderWeight'; type: { kind: 'SCALAR'; name: 'WeightScalar'; ofType: null; }; defaultValue: null }, { name: 'maximumDeliveryDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'minimumDeliveryDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'type'; type: { kind: 'ENUM'; name: 'ShippingMethodTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'shippingZone'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'addPostalCodeRules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'ShippingPostalCodeRulesCreateInputRange'; ofType: null; }; }; }; defaultValue: null }, { name: 'deletePostalCodeRules'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'inclusionType'; type: { kind: 'ENUM'; name: 'PostalCodeRuleInclusionTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'taxClass'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }]; };
    'ShippingPriceRemoveProductFromExclude': { kind: 'OBJECT'; name: 'ShippingPriceRemoveProductFromExclude'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingErrors': { name: 'shippingErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingMethod': { name: 'shippingMethod'; type: { kind: 'OBJECT'; name: 'ShippingMethodType'; ofType: null; } }; }; };
    'ShippingPriceTranslate': { kind: 'OBJECT'; name: 'ShippingPriceTranslate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'shippingMethod': { name: 'shippingMethod'; type: { kind: 'OBJECT'; name: 'ShippingMethodType'; ofType: null; } }; 'translationErrors': { name: 'translationErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; }; };
    'ShippingPriceTranslationInput': { kind: 'INPUT_OBJECT'; name: 'ShippingPriceTranslationInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }]; };
    'ShippingPriceUpdate': { kind: 'OBJECT'; name: 'ShippingPriceUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingErrors': { name: 'shippingErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingMethod': { name: 'shippingMethod'; type: { kind: 'OBJECT'; name: 'ShippingMethodType'; ofType: null; } }; 'shippingZone': { name: 'shippingZone'; type: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; } }; }; };
    'ShippingPriceUpdated': { kind: 'OBJECT'; name: 'ShippingPriceUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'shippingMethod': { name: 'shippingMethod'; type: { kind: 'OBJECT'; name: 'ShippingMethodType'; ofType: null; } }; 'shippingZone': { name: 'shippingZone'; type: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShippingZone': { kind: 'OBJECT'; name: 'ShippingZone'; fields: { 'channels': { name: 'channels'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; }; }; } }; 'countries': { name: 'countries'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CountryDisplay'; ofType: null; }; }; }; } }; 'default': { name: 'default'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'priceRange': { name: 'priceRange'; type: { kind: 'OBJECT'; name: 'MoneyRange'; ofType: null; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'shippingMethods': { name: 'shippingMethods'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingMethodType'; ofType: null; }; }; } }; 'warehouses': { name: 'warehouses'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; }; }; }; } }; }; };
    'ShippingZoneBulkDelete': { kind: 'OBJECT'; name: 'ShippingZoneBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingErrors': { name: 'shippingErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; }; };
    'ShippingZoneCountableConnection': { kind: 'OBJECT'; name: 'ShippingZoneCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingZoneCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'ShippingZoneCountableEdge': { kind: 'OBJECT'; name: 'ShippingZoneCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; }; } }; }; };
    'ShippingZoneCreate': { kind: 'OBJECT'; name: 'ShippingZoneCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingErrors': { name: 'shippingErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingZone': { name: 'shippingZone'; type: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; } }; }; };
    'ShippingZoneCreateInput': { kind: 'INPUT_OBJECT'; name: 'ShippingZoneCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'countries'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'default'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'addWarehouses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'addChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'ShippingZoneCreated': { kind: 'OBJECT'; name: 'ShippingZoneCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'shippingZone': { name: 'shippingZone'; type: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShippingZoneDelete': { kind: 'OBJECT'; name: 'ShippingZoneDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingErrors': { name: 'shippingErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingZone': { name: 'shippingZone'; type: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; } }; }; };
    'ShippingZoneDeleted': { kind: 'OBJECT'; name: 'ShippingZoneDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'shippingZone': { name: 'shippingZone'; type: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShippingZoneFilterInput': { kind: 'INPUT_OBJECT'; name: 'ShippingZoneFilterInput'; isOneOf: false; inputFields: [{ name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'ShippingZoneMetadataUpdated': { kind: 'OBJECT'; name: 'ShippingZoneMetadataUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'shippingZone': { name: 'shippingZone'; type: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShippingZoneUpdate': { kind: 'OBJECT'; name: 'ShippingZoneUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingErrors': { name: 'shippingErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingError'; ofType: null; }; }; }; } }; 'shippingZone': { name: 'shippingZone'; type: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; } }; }; };
    'ShippingZoneUpdateInput': { kind: 'INPUT_OBJECT'; name: 'ShippingZoneUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'countries'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'default'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'addWarehouses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'addChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeWarehouses'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'ShippingZoneUpdated': { kind: 'OBJECT'; name: 'ShippingZoneUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'shippingZone': { name: 'shippingZone'; type: { kind: 'OBJECT'; name: 'ShippingZone'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'Shop': { kind: 'OBJECT'; name: 'Shop'; fields: { 'allowLoginWithoutConfirmation': { name: 'allowLoginWithoutConfirmation'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'automaticFulfillmentDigitalProducts': { name: 'automaticFulfillmentDigitalProducts'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'availableExternalAuthentications': { name: 'availableExternalAuthentications'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ExternalAuthentication'; ofType: null; }; }; }; } }; 'availablePaymentGateways': { name: 'availablePaymentGateways'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentGateway'; ofType: null; }; }; }; } }; 'availableShippingMethods': { name: 'availableShippingMethods'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingMethod'; ofType: null; }; }; } }; 'availableTaxApps': { name: 'availableTaxApps'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; }; }; } }; 'channelCurrencies': { name: 'channelCurrencies'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'chargeTaxesOnShipping': { name: 'chargeTaxesOnShipping'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'companyAddress': { name: 'companyAddress'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'countries': { name: 'countries'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CountryDisplay'; ofType: null; }; }; }; } }; 'customerSetPasswordUrl': { name: 'customerSetPasswordUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'defaultCountry': { name: 'defaultCountry'; type: { kind: 'OBJECT'; name: 'CountryDisplay'; ofType: null; } }; 'defaultDigitalMaxDownloads': { name: 'defaultDigitalMaxDownloads'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'defaultDigitalUrlValidDays': { name: 'defaultDigitalUrlValidDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'defaultMailSenderAddress': { name: 'defaultMailSenderAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'defaultMailSenderName': { name: 'defaultMailSenderName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'defaultWeightUnit': { name: 'defaultWeightUnit'; type: { kind: 'ENUM'; name: 'WeightUnitsEnum'; ofType: null; } }; 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'displayGrossPrices': { name: 'displayGrossPrices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'domain': { name: 'domain'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Domain'; ofType: null; }; } }; 'enableAccountConfirmationByEmail': { name: 'enableAccountConfirmationByEmail'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'fulfillmentAllowUnpaid': { name: 'fulfillmentAllowUnpaid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'fulfillmentAutoApprove': { name: 'fulfillmentAutoApprove'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'headerText': { name: 'headerText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'includeTaxesInPrices': { name: 'includeTaxesInPrices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'languages': { name: 'languages'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; }; }; } }; 'limitQuantityPerCheckout': { name: 'limitQuantityPerCheckout'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'limits': { name: 'limits'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LimitInfo'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'permissions': { name: 'permissions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Permission'; ofType: null; }; }; }; } }; 'phonePrefixes': { name: 'phonePrefixes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'reserveStockDurationAnonymousUser': { name: 'reserveStockDurationAnonymousUser'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'reserveStockDurationAuthenticatedUser': { name: 'reserveStockDurationAuthenticatedUser'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'schemaVersion': { name: 'schemaVersion'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'staffNotificationRecipients': { name: 'staffNotificationRecipients'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffNotificationRecipient'; ofType: null; }; }; } }; 'trackInventoryByDefault': { name: 'trackInventoryByDefault'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'ShopTranslation'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'ShopAddressUpdate': { kind: 'OBJECT'; name: 'ShopAddressUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopError'; ofType: null; }; }; }; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'shopErrors': { name: 'shopErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopError'; ofType: null; }; }; }; } }; }; };
    'ShopDomainUpdate': { kind: 'OBJECT'; name: 'ShopDomainUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopError'; ofType: null; }; }; }; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'shopErrors': { name: 'shopErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopError'; ofType: null; }; }; }; } }; }; };
    'ShopError': { kind: 'OBJECT'; name: 'ShopError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'ShopErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShopErrorCode': { name: 'ShopErrorCode'; enumValues: 'ALREADY_EXISTS' | 'CANNOT_FETCH_TAX_RATES' | 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE'; };
    'ShopFetchTaxRates': { kind: 'OBJECT'; name: 'ShopFetchTaxRates'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopError'; ofType: null; }; }; }; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'shopErrors': { name: 'shopErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopError'; ofType: null; }; }; }; } }; }; };
    'ShopMetadataUpdated': { kind: 'OBJECT'; name: 'ShopMetadataUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ShopSettingsInput': { kind: 'INPUT_OBJECT'; name: 'ShopSettingsInput'; isOneOf: false; inputFields: [{ name: 'headerText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'trackInventoryByDefault'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'defaultWeightUnit'; type: { kind: 'ENUM'; name: 'WeightUnitsEnum'; ofType: null; }; defaultValue: null }, { name: 'automaticFulfillmentDigitalProducts'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'fulfillmentAutoApprove'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'fulfillmentAllowUnpaid'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'defaultDigitalMaxDownloads'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'defaultDigitalUrlValidDays'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'defaultMailSenderName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'defaultMailSenderAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'customerSetPasswordUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'reserveStockDurationAnonymousUser'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'reserveStockDurationAuthenticatedUser'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'limitQuantityPerCheckout'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'enableAccountConfirmationByEmail'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'allowLoginWithoutConfirmation'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'includeTaxesInPrices'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'displayGrossPrices'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'chargeTaxesOnShipping'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'ShopSettingsTranslate': { kind: 'OBJECT'; name: 'ShopSettingsTranslate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'translationErrors': { name: 'translationErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; }; };
    'ShopSettingsTranslationInput': { kind: 'INPUT_OBJECT'; name: 'ShopSettingsTranslationInput'; isOneOf: false; inputFields: [{ name: 'headerText'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'ShopSettingsUpdate': { kind: 'OBJECT'; name: 'ShopSettingsUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopError'; ofType: null; }; }; }; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'shopErrors': { name: 'shopErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopError'; ofType: null; }; }; }; } }; }; };
    'ShopTranslation': { kind: 'OBJECT'; name: 'ShopTranslation'; fields: { 'description': { name: 'description'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'headerText': { name: 'headerText'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; } }; }; };
    'SiteDomainInput': { kind: 'INPUT_OBJECT'; name: 'SiteDomainInput'; isOneOf: false; inputFields: [{ name: 'domain'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'StaffBulkDelete': { kind: 'OBJECT'; name: 'StaffBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffError'; ofType: null; }; }; }; } }; 'staffErrors': { name: 'staffErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffError'; ofType: null; }; }; }; } }; }; };
    'StaffCreate': { kind: 'OBJECT'; name: 'StaffCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffError'; ofType: null; }; }; }; } }; 'staffErrors': { name: 'staffErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'StaffCreateInput': { kind: 'INPUT_OBJECT'; name: 'StaffCreateInput'; isOneOf: false; inputFields: [{ name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'isActive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'addGroups'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'StaffCreated': { kind: 'OBJECT'; name: 'StaffCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StaffDelete': { kind: 'OBJECT'; name: 'StaffDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffError'; ofType: null; }; }; }; } }; 'staffErrors': { name: 'staffErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'StaffDeleted': { kind: 'OBJECT'; name: 'StaffDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StaffError': { kind: 'OBJECT'; name: 'StaffError'; fields: { 'addressType': { name: 'addressType'; type: { kind: 'ENUM'; name: 'AddressTypeEnum'; ofType: null; } }; 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AccountErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'groups': { name: 'groups'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'permissions': { name: 'permissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PermissionEnum'; ofType: null; }; }; } }; 'users': { name: 'users'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'StaffMemberStatus': { name: 'StaffMemberStatus'; enumValues: 'ACTIVE' | 'DEACTIVATED'; };
    'StaffNotificationRecipient': { kind: 'OBJECT'; name: 'StaffNotificationRecipient'; fields: { 'active': { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'email': { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'StaffNotificationRecipientCreate': { kind: 'OBJECT'; name: 'StaffNotificationRecipientCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopError'; ofType: null; }; }; }; } }; 'shopErrors': { name: 'shopErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopError'; ofType: null; }; }; }; } }; 'staffNotificationRecipient': { name: 'staffNotificationRecipient'; type: { kind: 'OBJECT'; name: 'StaffNotificationRecipient'; ofType: null; } }; }; };
    'StaffNotificationRecipientDelete': { kind: 'OBJECT'; name: 'StaffNotificationRecipientDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopError'; ofType: null; }; }; }; } }; 'shopErrors': { name: 'shopErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopError'; ofType: null; }; }; }; } }; 'staffNotificationRecipient': { name: 'staffNotificationRecipient'; type: { kind: 'OBJECT'; name: 'StaffNotificationRecipient'; ofType: null; } }; }; };
    'StaffNotificationRecipientInput': { kind: 'INPUT_OBJECT'; name: 'StaffNotificationRecipientInput'; isOneOf: false; inputFields: [{ name: 'user'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'active'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'StaffNotificationRecipientUpdate': { kind: 'OBJECT'; name: 'StaffNotificationRecipientUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopError'; ofType: null; }; }; }; } }; 'shopErrors': { name: 'shopErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShopError'; ofType: null; }; }; }; } }; 'staffNotificationRecipient': { name: 'staffNotificationRecipient'; type: { kind: 'OBJECT'; name: 'StaffNotificationRecipient'; ofType: null; } }; }; };
    'StaffSetPasswordRequested': { kind: 'OBJECT'; name: 'StaffSetPasswordRequested'; fields: { 'channel': { name: 'channel'; type: { kind: 'OBJECT'; name: 'Channel'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'redirectUrl': { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shop': { name: 'shop'; type: { kind: 'OBJECT'; name: 'Shop'; ofType: null; } }; 'token': { name: 'token'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StaffUpdate': { kind: 'OBJECT'; name: 'StaffUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffError'; ofType: null; }; }; }; } }; 'staffErrors': { name: 'staffErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StaffError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'StaffUpdateInput': { kind: 'INPUT_OBJECT'; name: 'StaffUpdateInput'; isOneOf: false; inputFields: [{ name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'isActive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'addGroups'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeGroups'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'StaffUpdated': { kind: 'OBJECT'; name: 'StaffUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StaffUserInput': { kind: 'INPUT_OBJECT'; name: 'StaffUserInput'; isOneOf: false; inputFields: [{ name: 'status'; type: { kind: 'ENUM'; name: 'StaffMemberStatus'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'Stock': { kind: 'OBJECT'; name: 'Stock'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; }; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'quantityAllocated': { name: 'quantityAllocated'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'quantityReserved': { name: 'quantityReserved'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; }; } }; }; };
    'StockAvailability': { name: 'StockAvailability'; enumValues: 'IN_STOCK' | 'OUT_OF_STOCK'; };
    'StockBulkResult': { kind: 'OBJECT'; name: 'StockBulkResult'; fields: { 'errors': { name: 'errors'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StockBulkUpdateError'; ofType: null; }; }; } }; 'stock': { name: 'stock'; type: { kind: 'OBJECT'; name: 'Stock'; ofType: null; } }; }; };
    'StockBulkUpdate': { kind: 'OBJECT'; name: 'StockBulkUpdate'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StockBulkUpdateError'; ofType: null; }; }; }; } }; 'results': { name: 'results'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StockBulkResult'; ofType: null; }; }; }; } }; }; };
    'StockBulkUpdateError': { kind: 'OBJECT'; name: 'StockBulkUpdateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'StockBulkUpdateErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StockBulkUpdateErrorCode': { name: 'StockBulkUpdateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED'; };
    'StockBulkUpdateInput': { kind: 'INPUT_OBJECT'; name: 'StockBulkUpdateInput'; isOneOf: false; inputFields: [{ name: 'variantId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'variantExternalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'warehouseId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'warehouseExternalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'StockCountableConnection': { kind: 'OBJECT'; name: 'StockCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StockCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'StockCountableEdge': { kind: 'OBJECT'; name: 'StockCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Stock'; ofType: null; }; } }; }; };
    'StockError': { kind: 'OBJECT'; name: 'StockError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'StockErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StockErrorCode': { name: 'StockErrorCode'; enumValues: 'ALREADY_EXISTS' | 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE'; };
    'StockFilterInput': { kind: 'INPUT_OBJECT'; name: 'StockFilterInput'; isOneOf: false; inputFields: [{ name: 'quantity'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'StockInput': { kind: 'INPUT_OBJECT'; name: 'StockInput'; isOneOf: false; inputFields: [{ name: 'warehouse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'StockSettings': { kind: 'OBJECT'; name: 'StockSettings'; fields: { 'allocationStrategy': { name: 'allocationStrategy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AllocationStrategyEnum'; ofType: null; }; } }; }; };
    'StockSettingsInput': { kind: 'INPUT_OBJECT'; name: 'StockSettingsInput'; isOneOf: false; inputFields: [{ name: 'allocationStrategy'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'AllocationStrategyEnum'; ofType: null; }; }; defaultValue: null }]; };
    'StockUpdateInput': { kind: 'INPUT_OBJECT'; name: 'StockUpdateInput'; isOneOf: false; inputFields: [{ name: 'stock'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'StockUpdatePolicyEnum': { name: 'StockUpdatePolicyEnum'; enumValues: 'SKIP' | 'UPDATE' | 'FORCE'; };
    'StorePaymentMethodEnum': { name: 'StorePaymentMethodEnum'; enumValues: 'ON_SESSION' | 'OFF_SESSION' | 'NONE'; };
    'StoredPaymentMethod': { kind: 'OBJECT'; name: 'StoredPaymentMethod'; fields: { 'creditCardInfo': { name: 'creditCardInfo'; type: { kind: 'OBJECT'; name: 'CreditCard'; ofType: null; } }; 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'gateway': { name: 'gateway'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentGateway'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'paymentMethodId': { name: 'paymentMethodId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'supportedPaymentFlows': { name: 'supportedPaymentFlows'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TokenizedPaymentFlowEnum'; ofType: null; }; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'StoredPaymentMethodDeleteRequested': { kind: 'OBJECT'; name: 'StoredPaymentMethodDeleteRequested'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'paymentMethodId': { name: 'paymentMethodId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'StoredPaymentMethodRequestDelete': { kind: 'OBJECT'; name: 'StoredPaymentMethodRequestDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentMethodRequestDeleteError'; ofType: null; }; }; }; } }; 'result': { name: 'result'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'StoredPaymentMethodRequestDeleteResult'; ofType: null; }; } }; }; };
    'StoredPaymentMethodRequestDeleteErrorCode': { name: 'StoredPaymentMethodRequestDeleteErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'CHANNEL_INACTIVE' | 'GATEWAY_ERROR'; };
    'StoredPaymentMethodRequestDeleteResult': { name: 'StoredPaymentMethodRequestDeleteResult'; enumValues: 'SUCCESSFULLY_DELETED' | 'FAILED_TO_DELETE' | 'FAILED_TO_DELIVER'; };
    'String': unknown;
    'StringFilterInput': { kind: 'INPUT_OBJECT'; name: 'StringFilterInput'; isOneOf: false; inputFields: [{ name: 'eq'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'oneOf'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'Subscription': { kind: 'OBJECT'; name: 'Subscription'; fields: { 'draftOrderCreated': { name: 'draftOrderCreated'; type: { kind: 'OBJECT'; name: 'DraftOrderCreated'; ofType: null; } }; 'draftOrderDeleted': { name: 'draftOrderDeleted'; type: { kind: 'OBJECT'; name: 'DraftOrderDeleted'; ofType: null; } }; 'draftOrderUpdated': { name: 'draftOrderUpdated'; type: { kind: 'OBJECT'; name: 'DraftOrderUpdated'; ofType: null; } }; 'event': { name: 'event'; type: { kind: 'INTERFACE'; name: 'Event'; ofType: null; } }; 'orderBulkCreated': { name: 'orderBulkCreated'; type: { kind: 'OBJECT'; name: 'OrderBulkCreated'; ofType: null; } }; 'orderCancelled': { name: 'orderCancelled'; type: { kind: 'OBJECT'; name: 'OrderCancelled'; ofType: null; } }; 'orderConfirmed': { name: 'orderConfirmed'; type: { kind: 'OBJECT'; name: 'OrderConfirmed'; ofType: null; } }; 'orderCreated': { name: 'orderCreated'; type: { kind: 'OBJECT'; name: 'OrderCreated'; ofType: null; } }; 'orderExpired': { name: 'orderExpired'; type: { kind: 'OBJECT'; name: 'OrderExpired'; ofType: null; } }; 'orderFulfilled': { name: 'orderFulfilled'; type: { kind: 'OBJECT'; name: 'OrderFulfilled'; ofType: null; } }; 'orderFullyPaid': { name: 'orderFullyPaid'; type: { kind: 'OBJECT'; name: 'OrderFullyPaid'; ofType: null; } }; 'orderFullyRefunded': { name: 'orderFullyRefunded'; type: { kind: 'OBJECT'; name: 'OrderFullyRefunded'; ofType: null; } }; 'orderMetadataUpdated': { name: 'orderMetadataUpdated'; type: { kind: 'OBJECT'; name: 'OrderMetadataUpdated'; ofType: null; } }; 'orderPaid': { name: 'orderPaid'; type: { kind: 'OBJECT'; name: 'OrderPaid'; ofType: null; } }; 'orderRefunded': { name: 'orderRefunded'; type: { kind: 'OBJECT'; name: 'OrderRefunded'; ofType: null; } }; 'orderUpdated': { name: 'orderUpdated'; type: { kind: 'OBJECT'; name: 'OrderUpdated'; ofType: null; } }; }; };
    'TaxCalculationStrategy': { name: 'TaxCalculationStrategy'; enumValues: 'FLAT_RATES' | 'TAX_APP'; };
    'TaxClass': { kind: 'OBJECT'; name: 'TaxClass'; fields: { 'countries': { name: 'countries'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxClassCountryRate'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; }; };
    'TaxClassCountableConnection': { kind: 'OBJECT'; name: 'TaxClassCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxClassCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'TaxClassCountableEdge': { kind: 'OBJECT'; name: 'TaxClassCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxClass'; ofType: null; }; } }; }; };
    'TaxClassCountryRate': { kind: 'OBJECT'; name: 'TaxClassCountryRate'; fields: { 'country': { name: 'country'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CountryDisplay'; ofType: null; }; } }; 'rate': { name: 'rate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'taxClass': { name: 'taxClass'; type: { kind: 'OBJECT'; name: 'TaxClass'; ofType: null; } }; }; };
    'TaxClassCreate': { kind: 'OBJECT'; name: 'TaxClassCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxClassCreateError'; ofType: null; }; }; }; } }; 'taxClass': { name: 'taxClass'; type: { kind: 'OBJECT'; name: 'TaxClass'; ofType: null; } }; }; };
    'TaxClassCreateError': { kind: 'OBJECT'; name: 'TaxClassCreateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TaxClassCreateErrorCode'; ofType: null; }; } }; 'countryCodes': { name: 'countryCodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TaxClassCreateErrorCode': { name: 'TaxClassCreateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND'; };
    'TaxClassCreateInput': { kind: 'INPUT_OBJECT'; name: 'TaxClassCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'createCountryRates'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CountryRateInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'TaxClassDelete': { kind: 'OBJECT'; name: 'TaxClassDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxClassDeleteError'; ofType: null; }; }; }; } }; 'taxClass': { name: 'taxClass'; type: { kind: 'OBJECT'; name: 'TaxClass'; ofType: null; } }; }; };
    'TaxClassDeleteError': { kind: 'OBJECT'; name: 'TaxClassDeleteError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TaxClassDeleteErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TaxClassDeleteErrorCode': { name: 'TaxClassDeleteErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND'; };
    'TaxClassFilterInput': { kind: 'INPUT_OBJECT'; name: 'TaxClassFilterInput'; isOneOf: false; inputFields: [{ name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'countries'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; }; defaultValue: null }]; };
    'TaxClassRateInput': { kind: 'INPUT_OBJECT'; name: 'TaxClassRateInput'; isOneOf: false; inputFields: [{ name: 'taxClassId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'rate'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; defaultValue: null }]; };
    'TaxClassSortField': { name: 'TaxClassSortField'; enumValues: 'NAME'; };
    'TaxClassSortingInput': { kind: 'INPUT_OBJECT'; name: 'TaxClassSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TaxClassSortField'; ofType: null; }; }; defaultValue: null }]; };
    'TaxClassUpdate': { kind: 'OBJECT'; name: 'TaxClassUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxClassUpdateError'; ofType: null; }; }; }; } }; 'taxClass': { name: 'taxClass'; type: { kind: 'OBJECT'; name: 'TaxClass'; ofType: null; } }; }; };
    'TaxClassUpdateError': { kind: 'OBJECT'; name: 'TaxClassUpdateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TaxClassUpdateErrorCode'; ofType: null; }; } }; 'countryCodes': { name: 'countryCodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TaxClassUpdateErrorCode': { name: 'TaxClassUpdateErrorCode'; enumValues: 'DUPLICATED_INPUT_ITEM' | 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND'; };
    'TaxClassUpdateInput': { kind: 'INPUT_OBJECT'; name: 'TaxClassUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'updateCountryRates'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'CountryRateUpdateInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeCountryRates'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; }; defaultValue: null }]; };
    'TaxConfiguration': { kind: 'OBJECT'; name: 'TaxConfiguration'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'chargeTaxes': { name: 'chargeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'countries': { name: 'countries'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxConfigurationPerCountry'; ofType: null; }; }; }; } }; 'displayGrossPrices': { name: 'displayGrossPrices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'pricesEnteredWithTax': { name: 'pricesEnteredWithTax'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'taxAppId': { name: 'taxAppId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'taxCalculationStrategy': { name: 'taxCalculationStrategy'; type: { kind: 'ENUM'; name: 'TaxCalculationStrategy'; ofType: null; } }; }; };
    'TaxConfigurationCountableConnection': { kind: 'OBJECT'; name: 'TaxConfigurationCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxConfigurationCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'TaxConfigurationCountableEdge': { kind: 'OBJECT'; name: 'TaxConfigurationCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxConfiguration'; ofType: null; }; } }; }; };
    'TaxConfigurationFilterInput': { kind: 'INPUT_OBJECT'; name: 'TaxConfigurationFilterInput'; isOneOf: false; inputFields: [{ name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'TaxConfigurationPerCountry': { kind: 'OBJECT'; name: 'TaxConfigurationPerCountry'; fields: { 'chargeTaxes': { name: 'chargeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'country': { name: 'country'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CountryDisplay'; ofType: null; }; } }; 'displayGrossPrices': { name: 'displayGrossPrices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'taxAppId': { name: 'taxAppId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'taxCalculationStrategy': { name: 'taxCalculationStrategy'; type: { kind: 'ENUM'; name: 'TaxCalculationStrategy'; ofType: null; } }; }; };
    'TaxConfigurationPerCountryInput': { kind: 'INPUT_OBJECT'; name: 'TaxConfigurationPerCountryInput'; isOneOf: false; inputFields: [{ name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; defaultValue: null }, { name: 'chargeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'taxCalculationStrategy'; type: { kind: 'ENUM'; name: 'TaxCalculationStrategy'; ofType: null; }; defaultValue: null }, { name: 'displayGrossPrices'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; }; defaultValue: null }, { name: 'taxAppId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'TaxConfigurationUpdate': { kind: 'OBJECT'; name: 'TaxConfigurationUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxConfigurationUpdateError'; ofType: null; }; }; }; } }; 'taxConfiguration': { name: 'taxConfiguration'; type: { kind: 'OBJECT'; name: 'TaxConfiguration'; ofType: null; } }; }; };
    'TaxConfigurationUpdateError': { kind: 'OBJECT'; name: 'TaxConfigurationUpdateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TaxConfigurationUpdateErrorCode'; ofType: null; }; } }; 'countryCodes': { name: 'countryCodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TaxConfigurationUpdateErrorCode': { name: 'TaxConfigurationUpdateErrorCode'; enumValues: 'DUPLICATED_INPUT_ITEM' | 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND'; };
    'TaxConfigurationUpdateInput': { kind: 'INPUT_OBJECT'; name: 'TaxConfigurationUpdateInput'; isOneOf: false; inputFields: [{ name: 'chargeTaxes'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'taxCalculationStrategy'; type: { kind: 'ENUM'; name: 'TaxCalculationStrategy'; ofType: null; }; defaultValue: null }, { name: 'displayGrossPrices'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'pricesEnteredWithTax'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'updateCountriesConfiguration'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'TaxConfigurationPerCountryInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeCountriesConfiguration'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'CountryCode'; ofType: null; }; }; }; defaultValue: null }, { name: 'taxAppId'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'TaxCountryConfiguration': { kind: 'OBJECT'; name: 'TaxCountryConfiguration'; fields: { 'country': { name: 'country'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CountryDisplay'; ofType: null; }; } }; 'taxClassCountryRates': { name: 'taxClassCountryRates'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxClassCountryRate'; ofType: null; }; }; }; } }; }; };
    'TaxCountryConfigurationDelete': { kind: 'OBJECT'; name: 'TaxCountryConfigurationDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxCountryConfigurationDeleteError'; ofType: null; }; }; }; } }; 'taxCountryConfiguration': { name: 'taxCountryConfiguration'; type: { kind: 'OBJECT'; name: 'TaxCountryConfiguration'; ofType: null; } }; }; };
    'TaxCountryConfigurationDeleteError': { kind: 'OBJECT'; name: 'TaxCountryConfigurationDeleteError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TaxCountryConfigurationDeleteErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TaxCountryConfigurationDeleteErrorCode': { name: 'TaxCountryConfigurationDeleteErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND'; };
    'TaxCountryConfigurationUpdate': { kind: 'OBJECT'; name: 'TaxCountryConfigurationUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxCountryConfigurationUpdateError'; ofType: null; }; }; }; } }; 'taxCountryConfiguration': { name: 'taxCountryConfiguration'; type: { kind: 'OBJECT'; name: 'TaxCountryConfiguration'; ofType: null; } }; }; };
    'TaxCountryConfigurationUpdateError': { kind: 'OBJECT'; name: 'TaxCountryConfigurationUpdateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TaxCountryConfigurationUpdateErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'taxClassIds': { name: 'taxClassIds'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; } }; }; };
    'TaxCountryConfigurationUpdateErrorCode': { name: 'TaxCountryConfigurationUpdateErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'ONLY_ONE_DEFAULT_COUNTRY_RATE_ALLOWED' | 'CANNOT_CREATE_NEGATIVE_RATE'; };
    'TaxExemptionManage': { kind: 'OBJECT'; name: 'TaxExemptionManage'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxExemptionManageError'; ofType: null; }; }; }; } }; 'taxableObject': { name: 'taxableObject'; type: { kind: 'UNION'; name: 'TaxSourceObject'; ofType: null; } }; }; };
    'TaxExemptionManageError': { kind: 'OBJECT'; name: 'TaxExemptionManageError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TaxExemptionManageErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TaxExemptionManageErrorCode': { name: 'TaxExemptionManageErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'NOT_EDITABLE_ORDER'; };
    'TaxSourceLine': { kind: 'UNION'; name: 'TaxSourceLine'; fields: {}; possibleTypes: 'CheckoutLine' | 'OrderLine'; };
    'TaxSourceObject': { kind: 'UNION'; name: 'TaxSourceObject'; fields: {}; possibleTypes: 'Checkout' | 'Order'; };
    'TaxType': { kind: 'OBJECT'; name: 'TaxType'; fields: { 'description': { name: 'description'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'taxCode': { name: 'taxCode'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TaxableObject': { kind: 'OBJECT'; name: 'TaxableObject'; fields: { 'address': { name: 'address'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'currency': { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'discounts': { name: 'discounts'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxableObjectDiscount'; ofType: null; }; }; }; } }; 'lines': { name: 'lines'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TaxableObjectLine'; ofType: null; }; }; }; } }; 'pricesEnteredWithTax': { name: 'pricesEnteredWithTax'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'shippingPrice': { name: 'shippingPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'sourceObject': { name: 'sourceObject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'TaxSourceObject'; ofType: null; }; } }; }; };
    'TaxableObjectDiscount': { kind: 'OBJECT'; name: 'TaxableObjectDiscount'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TaxableObjectDiscountTypeEnum'; ofType: null; }; } }; }; };
    'TaxableObjectDiscountTypeEnum': { name: 'TaxableObjectDiscountTypeEnum'; enumValues: 'SUBTOTAL' | 'SHIPPING'; };
    'TaxableObjectLine': { kind: 'OBJECT'; name: 'TaxableObjectLine'; fields: { 'chargeTaxes': { name: 'chargeTaxes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'productName': { name: 'productName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'productSku': { name: 'productSku'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'quantity': { name: 'quantity'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'sourceLine': { name: 'sourceLine'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'TaxSourceLine'; ofType: null; }; } }; 'totalPrice': { name: 'totalPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'unitPrice': { name: 'unitPrice'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'variantName': { name: 'variantName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TaxedMoney': { kind: 'OBJECT'; name: 'TaxedMoney'; fields: { 'currency': { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'gross': { name: 'gross'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'net': { name: 'net'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'tax': { name: 'tax'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; }; };
    'TaxedMoneyInput': { kind: 'INPUT_OBJECT'; name: 'TaxedMoneyInput'; isOneOf: false; inputFields: [{ name: 'gross'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; }; defaultValue: null }, { name: 'net'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; }; defaultValue: null }]; };
    'TaxedMoneyRange': { kind: 'OBJECT'; name: 'TaxedMoneyRange'; fields: { 'start': { name: 'start'; type: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; } }; 'stop': { name: 'stop'; type: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; } }; }; };
    'ThumbnailCreated': { kind: 'OBJECT'; name: 'ThumbnailCreated'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'mediaUrl': { name: 'mediaUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'objectId': { name: 'objectId'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'url': { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'ThumbnailFormatEnum': { name: 'ThumbnailFormatEnum'; enumValues: 'ORIGINAL' | 'AVIF' | 'WEBP'; };
    'TimePeriod': { kind: 'OBJECT'; name: 'TimePeriod'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TimePeriodTypeEnum'; ofType: null; }; } }; }; };
    'TimePeriodInputType': { kind: 'INPUT_OBJECT'; name: 'TimePeriodInputType'; isOneOf: false; inputFields: [{ name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }, { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TimePeriodTypeEnum'; ofType: null; }; }; defaultValue: null }]; };
    'TimePeriodTypeEnum': { name: 'TimePeriodTypeEnum'; enumValues: 'DAY' | 'WEEK' | 'MONTH' | 'YEAR'; };
    'TokenizedPaymentFlowEnum': { name: 'TokenizedPaymentFlowEnum'; enumValues: 'INTERACTIVE'; };
    'Transaction': { kind: 'OBJECT'; name: 'Transaction'; fields: { 'amount': { name: 'amount'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'created': { name: 'created'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'error': { name: 'error'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'gatewayResponse': { name: 'gatewayResponse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isSuccess': { name: 'isSuccess'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'kind': { name: 'kind'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionKind'; ofType: null; }; } }; 'payment': { name: 'payment'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Payment'; ofType: null; }; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TransactionAction': { kind: 'OBJECT'; name: 'TransactionAction'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionActionEnum'; ofType: null; }; } }; 'amount': { name: 'amount'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; } }; 'currency': { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TransactionActionEnum': { name: 'TransactionActionEnum'; enumValues: 'CHARGE' | 'REFUND' | 'CANCEL'; };
    'TransactionCancelationRequested': { kind: 'OBJECT'; name: 'TransactionCancelationRequested'; fields: { 'action': { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionAction'; ofType: null; }; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionChargeRequested': { kind: 'OBJECT'; name: 'TransactionChargeRequested'; fields: { 'action': { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionAction'; ofType: null; }; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionCreate': { kind: 'OBJECT'; name: 'TransactionCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionCreateError'; ofType: null; }; }; }; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; } }; }; };
    'TransactionCreateError': { kind: 'OBJECT'; name: 'TransactionCreateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionCreateErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionCreateErrorCode': { name: 'TransactionCreateErrorCode'; enumValues: 'INVALID' | 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'INCORRECT_CURRENCY' | 'METADATA_KEY_REQUIRED' | 'UNIQUE'; };
    'TransactionCreateInput': { kind: 'INPUT_OBJECT'; name: 'TransactionCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'pspReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'availableActions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionActionEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'amountAuthorized'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'amountCharged'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'amountRefunded'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'amountCanceled'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'externalUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'TransactionEvent': { kind: 'OBJECT'; name: 'TransactionEvent'; fields: { 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'createdBy': { name: 'createdBy'; type: { kind: 'UNION'; name: 'UserOrApp'; ofType: null; } }; 'externalUrl': { name: 'externalUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'idempotencyKey': { name: 'idempotencyKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'pspReference': { name: 'pspReference'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'type': { name: 'type'; type: { kind: 'ENUM'; name: 'TransactionEventTypeEnum'; ofType: null; } }; }; };
    'TransactionEventInput': { kind: 'INPUT_OBJECT'; name: 'TransactionEventInput'; isOneOf: false; inputFields: [{ name: 'pspReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'TransactionEventReport': { kind: 'OBJECT'; name: 'TransactionEventReport'; fields: { 'alreadyProcessed': { name: 'alreadyProcessed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionEventReportError'; ofType: null; }; }; }; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; } }; 'transactionEvent': { name: 'transactionEvent'; type: { kind: 'OBJECT'; name: 'TransactionEvent'; ofType: null; } }; }; };
    'TransactionEventReportError': { kind: 'OBJECT'; name: 'TransactionEventReportError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionEventReportErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionEventReportErrorCode': { name: 'TransactionEventReportErrorCode'; enumValues: 'INVALID' | 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'INCORRECT_DETAILS' | 'ALREADY_EXISTS'; };
    'TransactionEventTypeEnum': { name: 'TransactionEventTypeEnum'; enumValues: 'AUTHORIZATION_SUCCESS' | 'AUTHORIZATION_FAILURE' | 'AUTHORIZATION_ADJUSTMENT' | 'AUTHORIZATION_REQUEST' | 'AUTHORIZATION_ACTION_REQUIRED' | 'CHARGE_ACTION_REQUIRED' | 'CHARGE_SUCCESS' | 'CHARGE_FAILURE' | 'CHARGE_BACK' | 'CHARGE_REQUEST' | 'REFUND_SUCCESS' | 'REFUND_FAILURE' | 'REFUND_REVERSE' | 'REFUND_REQUEST' | 'CANCEL_SUCCESS' | 'CANCEL_FAILURE' | 'CANCEL_REQUEST' | 'INFO'; };
    'TransactionFlowStrategyEnum': { name: 'TransactionFlowStrategyEnum'; enumValues: 'AUTHORIZATION' | 'CHARGE'; };
    'TransactionInitialize': { kind: 'OBJECT'; name: 'TransactionInitialize'; fields: { 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionInitializeError'; ofType: null; }; }; }; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; } }; 'transactionEvent': { name: 'transactionEvent'; type: { kind: 'OBJECT'; name: 'TransactionEvent'; ofType: null; } }; }; };
    'TransactionInitializeError': { kind: 'OBJECT'; name: 'TransactionInitializeError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionInitializeErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionInitializeErrorCode': { name: 'TransactionInitializeErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'UNIQUE' | 'CHECKOUT_COMPLETION_IN_PROGRESS'; };
    'TransactionInitializeSession': { kind: 'OBJECT'; name: 'TransactionInitializeSession'; fields: { 'action': { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionProcessAction'; ofType: null; }; } }; 'customerIpAddress': { name: 'customerIpAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'idempotencyKey': { name: 'idempotencyKey'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'merchantReference': { name: 'merchantReference'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'sourceObject': { name: 'sourceObject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'OrderOrCheckout'; ofType: null; }; } }; 'transaction': { name: 'transaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionItem': { kind: 'OBJECT'; name: 'TransactionItem'; fields: { 'actions': { name: 'actions'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionActionEnum'; ofType: null; }; }; }; } }; 'authorizePendingAmount': { name: 'authorizePendingAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'authorizedAmount': { name: 'authorizedAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'cancelPendingAmount': { name: 'cancelPendingAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'canceledAmount': { name: 'canceledAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'chargePendingAmount': { name: 'chargePendingAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'chargedAmount': { name: 'chargedAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'createdBy': { name: 'createdBy'; type: { kind: 'UNION'; name: 'UserOrApp'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionEvent'; ofType: null; }; }; }; } }; 'externalUrl': { name: 'externalUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'modifiedAt': { name: 'modifiedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'order': { name: 'order'; type: { kind: 'OBJECT'; name: 'Order'; ofType: null; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'pspReference': { name: 'pspReference'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'refundPendingAmount': { name: 'refundPendingAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'refundedAmount': { name: 'refundedAmount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Money'; ofType: null; }; } }; 'token': { name: 'token'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; } }; }; };
    'TransactionItemMetadataUpdated': { kind: 'OBJECT'; name: 'TransactionItemMetadataUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionKind': { name: 'TransactionKind'; enumValues: 'EXTERNAL' | 'AUTH' | 'PENDING' | 'ACTION_TO_CONFIRM' | 'REFUND' | 'REFUND_ONGOING' | 'CAPTURE' | 'VOID' | 'CONFIRM' | 'CANCEL'; };
    'TransactionProcess': { kind: 'OBJECT'; name: 'TransactionProcess'; fields: { 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionProcessError'; ofType: null; }; }; }; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; } }; 'transactionEvent': { name: 'transactionEvent'; type: { kind: 'OBJECT'; name: 'TransactionEvent'; ofType: null; } }; }; };
    'TransactionProcessAction': { kind: 'OBJECT'; name: 'TransactionProcessAction'; fields: { 'actionType': { name: 'actionType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionFlowStrategyEnum'; ofType: null; }; } }; 'amount': { name: 'amount'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; } }; 'currency': { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'TransactionProcessError': { kind: 'OBJECT'; name: 'TransactionProcessError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionProcessErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionProcessErrorCode': { name: 'TransactionProcessErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'TRANSACTION_ALREADY_PROCESSED' | 'MISSING_PAYMENT_APP_RELATION' | 'MISSING_PAYMENT_APP' | 'CHECKOUT_COMPLETION_IN_PROGRESS'; };
    'TransactionProcessSession': { kind: 'OBJECT'; name: 'TransactionProcessSession'; fields: { 'action': { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionProcessAction'; ofType: null; }; } }; 'customerIpAddress': { name: 'customerIpAddress'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'JSON'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'merchantReference': { name: 'merchantReference'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'sourceObject': { name: 'sourceObject'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'OrderOrCheckout'; ofType: null; }; } }; 'transaction': { name: 'transaction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; }; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionRefundRequested': { kind: 'OBJECT'; name: 'TransactionRefundRequested'; fields: { 'action': { name: 'action'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionAction'; ofType: null; }; } }; 'grantedRefund': { name: 'grantedRefund'; type: { kind: 'OBJECT'; name: 'OrderGrantedRefund'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionRequestAction': { kind: 'OBJECT'; name: 'TransactionRequestAction'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionRequestActionError'; ofType: null; }; }; }; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; } }; }; };
    'TransactionRequestActionError': { kind: 'OBJECT'; name: 'TransactionRequestActionError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionRequestActionErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionRequestActionErrorCode': { name: 'TransactionRequestActionErrorCode'; enumValues: 'INVALID' | 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'MISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK'; };
    'TransactionRequestRefundForGrantedRefund': { kind: 'OBJECT'; name: 'TransactionRequestRefundForGrantedRefund'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionRequestRefundForGrantedRefundError'; ofType: null; }; }; }; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; } }; }; };
    'TransactionRequestRefundForGrantedRefundError': { kind: 'OBJECT'; name: 'TransactionRequestRefundForGrantedRefundError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionRequestRefundForGrantedRefundErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionRequestRefundForGrantedRefundErrorCode': { name: 'TransactionRequestRefundForGrantedRefundErrorCode'; enumValues: 'INVALID' | 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'AMOUNT_GREATER_THAN_AVAILABLE' | 'MISSING_TRANSACTION_ACTION_REQUEST_WEBHOOK' | 'REFUND_ALREADY_PROCESSED' | 'REFUND_IS_PENDING'; };
    'TransactionUpdate': { kind: 'OBJECT'; name: 'TransactionUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TransactionUpdateError'; ofType: null; }; }; }; } }; 'transaction': { name: 'transaction'; type: { kind: 'OBJECT'; name: 'TransactionItem'; ofType: null; } }; }; };
    'TransactionUpdateError': { kind: 'OBJECT'; name: 'TransactionUpdateError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionUpdateErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TransactionUpdateErrorCode': { name: 'TransactionUpdateErrorCode'; enumValues: 'INVALID' | 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'INCORRECT_CURRENCY' | 'METADATA_KEY_REQUIRED' | 'UNIQUE'; };
    'TransactionUpdateInput': { kind: 'INPUT_OBJECT'; name: 'TransactionUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'pspReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'availableActions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TransactionActionEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'amountAuthorized'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'amountCharged'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'amountRefunded'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'amountCanceled'; type: { kind: 'INPUT_OBJECT'; name: 'MoneyInput'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'externalUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'TranslatableItem': { kind: 'UNION'; name: 'TranslatableItem'; fields: {}; possibleTypes: 'AttributeTranslatableContent' | 'AttributeValueTranslatableContent' | 'CategoryTranslatableContent' | 'CollectionTranslatableContent' | 'MenuItemTranslatableContent' | 'PageTranslatableContent' | 'ProductTranslatableContent' | 'ProductVariantTranslatableContent' | 'PromotionRuleTranslatableContent' | 'PromotionTranslatableContent' | 'SaleTranslatableContent' | 'ShippingMethodTranslatableContent' | 'VoucherTranslatableContent'; };
    'TranslatableItemConnection': { kind: 'OBJECT'; name: 'TranslatableItemConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslatableItemEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'TranslatableItemEdge': { kind: 'OBJECT'; name: 'TranslatableItemEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'UNION'; name: 'TranslatableItem'; ofType: null; }; } }; }; };
    'TranslatableKinds': { name: 'TranslatableKinds'; enumValues: 'ATTRIBUTE' | 'ATTRIBUTE_VALUE' | 'CATEGORY' | 'COLLECTION' | 'MENU_ITEM' | 'PAGE' | 'PRODUCT' | 'PROMOTION' | 'PROMOTION_RULE' | 'SALE' | 'SHIPPING_METHOD' | 'VARIANT' | 'VOUCHER'; };
    'TranslationCreated': { kind: 'OBJECT'; name: 'TranslationCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'UNION'; name: 'TranslationTypes'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TranslationError': { kind: 'OBJECT'; name: 'TranslationError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'TranslationErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'TranslationErrorCode': { name: 'TranslationErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED'; };
    'TranslationInput': { kind: 'INPUT_OBJECT'; name: 'TranslationInput'; isOneOf: false; inputFields: [{ name: 'seoTitle'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'seoDescription'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'description'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }]; };
    'TranslationTypes': { kind: 'UNION'; name: 'TranslationTypes'; fields: {}; possibleTypes: 'AttributeTranslation' | 'AttributeValueTranslation' | 'CategoryTranslation' | 'CollectionTranslation' | 'MenuItemTranslation' | 'PageTranslation' | 'ProductTranslation' | 'ProductVariantTranslation' | 'PromotionRuleTranslation' | 'PromotionTranslation' | 'SaleTranslation' | 'ShippingMethodTranslation' | 'VoucherTranslation'; };
    'TranslationUpdated': { kind: 'OBJECT'; name: 'TranslationUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'UNION'; name: 'TranslationTypes'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'UUID': unknown;
    'UpdateInvoiceInput': { kind: 'INPUT_OBJECT'; name: 'UpdateInvoiceInput'; isOneOf: false; inputFields: [{ name: 'number'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'url'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }]; };
    'UpdateMetadata': { kind: 'OBJECT'; name: 'UpdateMetadata'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataError'; ofType: null; }; }; }; } }; 'item': { name: 'item'; type: { kind: 'INTERFACE'; name: 'ObjectWithMetadata'; ofType: null; } }; 'metadataErrors': { name: 'metadataErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataError'; ofType: null; }; }; }; } }; }; };
    'UpdatePrivateMetadata': { kind: 'OBJECT'; name: 'UpdatePrivateMetadata'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataError'; ofType: null; }; }; }; } }; 'item': { name: 'item'; type: { kind: 'INTERFACE'; name: 'ObjectWithMetadata'; ofType: null; } }; 'metadataErrors': { name: 'metadataErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataError'; ofType: null; }; }; }; } }; }; };
    'Upload': unknown;
    'UploadError': { kind: 'OBJECT'; name: 'UploadError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UploadErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'UploadErrorCode': { name: 'UploadErrorCode'; enumValues: 'GRAPHQL_ERROR'; };
    'User': { kind: 'OBJECT'; name: 'User'; fields: { 'accessibleChannels': { name: 'accessibleChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; }; } }; 'addresses': { name: 'addresses'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Address'; ofType: null; }; }; }; } }; 'avatar': { name: 'avatar'; type: { kind: 'OBJECT'; name: 'Image'; ofType: null; } }; 'checkout': { name: 'checkout'; type: { kind: 'OBJECT'; name: 'Checkout'; ofType: null; } }; 'checkoutIds': { name: 'checkoutIds'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; 'checkoutTokens': { name: 'checkoutTokens'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'UUID'; ofType: null; }; }; } }; 'checkouts': { name: 'checkouts'; type: { kind: 'OBJECT'; name: 'CheckoutCountableConnection'; ofType: null; } }; 'dateJoined': { name: 'dateJoined'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'defaultBillingAddress': { name: 'defaultBillingAddress'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'defaultShippingAddress': { name: 'defaultShippingAddress'; type: { kind: 'OBJECT'; name: 'Address'; ofType: null; } }; 'editableGroups': { name: 'editableGroups'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; }; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'events': { name: 'events'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CustomerEvent'; ofType: null; }; }; } }; 'externalReference': { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'firstName': { name: 'firstName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'giftCards': { name: 'giftCards'; type: { kind: 'OBJECT'; name: 'GiftCardCountableConnection'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isActive': { name: 'isActive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isConfirmed': { name: 'isConfirmed'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'isStaff': { name: 'isStaff'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'languageCode': { name: 'languageCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'LanguageCodeEnum'; ofType: null; }; } }; 'lastLogin': { name: 'lastLogin'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'lastName': { name: 'lastName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'note': { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'orders': { name: 'orders'; type: { kind: 'OBJECT'; name: 'OrderCountableConnection'; ofType: null; } }; 'permissionGroups': { name: 'permissionGroups'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'restrictedAccessToChannels': { name: 'restrictedAccessToChannels'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'storedPaymentMethods': { name: 'storedPaymentMethods'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'StoredPaymentMethod'; ofType: null; }; }; } }; 'storedPaymentSources': { name: 'storedPaymentSources'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PaymentSource'; ofType: null; }; }; } }; 'updatedAt': { name: 'updatedAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'userPermissions': { name: 'userPermissions'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserPermission'; ofType: null; }; }; } }; }; };
    'UserAvatarDelete': { kind: 'OBJECT'; name: 'UserAvatarDelete'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'UserAvatarUpdate': { kind: 'OBJECT'; name: 'UserAvatarUpdate'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'UserBulkSetActive': { kind: 'OBJECT'; name: 'UserBulkSetActive'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; }; };
    'UserCountableConnection': { kind: 'OBJECT'; name: 'UserCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'UserCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'UserCountableEdge': { kind: 'OBJECT'; name: 'UserCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'User'; ofType: null; }; } }; }; };
    'UserCreateInput': { kind: 'INPUT_OBJECT'; name: 'UserCreateInput'; isOneOf: false; inputFields: [{ name: 'defaultBillingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'defaultShippingAddress'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'firstName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'lastName'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'isActive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'note'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'privateMetadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'languageCode'; type: { kind: 'ENUM'; name: 'LanguageCodeEnum'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'isConfirmed'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'redirectUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'UserOrApp': { kind: 'UNION'; name: 'UserOrApp'; fields: {}; possibleTypes: 'App' | 'User'; };
    'UserPermission': { kind: 'OBJECT'; name: 'UserPermission'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'PermissionEnum'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'sourcePermissionGroups': { name: 'sourcePermissionGroups'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Group'; ofType: null; }; }; } }; }; };
    'UserSortField': { name: 'UserSortField'; enumValues: 'FIRST_NAME' | 'LAST_NAME' | 'EMAIL' | 'ORDER_COUNT' | 'CREATED_AT' | 'LAST_MODIFIED_AT'; };
    'UserSortingInput': { kind: 'INPUT_OBJECT'; name: 'UserSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'UserSortField'; ofType: null; }; }; defaultValue: null }]; };
    'VAT': { kind: 'OBJECT'; name: 'VAT'; fields: { 'countryCode': { name: 'countryCode'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'reducedRates': { name: 'reducedRates'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ReducedRate'; ofType: null; }; }; }; } }; 'standardRate': { name: 'standardRate'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'VariantAttributeScope': { name: 'VariantAttributeScope'; enumValues: 'ALL' | 'VARIANT_SELECTION' | 'NOT_VARIANT_SELECTION'; };
    'VariantMediaAssign': { kind: 'OBJECT'; name: 'VariantMediaAssign'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'media': { name: 'media'; type: { kind: 'OBJECT'; name: 'ProductMedia'; ofType: null; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'VariantMediaUnassign': { kind: 'OBJECT'; name: 'VariantMediaUnassign'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'media': { name: 'media'; type: { kind: 'OBJECT'; name: 'ProductMedia'; ofType: null; } }; 'productErrors': { name: 'productErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ProductError'; ofType: null; }; }; }; } }; 'productVariant': { name: 'productVariant'; type: { kind: 'OBJECT'; name: 'ProductVariant'; ofType: null; } }; }; };
    'VariantPricingInfo': { kind: 'OBJECT'; name: 'VariantPricingInfo'; fields: { 'discount': { name: 'discount'; type: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; } }; 'discountLocalCurrency': { name: 'discountLocalCurrency'; type: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; } }; 'onSale': { name: 'onSale'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'price': { name: 'price'; type: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; } }; 'priceLocalCurrency': { name: 'priceLocalCurrency'; type: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; } }; 'priceUndiscounted': { name: 'priceUndiscounted'; type: { kind: 'OBJECT'; name: 'TaxedMoney'; ofType: null; } }; }; };
    'VerifyToken': { kind: 'OBJECT'; name: 'VerifyToken'; fields: { 'accountErrors': { name: 'accountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'AccountError'; ofType: null; }; }; }; } }; 'isValid': { name: 'isValid'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'payload': { name: 'payload'; type: { kind: 'SCALAR'; name: 'GenericScalar'; ofType: null; } }; 'user': { name: 'user'; type: { kind: 'OBJECT'; name: 'User'; ofType: null; } }; }; };
    'VolumeUnitsEnum': { name: 'VolumeUnitsEnum'; enumValues: 'CUBIC_MILLIMETER' | 'CUBIC_CENTIMETER' | 'CUBIC_DECIMETER' | 'CUBIC_METER' | 'LITER' | 'CUBIC_FOOT' | 'CUBIC_INCH' | 'CUBIC_YARD' | 'QT' | 'PINT' | 'FL_OZ' | 'ACRE_IN' | 'ACRE_FT'; };
    'Voucher': { kind: 'OBJECT'; name: 'Voucher'; fields: { 'applyOncePerCustomer': { name: 'applyOncePerCustomer'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'applyOncePerOrder': { name: 'applyOncePerOrder'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'categories': { name: 'categories'; type: { kind: 'OBJECT'; name: 'CategoryCountableConnection'; ofType: null; } }; 'channelListings': { name: 'channelListings'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VoucherChannelListing'; ofType: null; }; }; } }; 'code': { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'codes': { name: 'codes'; type: { kind: 'OBJECT'; name: 'VoucherCodeCountableConnection'; ofType: null; } }; 'collections': { name: 'collections'; type: { kind: 'OBJECT'; name: 'CollectionCountableConnection'; ofType: null; } }; 'countries': { name: 'countries'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'CountryDisplay'; ofType: null; }; }; } }; 'currency': { name: 'currency'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'discountValue': { name: 'discountValue'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; 'discountValueType': { name: 'discountValueType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountValueTypeEnum'; ofType: null; }; } }; 'endDate': { name: 'endDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'minCheckoutItemsQuantity': { name: 'minCheckoutItemsQuantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'minSpent': { name: 'minSpent'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'onlyForStaff': { name: 'onlyForStaff'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'products': { name: 'products'; type: { kind: 'OBJECT'; name: 'ProductCountableConnection'; ofType: null; } }; 'singleUse': { name: 'singleUse'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'startDate': { name: 'startDate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'VoucherTranslation'; ofType: null; } }; 'type': { name: 'type'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'VoucherTypeEnum'; ofType: null; }; } }; 'usageLimit': { name: 'usageLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'used': { name: 'used'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'variants': { name: 'variants'; type: { kind: 'OBJECT'; name: 'ProductVariantCountableConnection'; ofType: null; } }; }; };
    'VoucherAddCatalogues': { kind: 'OBJECT'; name: 'VoucherAddCatalogues'; fields: { 'discountErrors': { name: 'discountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; }; };
    'VoucherBulkDelete': { kind: 'OBJECT'; name: 'VoucherBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'discountErrors': { name: 'discountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; }; };
    'VoucherChannelListing': { kind: 'OBJECT'; name: 'VoucherChannelListing'; fields: { 'channel': { name: 'channel'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Channel'; ofType: null; }; } }; 'currency': { name: 'currency'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'discountValue': { name: 'discountValue'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'minSpent': { name: 'minSpent'; type: { kind: 'OBJECT'; name: 'Money'; ofType: null; } }; }; };
    'VoucherChannelListingAddInput': { kind: 'INPUT_OBJECT'; name: 'VoucherChannelListingAddInput'; isOneOf: false; inputFields: [{ name: 'channelId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; defaultValue: null }, { name: 'discountValue'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }, { name: 'minAmountSpent'; type: { kind: 'SCALAR'; name: 'PositiveDecimal'; ofType: null; }; defaultValue: null }]; };
    'VoucherChannelListingInput': { kind: 'INPUT_OBJECT'; name: 'VoucherChannelListingInput'; isOneOf: false; inputFields: [{ name: 'addChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'VoucherChannelListingAddInput'; ofType: null; }; }; }; defaultValue: null }, { name: 'removeChannels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'VoucherChannelListingUpdate': { kind: 'OBJECT'; name: 'VoucherChannelListingUpdate'; fields: { 'discountErrors': { name: 'discountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; }; };
    'VoucherCode': { kind: 'OBJECT'; name: 'VoucherCode'; fields: { 'code': { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'createdAt': { name: 'createdAt'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isActive': { name: 'isActive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; } }; 'used': { name: 'used'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'VoucherCodeBulkDelete': { kind: 'OBJECT'; name: 'VoucherCodeBulkDelete'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VoucherCodeBulkDeleteError'; ofType: null; }; }; }; } }; }; };
    'VoucherCodeBulkDeleteError': { kind: 'OBJECT'; name: 'VoucherCodeBulkDeleteError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'VoucherCodeBulkDeleteErrorCode'; ofType: null; }; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'path': { name: 'path'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'voucherCodes': { name: 'voucherCodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'VoucherCodeBulkDeleteErrorCode': { name: 'VoucherCodeBulkDeleteErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'INVALID'; };
    'VoucherCodeCountableConnection': { kind: 'OBJECT'; name: 'VoucherCodeCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VoucherCodeCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'VoucherCodeCountableEdge': { kind: 'OBJECT'; name: 'VoucherCodeCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VoucherCode'; ofType: null; }; } }; }; };
    'VoucherCodeExportCompleted': { kind: 'OBJECT'; name: 'VoucherCodeExportCompleted'; fields: { 'export': { name: 'export'; type: { kind: 'OBJECT'; name: 'ExportFile'; ofType: null; } }; 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'VoucherCodesCreated': { kind: 'OBJECT'; name: 'VoucherCodesCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'voucherCodes': { name: 'voucherCodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VoucherCode'; ofType: null; }; }; } }; }; };
    'VoucherCodesDeleted': { kind: 'OBJECT'; name: 'VoucherCodesDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'voucherCodes': { name: 'voucherCodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VoucherCode'; ofType: null; }; }; } }; }; };
    'VoucherCountableConnection': { kind: 'OBJECT'; name: 'VoucherCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'VoucherCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'VoucherCountableEdge': { kind: 'OBJECT'; name: 'VoucherCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; }; } }; }; };
    'VoucherCreate': { kind: 'OBJECT'; name: 'VoucherCreate'; fields: { 'discountErrors': { name: 'discountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; }; };
    'VoucherCreated': { kind: 'OBJECT'; name: 'VoucherCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; }; };
    'VoucherDelete': { kind: 'OBJECT'; name: 'VoucherDelete'; fields: { 'discountErrors': { name: 'discountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; }; };
    'VoucherDeleted': { kind: 'OBJECT'; name: 'VoucherDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; }; };
    'VoucherDiscountType': { name: 'VoucherDiscountType'; enumValues: 'FIXED' | 'PERCENTAGE' | 'SHIPPING'; };
    'VoucherFilterInput': { kind: 'INPUT_OBJECT'; name: 'VoucherFilterInput'; isOneOf: false; inputFields: [{ name: 'status'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'DiscountStatusEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'timesUsed'; type: { kind: 'INPUT_OBJECT'; name: 'IntRangeInput'; ofType: null; }; defaultValue: null }, { name: 'discountType'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'VoucherDiscountType'; ofType: null; }; }; }; defaultValue: null }, { name: 'started'; type: { kind: 'INPUT_OBJECT'; name: 'DateTimeRangeInput'; ofType: null; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'VoucherInput': { kind: 'INPUT_OBJECT'; name: 'VoucherInput'; isOneOf: false; inputFields: [{ name: 'type'; type: { kind: 'ENUM'; name: 'VoucherTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'code'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'addCodes'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'startDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'endDate'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; }; defaultValue: null }, { name: 'discountValueType'; type: { kind: 'ENUM'; name: 'DiscountValueTypeEnum'; ofType: null; }; defaultValue: null }, { name: 'products'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'variants'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'collections'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'categories'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'minCheckoutItemsQuantity'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'countries'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: 'applyOncePerOrder'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'applyOncePerCustomer'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'onlyForStaff'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'singleUse'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'usageLimit'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'VoucherMetadataUpdated': { kind: 'OBJECT'; name: 'VoucherMetadataUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; }; };
    'VoucherRemoveCatalogues': { kind: 'OBJECT'; name: 'VoucherRemoveCatalogues'; fields: { 'discountErrors': { name: 'discountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; }; };
    'VoucherSortField': { name: 'VoucherSortField'; enumValues: 'CODE' | 'NAME' | 'START_DATE' | 'END_DATE' | 'VALUE' | 'TYPE' | 'USAGE_LIMIT' | 'MINIMUM_SPENT_AMOUNT'; };
    'VoucherSortingInput': { kind: 'INPUT_OBJECT'; name: 'VoucherSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'channel'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'VoucherSortField'; ofType: null; }; }; defaultValue: null }]; };
    'VoucherTranslatableContent': { kind: 'OBJECT'; name: 'VoucherTranslatableContent'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translation': { name: 'translation'; type: { kind: 'OBJECT'; name: 'VoucherTranslation'; ofType: null; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; 'voucherId': { name: 'voucherId'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; }; };
    'VoucherTranslate': { kind: 'OBJECT'; name: 'VoucherTranslate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'translationErrors': { name: 'translationErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'TranslationError'; ofType: null; }; }; }; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; }; };
    'VoucherTranslation': { kind: 'OBJECT'; name: 'VoucherTranslation'; fields: { 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'language': { name: 'language'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'LanguageDisplay'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'translatableContent': { name: 'translatableContent'; type: { kind: 'OBJECT'; name: 'VoucherTranslatableContent'; ofType: null; } }; }; };
    'VoucherTypeEnum': { name: 'VoucherTypeEnum'; enumValues: 'SHIPPING' | 'ENTIRE_ORDER' | 'SPECIFIC_PRODUCT'; };
    'VoucherUpdate': { kind: 'OBJECT'; name: 'VoucherUpdate'; fields: { 'discountErrors': { name: 'discountErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'DiscountError'; ofType: null; }; }; }; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; }; };
    'VoucherUpdated': { kind: 'OBJECT'; name: 'VoucherUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'voucher': { name: 'voucher'; type: { kind: 'OBJECT'; name: 'Voucher'; ofType: null; } }; }; };
    'Warehouse': { kind: 'OBJECT'; name: 'Warehouse'; fields: { 'address': { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Address'; ofType: null; }; } }; 'clickAndCollectOption': { name: 'clickAndCollectOption'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WarehouseClickAndCollectOptionEnum'; ofType: null; }; } }; 'companyName': { name: 'companyName'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'email': { name: 'email'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'externalReference': { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isPrivate': { name: 'isPrivate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'metadata': { name: 'metadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'metafield': { name: 'metafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'metafields': { name: 'metafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'privateMetadata': { name: 'privateMetadata'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'MetadataItem'; ofType: null; }; }; }; } }; 'privateMetafield': { name: 'privateMetafield'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'privateMetafields': { name: 'privateMetafields'; type: { kind: 'SCALAR'; name: 'Metadata'; ofType: null; } }; 'shippingZones': { name: 'shippingZones'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'ShippingZoneCountableConnection'; ofType: null; }; } }; 'slug': { name: 'slug'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'stocks': { name: 'stocks'; type: { kind: 'OBJECT'; name: 'StockCountableConnection'; ofType: null; } }; }; };
    'WarehouseClickAndCollectOptionEnum': { name: 'WarehouseClickAndCollectOptionEnum'; enumValues: 'DISABLED' | 'LOCAL' | 'ALL'; };
    'WarehouseCountableConnection': { kind: 'OBJECT'; name: 'WarehouseCountableConnection'; fields: { 'edges': { name: 'edges'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WarehouseCountableEdge'; ofType: null; }; }; }; } }; 'pageInfo': { name: 'pageInfo'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'PageInfo'; ofType: null; }; } }; 'totalCount': { name: 'totalCount'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'WarehouseCountableEdge': { kind: 'OBJECT'; name: 'WarehouseCountableEdge'; fields: { 'cursor': { name: 'cursor'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'node': { name: 'node'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; }; } }; }; };
    'WarehouseCreate': { kind: 'OBJECT'; name: 'WarehouseCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WarehouseError'; ofType: null; }; }; }; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; 'warehouseErrors': { name: 'warehouseErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WarehouseError'; ofType: null; }; }; }; } }; }; };
    'WarehouseCreateInput': { kind: 'INPUT_OBJECT'; name: 'WarehouseCreateInput'; isOneOf: false; inputFields: [{ name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'address'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; }; defaultValue: null }, { name: 'shippingZones'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }]; };
    'WarehouseCreated': { kind: 'OBJECT'; name: 'WarehouseCreated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; }; };
    'WarehouseDelete': { kind: 'OBJECT'; name: 'WarehouseDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WarehouseError'; ofType: null; }; }; }; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; 'warehouseErrors': { name: 'warehouseErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WarehouseError'; ofType: null; }; }; }; } }; }; };
    'WarehouseDeleted': { kind: 'OBJECT'; name: 'WarehouseDeleted'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; }; };
    'WarehouseError': { kind: 'OBJECT'; name: 'WarehouseError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WarehouseErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'shippingZones': { name: 'shippingZones'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; } }; }; };
    'WarehouseErrorCode': { name: 'WarehouseErrorCode'; enumValues: 'ALREADY_EXISTS' | 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE'; };
    'WarehouseFilterInput': { kind: 'INPUT_OBJECT'; name: 'WarehouseFilterInput'; isOneOf: false; inputFields: [{ name: 'clickAndCollectOption'; type: { kind: 'ENUM'; name: 'WarehouseClickAndCollectOptionEnum'; ofType: null; }; defaultValue: null }, { name: 'metadata'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'MetadataFilter'; ofType: null; }; }; }; defaultValue: null }, { name: 'search'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'ids'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'isPrivate'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'channels'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; }; }; defaultValue: null }, { name: 'slugs'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'WarehouseMetadataUpdated': { kind: 'OBJECT'; name: 'WarehouseMetadataUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; }; };
    'WarehouseShippingZoneAssign': { kind: 'OBJECT'; name: 'WarehouseShippingZoneAssign'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WarehouseError'; ofType: null; }; }; }; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; 'warehouseErrors': { name: 'warehouseErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WarehouseError'; ofType: null; }; }; }; } }; }; };
    'WarehouseShippingZoneUnassign': { kind: 'OBJECT'; name: 'WarehouseShippingZoneUnassign'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WarehouseError'; ofType: null; }; }; }; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; 'warehouseErrors': { name: 'warehouseErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WarehouseError'; ofType: null; }; }; }; } }; }; };
    'WarehouseSortField': { name: 'WarehouseSortField'; enumValues: 'NAME'; };
    'WarehouseSortingInput': { kind: 'INPUT_OBJECT'; name: 'WarehouseSortingInput'; isOneOf: false; inputFields: [{ name: 'direction'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'OrderDirection'; ofType: null; }; }; defaultValue: null }, { name: 'field'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WarehouseSortField'; ofType: null; }; }; defaultValue: null }]; };
    'WarehouseUpdate': { kind: 'OBJECT'; name: 'WarehouseUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WarehouseError'; ofType: null; }; }; }; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; 'warehouseErrors': { name: 'warehouseErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WarehouseError'; ofType: null; }; }; }; } }; }; };
    'WarehouseUpdateInput': { kind: 'INPUT_OBJECT'; name: 'WarehouseUpdateInput'; isOneOf: false; inputFields: [{ name: 'slug'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'email'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'externalReference'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'address'; type: { kind: 'INPUT_OBJECT'; name: 'AddressInput'; ofType: null; }; defaultValue: null }, { name: 'clickAndCollectOption'; type: { kind: 'ENUM'; name: 'WarehouseClickAndCollectOptionEnum'; ofType: null; }; defaultValue: null }, { name: 'isPrivate'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }]; };
    'WarehouseUpdated': { kind: 'OBJECT'; name: 'WarehouseUpdated'; fields: { 'issuedAt': { name: 'issuedAt'; type: { kind: 'SCALAR'; name: 'DateTime'; ofType: null; } }; 'issuingPrincipal': { name: 'issuingPrincipal'; type: { kind: 'UNION'; name: 'IssuingPrincipal'; ofType: null; } }; 'recipient': { name: 'recipient'; type: { kind: 'OBJECT'; name: 'App'; ofType: null; } }; 'version': { name: 'version'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'warehouse': { name: 'warehouse'; type: { kind: 'OBJECT'; name: 'Warehouse'; ofType: null; } }; }; };
    'Webhook': { kind: 'OBJECT'; name: 'Webhook'; fields: { 'app': { name: 'app'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'App'; ofType: null; }; } }; 'asyncEvents': { name: 'asyncEvents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookEventAsync'; ofType: null; }; }; }; } }; 'customHeaders': { name: 'customHeaders'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; 'eventDeliveries': { name: 'eventDeliveries'; type: { kind: 'OBJECT'; name: 'EventDeliveryCountableConnection'; ofType: null; } }; 'events': { name: 'events'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookEvent'; ofType: null; }; }; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; } }; 'isActive': { name: 'isActive'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'secretKey': { name: 'secretKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'subscriptionQuery': { name: 'subscriptionQuery'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'syncEvents': { name: 'syncEvents'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookEventSync'; ofType: null; }; }; }; } }; 'targetUrl': { name: 'targetUrl'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'WebhookCreate': { kind: 'OBJECT'; name: 'WebhookCreate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookError'; ofType: null; }; }; }; } }; 'webhook': { name: 'webhook'; type: { kind: 'OBJECT'; name: 'Webhook'; ofType: null; } }; 'webhookErrors': { name: 'webhookErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookError'; ofType: null; }; }; }; } }; }; };
    'WebhookCreateInput': { kind: 'INPUT_OBJECT'; name: 'WebhookCreateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'targetUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'events'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventTypeEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'asyncEvents'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventTypeAsyncEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'syncEvents'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventTypeSyncEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'app'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'isActive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'secretKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'query'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'customHeaders'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }]; };
    'WebhookDelete': { kind: 'OBJECT'; name: 'WebhookDelete'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookError'; ofType: null; }; }; }; } }; 'webhook': { name: 'webhook'; type: { kind: 'OBJECT'; name: 'Webhook'; ofType: null; } }; 'webhookErrors': { name: 'webhookErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookError'; ofType: null; }; }; }; } }; }; };
    'WebhookDryRun': { kind: 'OBJECT'; name: 'WebhookDryRun'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookDryRunError'; ofType: null; }; }; }; } }; 'payload': { name: 'payload'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; } }; }; };
    'WebhookDryRunError': { kind: 'OBJECT'; name: 'WebhookDryRunError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookDryRunErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'WebhookDryRunErrorCode': { name: 'WebhookDryRunErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'INVALID_ID' | 'MISSING_PERMISSION' | 'TYPE_NOT_SUPPORTED' | 'SYNTAX' | 'MISSING_SUBSCRIPTION' | 'UNABLE_TO_PARSE' | 'MISSING_EVENT'; };
    'WebhookError': { kind: 'OBJECT'; name: 'WebhookError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'WebhookErrorCode': { name: 'WebhookErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'INVALID' | 'NOT_FOUND' | 'REQUIRED' | 'UNIQUE' | 'DELETE_FAILED' | 'SYNTAX' | 'MISSING_SUBSCRIPTION' | 'UNABLE_TO_PARSE' | 'MISSING_EVENT' | 'INVALID_CUSTOM_HEADERS' | 'INVALID_NOTIFY_WITH_SUBSCRIPTION'; };
    'WebhookEvent': { kind: 'OBJECT'; name: 'WebhookEvent'; fields: { 'eventType': { name: 'eventType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventTypeEnum'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'WebhookEventAsync': { kind: 'OBJECT'; name: 'WebhookEventAsync'; fields: { 'eventType': { name: 'eventType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventTypeAsyncEnum'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'WebhookEventSync': { kind: 'OBJECT'; name: 'WebhookEventSync'; fields: { 'eventType': { name: 'eventType'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventTypeSyncEnum'; ofType: null; }; } }; 'name': { name: 'name'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'WebhookEventTypeAsyncEnum': { name: 'WebhookEventTypeAsyncEnum'; enumValues: 'ANY_EVENTS' | 'ACCOUNT_CONFIRMATION_REQUESTED' | 'ACCOUNT_CHANGE_EMAIL_REQUESTED' | 'ACCOUNT_EMAIL_CHANGED' | 'ACCOUNT_SET_PASSWORD_REQUESTED' | 'ACCOUNT_CONFIRMED' | 'ACCOUNT_DELETE_REQUESTED' | 'ACCOUNT_DELETED' | 'ADDRESS_CREATED' | 'ADDRESS_UPDATED' | 'ADDRESS_DELETED' | 'APP_INSTALLED' | 'APP_UPDATED' | 'APP_DELETED' | 'APP_STATUS_CHANGED' | 'ATTRIBUTE_CREATED' | 'ATTRIBUTE_UPDATED' | 'ATTRIBUTE_DELETED' | 'ATTRIBUTE_VALUE_CREATED' | 'ATTRIBUTE_VALUE_UPDATED' | 'ATTRIBUTE_VALUE_DELETED' | 'CATEGORY_CREATED' | 'CATEGORY_UPDATED' | 'CATEGORY_DELETED' | 'CHANNEL_CREATED' | 'CHANNEL_UPDATED' | 'CHANNEL_DELETED' | 'CHANNEL_STATUS_CHANGED' | 'CHANNEL_METADATA_UPDATED' | 'GIFT_CARD_CREATED' | 'GIFT_CARD_UPDATED' | 'GIFT_CARD_DELETED' | 'GIFT_CARD_SENT' | 'GIFT_CARD_STATUS_CHANGED' | 'GIFT_CARD_METADATA_UPDATED' | 'GIFT_CARD_EXPORT_COMPLETED' | 'MENU_CREATED' | 'MENU_UPDATED' | 'MENU_DELETED' | 'MENU_ITEM_CREATED' | 'MENU_ITEM_UPDATED' | 'MENU_ITEM_DELETED' | 'ORDER_CREATED' | 'ORDER_CONFIRMED' | 'ORDER_PAID' | 'ORDER_FULLY_PAID' | 'ORDER_REFUNDED' | 'ORDER_FULLY_REFUNDED' | 'ORDER_UPDATED' | 'ORDER_CANCELLED' | 'ORDER_EXPIRED' | 'ORDER_FULFILLED' | 'ORDER_METADATA_UPDATED' | 'ORDER_BULK_CREATED' | 'FULFILLMENT_CREATED' | 'FULFILLMENT_CANCELED' | 'FULFILLMENT_APPROVED' | 'FULFILLMENT_METADATA_UPDATED' | 'FULFILLMENT_TRACKING_NUMBER_UPDATED' | 'DRAFT_ORDER_CREATED' | 'DRAFT_ORDER_UPDATED' | 'DRAFT_ORDER_DELETED' | 'SALE_CREATED' | 'SALE_UPDATED' | 'SALE_DELETED' | 'SALE_TOGGLE' | 'PROMOTION_CREATED' | 'PROMOTION_UPDATED' | 'PROMOTION_DELETED' | 'PROMOTION_STARTED' | 'PROMOTION_ENDED' | 'PROMOTION_RULE_CREATED' | 'PROMOTION_RULE_UPDATED' | 'PROMOTION_RULE_DELETED' | 'INVOICE_REQUESTED' | 'INVOICE_DELETED' | 'INVOICE_SENT' | 'CUSTOMER_CREATED' | 'CUSTOMER_UPDATED' | 'CUSTOMER_DELETED' | 'CUSTOMER_METADATA_UPDATED' | 'COLLECTION_CREATED' | 'COLLECTION_UPDATED' | 'COLLECTION_DELETED' | 'COLLECTION_METADATA_UPDATED' | 'PRODUCT_CREATED' | 'PRODUCT_UPDATED' | 'PRODUCT_DELETED' | 'PRODUCT_METADATA_UPDATED' | 'PRODUCT_EXPORT_COMPLETED' | 'PRODUCT_MEDIA_CREATED' | 'PRODUCT_MEDIA_UPDATED' | 'PRODUCT_MEDIA_DELETED' | 'PRODUCT_VARIANT_CREATED' | 'PRODUCT_VARIANT_UPDATED' | 'PRODUCT_VARIANT_DELETED' | 'PRODUCT_VARIANT_METADATA_UPDATED' | 'PRODUCT_VARIANT_OUT_OF_STOCK' | 'PRODUCT_VARIANT_BACK_IN_STOCK' | 'PRODUCT_VARIANT_STOCK_UPDATED' | 'CHECKOUT_CREATED' | 'CHECKOUT_UPDATED' | 'CHECKOUT_FULLY_PAID' | 'CHECKOUT_METADATA_UPDATED' | 'NOTIFY_USER' | 'PAGE_CREATED' | 'PAGE_UPDATED' | 'PAGE_DELETED' | 'PAGE_TYPE_CREATED' | 'PAGE_TYPE_UPDATED' | 'PAGE_TYPE_DELETED' | 'PERMISSION_GROUP_CREATED' | 'PERMISSION_GROUP_UPDATED' | 'PERMISSION_GROUP_DELETED' | 'SHIPPING_PRICE_CREATED' | 'SHIPPING_PRICE_UPDATED' | 'SHIPPING_PRICE_DELETED' | 'SHIPPING_ZONE_CREATED' | 'SHIPPING_ZONE_UPDATED' | 'SHIPPING_ZONE_DELETED' | 'SHIPPING_ZONE_METADATA_UPDATED' | 'STAFF_CREATED' | 'STAFF_UPDATED' | 'STAFF_DELETED' | 'STAFF_SET_PASSWORD_REQUESTED' | 'TRANSACTION_ITEM_METADATA_UPDATED' | 'TRANSLATION_CREATED' | 'TRANSLATION_UPDATED' | 'WAREHOUSE_CREATED' | 'WAREHOUSE_UPDATED' | 'WAREHOUSE_DELETED' | 'WAREHOUSE_METADATA_UPDATED' | 'VOUCHER_CREATED' | 'VOUCHER_UPDATED' | 'VOUCHER_DELETED' | 'VOUCHER_CODES_CREATED' | 'VOUCHER_CODES_DELETED' | 'VOUCHER_METADATA_UPDATED' | 'VOUCHER_CODE_EXPORT_COMPLETED' | 'OBSERVABILITY' | 'THUMBNAIL_CREATED' | 'SHOP_METADATA_UPDATED'; };
    'WebhookEventTypeEnum': { name: 'WebhookEventTypeEnum'; enumValues: 'ANY_EVENTS' | 'ACCOUNT_CONFIRMATION_REQUESTED' | 'ACCOUNT_CHANGE_EMAIL_REQUESTED' | 'ACCOUNT_EMAIL_CHANGED' | 'ACCOUNT_SET_PASSWORD_REQUESTED' | 'ACCOUNT_CONFIRMED' | 'ACCOUNT_DELETE_REQUESTED' | 'ACCOUNT_DELETED' | 'ADDRESS_CREATED' | 'ADDRESS_UPDATED' | 'ADDRESS_DELETED' | 'APP_INSTALLED' | 'APP_UPDATED' | 'APP_DELETED' | 'APP_STATUS_CHANGED' | 'ATTRIBUTE_CREATED' | 'ATTRIBUTE_UPDATED' | 'ATTRIBUTE_DELETED' | 'ATTRIBUTE_VALUE_CREATED' | 'ATTRIBUTE_VALUE_UPDATED' | 'ATTRIBUTE_VALUE_DELETED' | 'CATEGORY_CREATED' | 'CATEGORY_UPDATED' | 'CATEGORY_DELETED' | 'CHANNEL_CREATED' | 'CHANNEL_UPDATED' | 'CHANNEL_DELETED' | 'CHANNEL_STATUS_CHANGED' | 'CHANNEL_METADATA_UPDATED' | 'GIFT_CARD_CREATED' | 'GIFT_CARD_UPDATED' | 'GIFT_CARD_DELETED' | 'GIFT_CARD_SENT' | 'GIFT_CARD_STATUS_CHANGED' | 'GIFT_CARD_METADATA_UPDATED' | 'GIFT_CARD_EXPORT_COMPLETED' | 'MENU_CREATED' | 'MENU_UPDATED' | 'MENU_DELETED' | 'MENU_ITEM_CREATED' | 'MENU_ITEM_UPDATED' | 'MENU_ITEM_DELETED' | 'ORDER_CREATED' | 'ORDER_CONFIRMED' | 'ORDER_PAID' | 'ORDER_FULLY_PAID' | 'ORDER_REFUNDED' | 'ORDER_FULLY_REFUNDED' | 'ORDER_UPDATED' | 'ORDER_CANCELLED' | 'ORDER_EXPIRED' | 'ORDER_FULFILLED' | 'ORDER_METADATA_UPDATED' | 'ORDER_BULK_CREATED' | 'FULFILLMENT_CREATED' | 'FULFILLMENT_CANCELED' | 'FULFILLMENT_APPROVED' | 'FULFILLMENT_METADATA_UPDATED' | 'FULFILLMENT_TRACKING_NUMBER_UPDATED' | 'DRAFT_ORDER_CREATED' | 'DRAFT_ORDER_UPDATED' | 'DRAFT_ORDER_DELETED' | 'SALE_CREATED' | 'SALE_UPDATED' | 'SALE_DELETED' | 'SALE_TOGGLE' | 'PROMOTION_CREATED' | 'PROMOTION_UPDATED' | 'PROMOTION_DELETED' | 'PROMOTION_STARTED' | 'PROMOTION_ENDED' | 'PROMOTION_RULE_CREATED' | 'PROMOTION_RULE_UPDATED' | 'PROMOTION_RULE_DELETED' | 'INVOICE_REQUESTED' | 'INVOICE_DELETED' | 'INVOICE_SENT' | 'CUSTOMER_CREATED' | 'CUSTOMER_UPDATED' | 'CUSTOMER_DELETED' | 'CUSTOMER_METADATA_UPDATED' | 'COLLECTION_CREATED' | 'COLLECTION_UPDATED' | 'COLLECTION_DELETED' | 'COLLECTION_METADATA_UPDATED' | 'PRODUCT_CREATED' | 'PRODUCT_UPDATED' | 'PRODUCT_DELETED' | 'PRODUCT_METADATA_UPDATED' | 'PRODUCT_EXPORT_COMPLETED' | 'PRODUCT_MEDIA_CREATED' | 'PRODUCT_MEDIA_UPDATED' | 'PRODUCT_MEDIA_DELETED' | 'PRODUCT_VARIANT_CREATED' | 'PRODUCT_VARIANT_UPDATED' | 'PRODUCT_VARIANT_DELETED' | 'PRODUCT_VARIANT_METADATA_UPDATED' | 'PRODUCT_VARIANT_OUT_OF_STOCK' | 'PRODUCT_VARIANT_BACK_IN_STOCK' | 'PRODUCT_VARIANT_STOCK_UPDATED' | 'CHECKOUT_CREATED' | 'CHECKOUT_UPDATED' | 'CHECKOUT_FULLY_PAID' | 'CHECKOUT_METADATA_UPDATED' | 'NOTIFY_USER' | 'PAGE_CREATED' | 'PAGE_UPDATED' | 'PAGE_DELETED' | 'PAGE_TYPE_CREATED' | 'PAGE_TYPE_UPDATED' | 'PAGE_TYPE_DELETED' | 'PERMISSION_GROUP_CREATED' | 'PERMISSION_GROUP_UPDATED' | 'PERMISSION_GROUP_DELETED' | 'SHIPPING_PRICE_CREATED' | 'SHIPPING_PRICE_UPDATED' | 'SHIPPING_PRICE_DELETED' | 'SHIPPING_ZONE_CREATED' | 'SHIPPING_ZONE_UPDATED' | 'SHIPPING_ZONE_DELETED' | 'SHIPPING_ZONE_METADATA_UPDATED' | 'STAFF_CREATED' | 'STAFF_UPDATED' | 'STAFF_DELETED' | 'STAFF_SET_PASSWORD_REQUESTED' | 'TRANSACTION_ITEM_METADATA_UPDATED' | 'TRANSLATION_CREATED' | 'TRANSLATION_UPDATED' | 'WAREHOUSE_CREATED' | 'WAREHOUSE_UPDATED' | 'WAREHOUSE_DELETED' | 'WAREHOUSE_METADATA_UPDATED' | 'VOUCHER_CREATED' | 'VOUCHER_UPDATED' | 'VOUCHER_DELETED' | 'VOUCHER_CODES_CREATED' | 'VOUCHER_CODES_DELETED' | 'VOUCHER_METADATA_UPDATED' | 'VOUCHER_CODE_EXPORT_COMPLETED' | 'OBSERVABILITY' | 'THUMBNAIL_CREATED' | 'SHOP_METADATA_UPDATED' | 'PAYMENT_LIST_GATEWAYS' | 'PAYMENT_AUTHORIZE' | 'PAYMENT_CAPTURE' | 'PAYMENT_REFUND' | 'PAYMENT_VOID' | 'PAYMENT_CONFIRM' | 'PAYMENT_PROCESS' | 'CHECKOUT_CALCULATE_TAXES' | 'ORDER_CALCULATE_TAXES' | 'TRANSACTION_CHARGE_REQUESTED' | 'TRANSACTION_REFUND_REQUESTED' | 'TRANSACTION_CANCELATION_REQUESTED' | 'SHIPPING_LIST_METHODS_FOR_CHECKOUT' | 'CHECKOUT_FILTER_SHIPPING_METHODS' | 'ORDER_FILTER_SHIPPING_METHODS' | 'PAYMENT_GATEWAY_INITIALIZE_SESSION' | 'TRANSACTION_INITIALIZE_SESSION' | 'TRANSACTION_PROCESS_SESSION' | 'LIST_STORED_PAYMENT_METHODS' | 'STORED_PAYMENT_METHOD_DELETE_REQUESTED' | 'PAYMENT_GATEWAY_INITIALIZE_TOKENIZATION_SESSION' | 'PAYMENT_METHOD_INITIALIZE_TOKENIZATION_SESSION' | 'PAYMENT_METHOD_PROCESS_TOKENIZATION_SESSION'; };
    'WebhookEventTypeSyncEnum': { name: 'WebhookEventTypeSyncEnum'; enumValues: 'PAYMENT_LIST_GATEWAYS' | 'PAYMENT_AUTHORIZE' | 'PAYMENT_CAPTURE' | 'PAYMENT_REFUND' | 'PAYMENT_VOID' | 'PAYMENT_CONFIRM' | 'PAYMENT_PROCESS' | 'CHECKOUT_CALCULATE_TAXES' | 'ORDER_CALCULATE_TAXES' | 'TRANSACTION_CHARGE_REQUESTED' | 'TRANSACTION_REFUND_REQUESTED' | 'TRANSACTION_CANCELATION_REQUESTED' | 'SHIPPING_LIST_METHODS_FOR_CHECKOUT' | 'CHECKOUT_FILTER_SHIPPING_METHODS' | 'ORDER_FILTER_SHIPPING_METHODS' | 'PAYMENT_GATEWAY_INITIALIZE_SESSION' | 'TRANSACTION_INITIALIZE_SESSION' | 'TRANSACTION_PROCESS_SESSION' | 'LIST_STORED_PAYMENT_METHODS' | 'STORED_PAYMENT_METHOD_DELETE_REQUESTED' | 'PAYMENT_GATEWAY_INITIALIZE_TOKENIZATION_SESSION' | 'PAYMENT_METHOD_INITIALIZE_TOKENIZATION_SESSION' | 'PAYMENT_METHOD_PROCESS_TOKENIZATION_SESSION'; };
    'WebhookSampleEventTypeEnum': { name: 'WebhookSampleEventTypeEnum'; enumValues: 'ACCOUNT_CONFIRMATION_REQUESTED' | 'ACCOUNT_CHANGE_EMAIL_REQUESTED' | 'ACCOUNT_EMAIL_CHANGED' | 'ACCOUNT_SET_PASSWORD_REQUESTED' | 'ACCOUNT_CONFIRMED' | 'ACCOUNT_DELETE_REQUESTED' | 'ACCOUNT_DELETED' | 'ADDRESS_CREATED' | 'ADDRESS_UPDATED' | 'ADDRESS_DELETED' | 'APP_INSTALLED' | 'APP_UPDATED' | 'APP_DELETED' | 'APP_STATUS_CHANGED' | 'ATTRIBUTE_CREATED' | 'ATTRIBUTE_UPDATED' | 'ATTRIBUTE_DELETED' | 'ATTRIBUTE_VALUE_CREATED' | 'ATTRIBUTE_VALUE_UPDATED' | 'ATTRIBUTE_VALUE_DELETED' | 'CATEGORY_CREATED' | 'CATEGORY_UPDATED' | 'CATEGORY_DELETED' | 'CHANNEL_CREATED' | 'CHANNEL_UPDATED' | 'CHANNEL_DELETED' | 'CHANNEL_STATUS_CHANGED' | 'CHANNEL_METADATA_UPDATED' | 'GIFT_CARD_CREATED' | 'GIFT_CARD_UPDATED' | 'GIFT_CARD_DELETED' | 'GIFT_CARD_SENT' | 'GIFT_CARD_STATUS_CHANGED' | 'GIFT_CARD_METADATA_UPDATED' | 'GIFT_CARD_EXPORT_COMPLETED' | 'MENU_CREATED' | 'MENU_UPDATED' | 'MENU_DELETED' | 'MENU_ITEM_CREATED' | 'MENU_ITEM_UPDATED' | 'MENU_ITEM_DELETED' | 'ORDER_CREATED' | 'ORDER_CONFIRMED' | 'ORDER_PAID' | 'ORDER_FULLY_PAID' | 'ORDER_REFUNDED' | 'ORDER_FULLY_REFUNDED' | 'ORDER_UPDATED' | 'ORDER_CANCELLED' | 'ORDER_EXPIRED' | 'ORDER_FULFILLED' | 'ORDER_METADATA_UPDATED' | 'ORDER_BULK_CREATED' | 'FULFILLMENT_CREATED' | 'FULFILLMENT_CANCELED' | 'FULFILLMENT_APPROVED' | 'FULFILLMENT_METADATA_UPDATED' | 'FULFILLMENT_TRACKING_NUMBER_UPDATED' | 'DRAFT_ORDER_CREATED' | 'DRAFT_ORDER_UPDATED' | 'DRAFT_ORDER_DELETED' | 'SALE_CREATED' | 'SALE_UPDATED' | 'SALE_DELETED' | 'SALE_TOGGLE' | 'PROMOTION_CREATED' | 'PROMOTION_UPDATED' | 'PROMOTION_DELETED' | 'PROMOTION_STARTED' | 'PROMOTION_ENDED' | 'PROMOTION_RULE_CREATED' | 'PROMOTION_RULE_UPDATED' | 'PROMOTION_RULE_DELETED' | 'INVOICE_REQUESTED' | 'INVOICE_DELETED' | 'INVOICE_SENT' | 'CUSTOMER_CREATED' | 'CUSTOMER_UPDATED' | 'CUSTOMER_DELETED' | 'CUSTOMER_METADATA_UPDATED' | 'COLLECTION_CREATED' | 'COLLECTION_UPDATED' | 'COLLECTION_DELETED' | 'COLLECTION_METADATA_UPDATED' | 'PRODUCT_CREATED' | 'PRODUCT_UPDATED' | 'PRODUCT_DELETED' | 'PRODUCT_METADATA_UPDATED' | 'PRODUCT_EXPORT_COMPLETED' | 'PRODUCT_MEDIA_CREATED' | 'PRODUCT_MEDIA_UPDATED' | 'PRODUCT_MEDIA_DELETED' | 'PRODUCT_VARIANT_CREATED' | 'PRODUCT_VARIANT_UPDATED' | 'PRODUCT_VARIANT_DELETED' | 'PRODUCT_VARIANT_METADATA_UPDATED' | 'PRODUCT_VARIANT_OUT_OF_STOCK' | 'PRODUCT_VARIANT_BACK_IN_STOCK' | 'PRODUCT_VARIANT_STOCK_UPDATED' | 'CHECKOUT_CREATED' | 'CHECKOUT_UPDATED' | 'CHECKOUT_FULLY_PAID' | 'CHECKOUT_METADATA_UPDATED' | 'NOTIFY_USER' | 'PAGE_CREATED' | 'PAGE_UPDATED' | 'PAGE_DELETED' | 'PAGE_TYPE_CREATED' | 'PAGE_TYPE_UPDATED' | 'PAGE_TYPE_DELETED' | 'PERMISSION_GROUP_CREATED' | 'PERMISSION_GROUP_UPDATED' | 'PERMISSION_GROUP_DELETED' | 'SHIPPING_PRICE_CREATED' | 'SHIPPING_PRICE_UPDATED' | 'SHIPPING_PRICE_DELETED' | 'SHIPPING_ZONE_CREATED' | 'SHIPPING_ZONE_UPDATED' | 'SHIPPING_ZONE_DELETED' | 'SHIPPING_ZONE_METADATA_UPDATED' | 'STAFF_CREATED' | 'STAFF_UPDATED' | 'STAFF_DELETED' | 'STAFF_SET_PASSWORD_REQUESTED' | 'TRANSACTION_ITEM_METADATA_UPDATED' | 'TRANSLATION_CREATED' | 'TRANSLATION_UPDATED' | 'WAREHOUSE_CREATED' | 'WAREHOUSE_UPDATED' | 'WAREHOUSE_DELETED' | 'WAREHOUSE_METADATA_UPDATED' | 'VOUCHER_CREATED' | 'VOUCHER_UPDATED' | 'VOUCHER_DELETED' | 'VOUCHER_CODES_CREATED' | 'VOUCHER_CODES_DELETED' | 'VOUCHER_METADATA_UPDATED' | 'VOUCHER_CODE_EXPORT_COMPLETED' | 'OBSERVABILITY' | 'THUMBNAIL_CREATED' | 'SHOP_METADATA_UPDATED'; };
    'WebhookTrigger': { kind: 'OBJECT'; name: 'WebhookTrigger'; fields: { 'delivery': { name: 'delivery'; type: { kind: 'OBJECT'; name: 'EventDelivery'; ofType: null; } }; 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookTriggerError'; ofType: null; }; }; }; } }; }; };
    'WebhookTriggerError': { kind: 'OBJECT'; name: 'WebhookTriggerError'; fields: { 'code': { name: 'code'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookTriggerErrorCode'; ofType: null; }; } }; 'field': { name: 'field'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'message': { name: 'message'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'WebhookTriggerErrorCode': { name: 'WebhookTriggerErrorCode'; enumValues: 'GRAPHQL_ERROR' | 'NOT_FOUND' | 'INVALID_ID' | 'MISSING_PERMISSION' | 'TYPE_NOT_SUPPORTED' | 'SYNTAX' | 'MISSING_SUBSCRIPTION' | 'UNABLE_TO_PARSE' | 'MISSING_QUERY' | 'MISSING_EVENT'; };
    'WebhookUpdate': { kind: 'OBJECT'; name: 'WebhookUpdate'; fields: { 'errors': { name: 'errors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookError'; ofType: null; }; }; }; } }; 'webhook': { name: 'webhook'; type: { kind: 'OBJECT'; name: 'Webhook'; ofType: null; } }; 'webhookErrors': { name: 'webhookErrors'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'WebhookError'; ofType: null; }; }; }; } }; }; };
    'WebhookUpdateInput': { kind: 'INPUT_OBJECT'; name: 'WebhookUpdateInput'; isOneOf: false; inputFields: [{ name: 'name'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'targetUrl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'events'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventTypeEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'asyncEvents'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventTypeAsyncEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'syncEvents'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WebhookEventTypeSyncEnum'; ofType: null; }; }; }; defaultValue: null }, { name: 'app'; type: { kind: 'SCALAR'; name: 'ID'; ofType: null; }; defaultValue: null }, { name: 'isActive'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'secretKey'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'query'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'customHeaders'; type: { kind: 'SCALAR'; name: 'JSONString'; ofType: null; }; defaultValue: null }]; };
    'Weight': { kind: 'OBJECT'; name: 'Weight'; fields: { 'unit': { name: 'unit'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'WeightUnitsEnum'; ofType: null; }; } }; 'value': { name: 'value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Float'; ofType: null; }; } }; }; };
    'WeightScalar': unknown;
    'WeightUnitsEnum': { name: 'WeightUnitsEnum'; enumValues: 'G' | 'LB' | 'OZ' | 'KG' | 'TONNE'; };
    '_Any': unknown;
    '_Entity': { kind: 'UNION'; name: '_Entity'; fields: {}; possibleTypes: 'Address' | 'App' | 'Category' | 'Collection' | 'Group' | 'Order' | 'PageType' | 'Product' | 'ProductMedia' | 'ProductType' | 'ProductVariant' | 'User'; };
    '_Service': { kind: 'OBJECT'; name: '_Service'; fields: { 'sdl': { name: 'sdl'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: never;
  query: "Query";
  mutation: "Mutation";
  subscription: "Subscription";
  types: introspection_types;
};

import * as gqlTada from "gql.tada";

declare module "gql.tada" {
  interface setupSchema {
    introspection: introspection;
  }
}
